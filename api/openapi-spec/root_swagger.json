{
  "swagger": "2.0",
  "info": {
   "title": "Kubernetes",
   "version": "unversioned"
  },
  "paths": {
   "/api/": {
    "get": {
     "description": "get available API versions",
     "consumes": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.APIVersions"
       }
      }
     }
    }
   },
   "/api/v1/": {
    "get": {
     "description": "get available resources",
     "consumes": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.APIResourceList"
       }
      }
     }
    }
   },
   "/api/v1/componentstatuses": {
    "get": {
     "description": "list objects of kind ComponentStatus",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listComponentStatus",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ComponentStatusList"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/componentstatuses/{name}": {
    "get": {
     "description": "read the specified ComponentStatus",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readComponentStatus",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ComponentStatus"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the ComponentStatus",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/configmaps": {
    "get": {
     "description": "list or watch objects of kind ConfigMap",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listConfigMapForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ConfigMapList"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/endpoints": {
    "get": {
     "description": "list or watch objects of kind Endpoints",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listEndpointsForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.EndpointsList"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/events": {
    "get": {
     "description": "list or watch objects of kind Event",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listEventForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.EventList"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/limitranges": {
    "get": {
     "description": "list or watch objects of kind LimitRange",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listLimitRangeForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.LimitRangeList"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces": {
    "get": {
     "description": "list or watch objects of kind Namespace",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listNamespace",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.NamespaceList"
       }
      }
     }
    },
    "post": {
     "description": "create a Namespace",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespace",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Namespace"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Namespace"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of Namespace",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionNamespace",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/bindings": {
    "post": {
     "description": "create a Binding",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespacedBinding",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Binding"
       }
      }
     }
    },
    "parameters": [
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/v1.Binding"
      }
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/configmaps": {
    "get": {
     "description": "list or watch objects of kind ConfigMap",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listNamespacedConfigMap",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ConfigMapList"
       }
      }
     }
    },
    "post": {
     "description": "create a ConfigMap",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespacedConfigMap",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.ConfigMap"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ConfigMap"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of ConfigMap",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionNamespacedConfigMap",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/configmaps/{name}": {
    "get": {
     "description": "read the specified ConfigMap",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedConfigMap",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ConfigMap"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified ConfigMap",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedConfigMap",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.ConfigMap"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ConfigMap"
       }
      }
     }
    },
    "delete": {
     "description": "delete a ConfigMap",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteNamespacedConfigMap",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified ConfigMap",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedConfigMap",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ConfigMap"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the ConfigMap",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/endpoints": {
    "get": {
     "description": "list or watch objects of kind Endpoints",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listNamespacedEndpoints",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.EndpointsList"
       }
      }
     }
    },
    "post": {
     "description": "create a Endpoints",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespacedEndpoints",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Endpoints"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Endpoints"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of Endpoints",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionNamespacedEndpoints",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/endpoints/{name}": {
    "get": {
     "description": "read the specified Endpoints",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedEndpoints",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Endpoints"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified Endpoints",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedEndpoints",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Endpoints"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Endpoints"
       }
      }
     }
    },
    "delete": {
     "description": "delete a Endpoints",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteNamespacedEndpoints",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified Endpoints",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedEndpoints",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Endpoints"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Endpoints",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/events": {
    "get": {
     "description": "list or watch objects of kind Event",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listNamespacedEvent",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.EventList"
       }
      }
     }
    },
    "post": {
     "description": "create a Event",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespacedEvent",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Event"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Event"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of Event",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionNamespacedEvent",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/events/{name}": {
    "get": {
     "description": "read the specified Event",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedEvent",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Event"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified Event",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedEvent",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Event"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Event"
       }
      }
     }
    },
    "delete": {
     "description": "delete a Event",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteNamespacedEvent",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified Event",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedEvent",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Event",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/limitranges": {
    "get": {
     "description": "list or watch objects of kind LimitRange",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listNamespacedLimitRange",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.LimitRangeList"
       }
      }
     }
    },
    "post": {
     "description": "create a LimitRange",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespacedLimitRange",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.LimitRange"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.LimitRange"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of LimitRange",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionNamespacedLimitRange",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/limitranges/{name}": {
    "get": {
     "description": "read the specified LimitRange",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedLimitRange",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.LimitRange"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified LimitRange",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedLimitRange",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.LimitRange"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.LimitRange"
       }
      }
     }
    },
    "delete": {
     "description": "delete a LimitRange",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteNamespacedLimitRange",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified LimitRange",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedLimitRange",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.LimitRange"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the LimitRange",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/persistentvolumeclaims": {
    "get": {
     "description": "list or watch objects of kind PersistentVolumeClaim",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listNamespacedPersistentVolumeClaim",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.PersistentVolumeClaimList"
       }
      }
     }
    },
    "post": {
     "description": "create a PersistentVolumeClaim",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespacedPersistentVolumeClaim",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.PersistentVolumeClaim"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.PersistentVolumeClaim"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of PersistentVolumeClaim",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionNamespacedPersistentVolumeClaim",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}": {
    "get": {
     "description": "read the specified PersistentVolumeClaim",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedPersistentVolumeClaim",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.PersistentVolumeClaim"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified PersistentVolumeClaim",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedPersistentVolumeClaim",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.PersistentVolumeClaim"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.PersistentVolumeClaim"
       }
      }
     }
    },
    "delete": {
     "description": "delete a PersistentVolumeClaim",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteNamespacedPersistentVolumeClaim",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified PersistentVolumeClaim",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedPersistentVolumeClaim",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.PersistentVolumeClaim"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the PersistentVolumeClaim",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}/status": {
    "get": {
     "description": "read status of the specified PersistentVolumeClaim",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedPersistentVolumeClaimStatus",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.PersistentVolumeClaim"
       }
      }
     }
    },
    "put": {
     "description": "replace status of the specified PersistentVolumeClaim",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedPersistentVolumeClaimStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.PersistentVolumeClaim"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.PersistentVolumeClaim"
       }
      }
     }
    },
    "patch": {
     "description": "partially update status of the specified PersistentVolumeClaim",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedPersistentVolumeClaimStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.PersistentVolumeClaim"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the PersistentVolumeClaim",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/pods": {
    "get": {
     "description": "list or watch objects of kind Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listNamespacedPod",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.PodList"
       }
      }
     }
    },
    "post": {
     "description": "create a Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespacedPod",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Pod"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Pod"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionNamespacedPod",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/pods/{name}": {
    "get": {
     "description": "read the specified Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedPod",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Pod"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedPod",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Pod"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Pod"
       }
      }
     }
    },
    "delete": {
     "description": "delete a Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteNamespacedPod",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified Pod",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedPod",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Pod"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Pod",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/pods/{name}/attach": {
    "get": {
     "description": "connect GET requests to attach of Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectGetNamespacedPodAttach",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "connect POST requests to attach of Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectPostNamespacedPodAttach",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The container in which to execute the command. Defaults to only container if there is only one container in the pod.",
      "name": "container",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Pod",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Stderr if true indicates that stderr is to be redirected for the attach call. Defaults to true.",
      "name": "stderr",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Stdin if true, redirects the standard input stream of the pod for this call. Defaults to false.",
      "name": "stdin",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Stdout if true indicates that stdout is to be redirected for the attach call. Defaults to true.",
      "name": "stdout",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "TTY if true indicates that a tty will be allocated for the attach call. This is passed through the container runtime so the tty is allocated on the worker node by the container runtime. Defaults to false.",
      "name": "tty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/pods/{name}/binding": {
    "post": {
     "description": "create binding of a Binding",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespacedBindingBinding",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Binding"
       }
      }
     }
    },
    "parameters": [
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/v1.Binding"
      }
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Binding",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/pods/{name}/eviction": {
    "post": {
     "description": "create eviction of a Eviction",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespacedEvictionEviction",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.Eviction"
       }
      }
     }
    },
    "parameters": [
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/v1alpha1.Eviction"
      }
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Eviction",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/pods/{name}/exec": {
    "get": {
     "description": "connect GET requests to exec of Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectGetNamespacedPodExec",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "connect POST requests to exec of Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectPostNamespacedPodExec",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Command is the remote command to execute. argv array. Not executed within a shell.",
      "name": "command",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Container in which to execute the command. Defaults to only container if there is only one container in the pod.",
      "name": "container",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Pod",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Redirect the standard error stream of the pod for this call. Defaults to true.",
      "name": "stderr",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Redirect the standard input stream of the pod for this call. Defaults to false.",
      "name": "stdin",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Redirect the standard output stream of the pod for this call. Defaults to true.",
      "name": "stdout",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "TTY if true indicates that a tty will be allocated for the exec call. Defaults to false.",
      "name": "tty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/pods/{name}/log": {
    "get": {
     "description": "read log of the specified Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "text/plain",
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedPodLog",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Pod"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The container for which to stream logs. Defaults to only container if there is one container in the pod.",
      "name": "container",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Follow the log stream of the pod. Defaults to false.",
      "name": "follow",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "If set, the number of bytes to read from the server before terminating the log output. This may not display a complete final line of logging, and may return slightly more or slightly less than the specified limit.",
      "name": "limitBytes",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Pod",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Return previous terminated container logs. Defaults to false.",
      "name": "previous",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "A relative time in seconds before the current time from which to show logs. If this value precedes the time a pod was started, only logs since the pod start will be returned. If this value is in the future, no logs will be returned. Only one of sinceSeconds or sinceTime may be specified.",
      "name": "sinceSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "An RFC3339 timestamp from which to show logs. If this value precedes the time a pod was started, only logs since the pod start will be returned. If this value is in the future, no logs will be returned. Only one of sinceSeconds or sinceTime may be specified.",
      "name": "sinceTime",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "If set, the number of lines from the end of the logs to show. If not specified, logs are shown from the creation of the container or sinceSeconds or sinceTime",
      "name": "tailLines",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, add an RFC3339 or RFC3339Nano timestamp at the beginning of every line of log output. Defaults to false.",
      "name": "timestamps",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/pods/{name}/portforward": {
    "get": {
     "description": "connect GET requests to portforward of Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectGetNamespacedPodPortforward",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "connect POST requests to portforward of Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectPostNamespacedPodPortforward",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Pod",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/pods/{name}/proxy": {
    "get": {
     "description": "connect GET requests to proxy of Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectGetNamespacedPodProxy",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "connect PUT requests to proxy of Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectPutNamespacedPodProxy",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "connect POST requests to proxy of Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectPostNamespacedPodProxy",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "connect DELETE requests to proxy of Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectDeleteNamespacedPodProxy",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "options": {
     "description": "connect OPTIONS requests to proxy of Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectOptionsNamespacedPodProxy",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "head": {
     "description": "connect HEAD requests to proxy of Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectHeadNamespacedPodProxy",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Pod",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Path is the URL path to use for the current proxy request to pod.",
      "name": "path",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/pods/{name}/proxy/{path}": {
    "get": {
     "description": "connect GET requests to proxy of Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectGetNamespacedPodProxyWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "connect PUT requests to proxy of Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectPutNamespacedPodProxyWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "connect POST requests to proxy of Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectPostNamespacedPodProxyWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "connect DELETE requests to proxy of Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectDeleteNamespacedPodProxyWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "options": {
     "description": "connect OPTIONS requests to proxy of Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectOptionsNamespacedPodProxyWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "head": {
     "description": "connect HEAD requests to proxy of Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectHeadNamespacedPodProxyWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Pod",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "path to the resource",
      "name": "path",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Path is the URL path to use for the current proxy request to pod.",
      "name": "path",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/pods/{name}/status": {
    "get": {
     "description": "read status of the specified Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedPodStatus",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Pod"
       }
      }
     }
    },
    "put": {
     "description": "replace status of the specified Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedPodStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Pod"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Pod"
       }
      }
     }
    },
    "patch": {
     "description": "partially update status of the specified Pod",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedPodStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Pod"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Pod",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/podtemplates": {
    "get": {
     "description": "list or watch objects of kind PodTemplate",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listNamespacedPodTemplate",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.PodTemplateList"
       }
      }
     }
    },
    "post": {
     "description": "create a PodTemplate",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespacedPodTemplate",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.PodTemplate"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.PodTemplate"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of PodTemplate",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionNamespacedPodTemplate",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/podtemplates/{name}": {
    "get": {
     "description": "read the specified PodTemplate",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedPodTemplate",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.PodTemplate"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified PodTemplate",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedPodTemplate",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.PodTemplate"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.PodTemplate"
       }
      }
     }
    },
    "delete": {
     "description": "delete a PodTemplate",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteNamespacedPodTemplate",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified PodTemplate",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedPodTemplate",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.PodTemplate"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the PodTemplate",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/replicationcontrollers": {
    "get": {
     "description": "list or watch objects of kind ReplicationController",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listNamespacedReplicationController",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ReplicationControllerList"
       }
      }
     }
    },
    "post": {
     "description": "create a ReplicationController",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespacedReplicationController",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.ReplicationController"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ReplicationController"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of ReplicationController",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionNamespacedReplicationController",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/replicationcontrollers/{name}": {
    "get": {
     "description": "read the specified ReplicationController",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedReplicationController",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ReplicationController"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified ReplicationController",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedReplicationController",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.ReplicationController"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ReplicationController"
       }
      }
     }
    },
    "delete": {
     "description": "delete a ReplicationController",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteNamespacedReplicationController",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified ReplicationController",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedReplicationController",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ReplicationController"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the ReplicationController",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/replicationcontrollers/{name}/scale": {
    "get": {
     "description": "read scale of the specified Scale",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Scale"
       }
      }
     }
    },
    "put": {
     "description": "replace scale of the specified Scale",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Scale"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Scale"
       }
      }
     }
    },
    "patch": {
     "description": "partially update scale of the specified Scale",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Scale"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Scale",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/replicationcontrollers/{name}/status": {
    "get": {
     "description": "read status of the specified ReplicationController",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedReplicationControllerStatus",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ReplicationController"
       }
      }
     }
    },
    "put": {
     "description": "replace status of the specified ReplicationController",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedReplicationControllerStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.ReplicationController"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ReplicationController"
       }
      }
     }
    },
    "patch": {
     "description": "partially update status of the specified ReplicationController",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedReplicationControllerStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ReplicationController"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the ReplicationController",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/resourcequotas": {
    "get": {
     "description": "list or watch objects of kind ResourceQuota",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listNamespacedResourceQuota",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ResourceQuotaList"
       }
      }
     }
    },
    "post": {
     "description": "create a ResourceQuota",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespacedResourceQuota",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.ResourceQuota"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ResourceQuota"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of ResourceQuota",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionNamespacedResourceQuota",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/resourcequotas/{name}": {
    "get": {
     "description": "read the specified ResourceQuota",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedResourceQuota",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ResourceQuota"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified ResourceQuota",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedResourceQuota",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.ResourceQuota"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ResourceQuota"
       }
      }
     }
    },
    "delete": {
     "description": "delete a ResourceQuota",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteNamespacedResourceQuota",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified ResourceQuota",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedResourceQuota",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ResourceQuota"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the ResourceQuota",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/resourcequotas/{name}/status": {
    "get": {
     "description": "read status of the specified ResourceQuota",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedResourceQuotaStatus",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ResourceQuota"
       }
      }
     }
    },
    "put": {
     "description": "replace status of the specified ResourceQuota",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedResourceQuotaStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.ResourceQuota"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ResourceQuota"
       }
      }
     }
    },
    "patch": {
     "description": "partially update status of the specified ResourceQuota",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedResourceQuotaStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ResourceQuota"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the ResourceQuota",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/secrets": {
    "get": {
     "description": "list or watch objects of kind Secret",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listNamespacedSecret",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.SecretList"
       }
      }
     }
    },
    "post": {
     "description": "create a Secret",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespacedSecret",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Secret"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Secret"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of Secret",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionNamespacedSecret",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/secrets/{name}": {
    "get": {
     "description": "read the specified Secret",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedSecret",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Secret"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified Secret",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedSecret",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Secret"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Secret"
       }
      }
     }
    },
    "delete": {
     "description": "delete a Secret",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteNamespacedSecret",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified Secret",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedSecret",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Secret"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Secret",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/serviceaccounts": {
    "get": {
     "description": "list or watch objects of kind ServiceAccount",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listNamespacedServiceAccount",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ServiceAccountList"
       }
      }
     }
    },
    "post": {
     "description": "create a ServiceAccount",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespacedServiceAccount",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.ServiceAccount"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ServiceAccount"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of ServiceAccount",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionNamespacedServiceAccount",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/serviceaccounts/{name}": {
    "get": {
     "description": "read the specified ServiceAccount",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedServiceAccount",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ServiceAccount"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified ServiceAccount",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedServiceAccount",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.ServiceAccount"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ServiceAccount"
       }
      }
     }
    },
    "delete": {
     "description": "delete a ServiceAccount",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteNamespacedServiceAccount",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified ServiceAccount",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedServiceAccount",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ServiceAccount"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the ServiceAccount",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/services": {
    "get": {
     "description": "list or watch objects of kind Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listNamespacedService",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ServiceList"
       }
      }
     }
    },
    "post": {
     "description": "create a Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespacedService",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Service"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Service"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/services/{name}": {
    "get": {
     "description": "read the specified Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedService",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Service"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedService",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Service"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Service"
       }
      }
     }
    },
    "delete": {
     "description": "delete a Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteNamespacedService",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified Service",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedService",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Service"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Service",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/services/{name}/proxy": {
    "get": {
     "description": "connect GET requests to proxy of Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectGetNamespacedServiceProxy",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "connect PUT requests to proxy of Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectPutNamespacedServiceProxy",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "connect POST requests to proxy of Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectPostNamespacedServiceProxy",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "connect DELETE requests to proxy of Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectDeleteNamespacedServiceProxy",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "options": {
     "description": "connect OPTIONS requests to proxy of Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectOptionsNamespacedServiceProxy",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "head": {
     "description": "connect HEAD requests to proxy of Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectHeadNamespacedServiceProxy",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Service",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Path is the part of URLs that include service endpoints, suffixes, and parameters to use for the current proxy request to service. For example, the whole request URL is http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy. Path is _search?q=user:kimchy.",
      "name": "path",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/services/{name}/proxy/{path}": {
    "get": {
     "description": "connect GET requests to proxy of Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectGetNamespacedServiceProxyWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "connect PUT requests to proxy of Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectPutNamespacedServiceProxyWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "connect POST requests to proxy of Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectPostNamespacedServiceProxyWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "connect DELETE requests to proxy of Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectDeleteNamespacedServiceProxyWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "options": {
     "description": "connect OPTIONS requests to proxy of Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectOptionsNamespacedServiceProxyWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "head": {
     "description": "connect HEAD requests to proxy of Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectHeadNamespacedServiceProxyWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Service",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "path to the resource",
      "name": "path",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Path is the part of URLs that include service endpoints, suffixes, and parameters to use for the current proxy request to service. For example, the whole request URL is http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy. Path is _search?q=user:kimchy.",
      "name": "path",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/services/{name}/status": {
    "get": {
     "description": "read status of the specified Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedServiceStatus",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Service"
       }
      }
     }
    },
    "put": {
     "description": "replace status of the specified Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedServiceStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Service"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Service"
       }
      }
     }
    },
    "patch": {
     "description": "partially update status of the specified Service",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedServiceStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Service"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Service",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{name}": {
    "get": {
     "description": "read the specified Namespace",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespace",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Namespace"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified Namespace",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespace",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Namespace"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Namespace"
       }
      }
     }
    },
    "delete": {
     "description": "delete a Namespace",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteNamespace",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified Namespace",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespace",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Namespace"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Namespace",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{name}/finalize": {
    "put": {
     "description": "replace finalize of the specified Namespace",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespaceFinalize",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Namespace"
       }
      }
     }
    },
    "parameters": [
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/v1.Namespace"
      }
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Namespace",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{name}/status": {
    "get": {
     "description": "read status of the specified Namespace",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespaceStatus",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Namespace"
       }
      }
     }
    },
    "put": {
     "description": "replace status of the specified Namespace",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespaceStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Namespace"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Namespace"
       }
      }
     }
    },
    "patch": {
     "description": "partially update status of the specified Namespace",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespaceStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Namespace"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Namespace",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/nodes": {
    "get": {
     "description": "list or watch objects of kind Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listNode",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.NodeList"
       }
      }
     }
    },
    "post": {
     "description": "create a Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNode",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Node"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Node"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionNode",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/nodes/{name}": {
    "get": {
     "description": "read the specified Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNode",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Node"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNode",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Node"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Node"
       }
      }
     }
    },
    "delete": {
     "description": "delete a Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteNode",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified Node",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNode",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Node"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Node",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/nodes/{name}/proxy": {
    "get": {
     "description": "connect GET requests to proxy of Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectGetNodeProxy",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "connect PUT requests to proxy of Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectPutNodeProxy",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "connect POST requests to proxy of Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectPostNodeProxy",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "connect DELETE requests to proxy of Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectDeleteNodeProxy",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "options": {
     "description": "connect OPTIONS requests to proxy of Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectOptionsNodeProxy",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "head": {
     "description": "connect HEAD requests to proxy of Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectHeadNodeProxy",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Node",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Path is the URL path to use for the current proxy request to node.",
      "name": "path",
      "in": "query"
     }
    ]
   },
   "/api/v1/nodes/{name}/proxy/{path}": {
    "get": {
     "description": "connect GET requests to proxy of Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectGetNodeProxyWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "connect PUT requests to proxy of Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectPutNodeProxyWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "connect POST requests to proxy of Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectPostNodeProxyWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "connect DELETE requests to proxy of Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectDeleteNodeProxyWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "options": {
     "description": "connect OPTIONS requests to proxy of Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectOptionsNodeProxyWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "head": {
     "description": "connect HEAD requests to proxy of Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "connectHeadNodeProxyWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Node",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "path to the resource",
      "name": "path",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Path is the URL path to use for the current proxy request to node.",
      "name": "path",
      "in": "query"
     }
    ]
   },
   "/api/v1/nodes/{name}/status": {
    "get": {
     "description": "read status of the specified Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNodeStatus",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Node"
       }
      }
     }
    },
    "put": {
     "description": "replace status of the specified Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNodeStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Node"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Node"
       }
      }
     }
    },
    "patch": {
     "description": "partially update status of the specified Node",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNodeStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Node"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Node",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/persistentvolumeclaims": {
    "get": {
     "description": "list or watch objects of kind PersistentVolumeClaim",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listPersistentVolumeClaimForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.PersistentVolumeClaimList"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/persistentvolumes": {
    "get": {
     "description": "list or watch objects of kind PersistentVolume",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listPersistentVolume",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.PersistentVolumeList"
       }
      }
     }
    },
    "post": {
     "description": "create a PersistentVolume",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createPersistentVolume",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.PersistentVolume"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.PersistentVolume"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of PersistentVolume",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionPersistentVolume",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/persistentvolumes/{name}": {
    "get": {
     "description": "read the specified PersistentVolume",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readPersistentVolume",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.PersistentVolume"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified PersistentVolume",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replacePersistentVolume",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.PersistentVolume"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.PersistentVolume"
       }
      }
     }
    },
    "delete": {
     "description": "delete a PersistentVolume",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletePersistentVolume",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified PersistentVolume",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchPersistentVolume",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.PersistentVolume"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the PersistentVolume",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/persistentvolumes/{name}/status": {
    "get": {
     "description": "read status of the specified PersistentVolume",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readPersistentVolumeStatus",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.PersistentVolume"
       }
      }
     }
    },
    "put": {
     "description": "replace status of the specified PersistentVolume",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replacePersistentVolumeStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.PersistentVolume"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.PersistentVolume"
       }
      }
     }
    },
    "patch": {
     "description": "partially update status of the specified PersistentVolume",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchPersistentVolumeStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.PersistentVolume"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the PersistentVolume",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/pods": {
    "get": {
     "description": "list or watch objects of kind Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listPodForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.PodList"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/podtemplates": {
    "get": {
     "description": "list or watch objects of kind PodTemplate",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listPodTemplateForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.PodTemplateList"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/proxy/namespaces/{namespace}/pods/{name}": {
    "get": {
     "description": "proxy GET requests to Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyGETNamespacedPod",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "proxy PUT requests to Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyPUTNamespacedPod",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "proxy POST requests to Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyPOSTNamespacedPod",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "proxy DELETE requests to Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyDELETENamespacedPod",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "options": {
     "description": "proxy OPTIONS requests to Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyOPTIONSNamespacedPod",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "head": {
     "description": "proxy HEAD requests to Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyHEADNamespacedPod",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Pod",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/api/v1/proxy/namespaces/{namespace}/pods/{name}/{path}": {
    "get": {
     "description": "proxy GET requests to Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyGETNamespacedPodWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "proxy PUT requests to Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyPUTNamespacedPodWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "proxy POST requests to Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyPOSTNamespacedPodWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "proxy DELETE requests to Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyDELETENamespacedPodWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "options": {
     "description": "proxy OPTIONS requests to Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyOPTIONSNamespacedPodWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "head": {
     "description": "proxy HEAD requests to Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyHEADNamespacedPodWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Pod",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "path to the resource",
      "name": "path",
      "in": "path",
      "required": true
     }
    ]
   },
   "/api/v1/proxy/namespaces/{namespace}/services/{name}": {
    "get": {
     "description": "proxy GET requests to Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyGETNamespacedService",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "proxy PUT requests to Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyPUTNamespacedService",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "proxy POST requests to Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyPOSTNamespacedService",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "proxy DELETE requests to Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyDELETENamespacedService",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "options": {
     "description": "proxy OPTIONS requests to Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyOPTIONSNamespacedService",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "head": {
     "description": "proxy HEAD requests to Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyHEADNamespacedService",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Service",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/api/v1/proxy/namespaces/{namespace}/services/{name}/{path}": {
    "get": {
     "description": "proxy GET requests to Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyGETNamespacedServiceWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "proxy PUT requests to Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyPUTNamespacedServiceWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "proxy POST requests to Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyPOSTNamespacedServiceWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "proxy DELETE requests to Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyDELETENamespacedServiceWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "options": {
     "description": "proxy OPTIONS requests to Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyOPTIONSNamespacedServiceWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "head": {
     "description": "proxy HEAD requests to Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyHEADNamespacedServiceWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Service",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "path to the resource",
      "name": "path",
      "in": "path",
      "required": true
     }
    ]
   },
   "/api/v1/proxy/nodes/{name}": {
    "get": {
     "description": "proxy GET requests to Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyGETNode",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "proxy PUT requests to Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyPUTNode",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "proxy POST requests to Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyPOSTNode",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "proxy DELETE requests to Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyDELETENode",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "options": {
     "description": "proxy OPTIONS requests to Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyOPTIONSNode",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "head": {
     "description": "proxy HEAD requests to Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyHEADNode",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Node",
      "name": "name",
      "in": "path",
      "required": true
     }
    ]
   },
   "/api/v1/proxy/nodes/{name}/{path}": {
    "get": {
     "description": "proxy GET requests to Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyGETNodeWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "proxy PUT requests to Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyPUTNodeWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "proxy POST requests to Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyPOSTNodeWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "proxy DELETE requests to Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyDELETENodeWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "options": {
     "description": "proxy OPTIONS requests to Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyOPTIONSNodeWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "head": {
     "description": "proxy HEAD requests to Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "*/*"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "proxyHEADNodeWithPath",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Node",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "path to the resource",
      "name": "path",
      "in": "path",
      "required": true
     }
    ]
   },
   "/api/v1/replicationcontrollers": {
    "get": {
     "description": "list or watch objects of kind ReplicationController",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listReplicationControllerForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ReplicationControllerList"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/resourcequotas": {
    "get": {
     "description": "list or watch objects of kind ResourceQuota",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listResourceQuotaForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ResourceQuotaList"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/secrets": {
    "get": {
     "description": "list or watch objects of kind Secret",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listSecretForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.SecretList"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/serviceaccounts": {
    "get": {
     "description": "list or watch objects of kind ServiceAccount",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listServiceAccountForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ServiceAccountList"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/services": {
    "get": {
     "description": "list or watch objects of kind Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listServiceForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ServiceList"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/configmaps": {
    "get": {
     "description": "watch individual changes to a list of ConfigMap",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchConfigMapListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/endpoints": {
    "get": {
     "description": "watch individual changes to a list of Endpoints",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchEndpointsListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/events": {
    "get": {
     "description": "watch individual changes to a list of Event",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchEventListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/limitranges": {
    "get": {
     "description": "watch individual changes to a list of LimitRange",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchLimitRangeListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces": {
    "get": {
     "description": "watch individual changes to a list of Namespace",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespaceList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{namespace}/configmaps": {
    "get": {
     "description": "watch individual changes to a list of ConfigMap",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedConfigMapList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{namespace}/configmaps/{name}": {
    "get": {
     "description": "watch changes to an object of kind ConfigMap",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedConfigMap",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the ConfigMap",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{namespace}/endpoints": {
    "get": {
     "description": "watch individual changes to a list of Endpoints",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedEndpointsList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{namespace}/endpoints/{name}": {
    "get": {
     "description": "watch changes to an object of kind Endpoints",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedEndpoints",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Endpoints",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{namespace}/events": {
    "get": {
     "description": "watch individual changes to a list of Event",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedEventList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{namespace}/events/{name}": {
    "get": {
     "description": "watch changes to an object of kind Event",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedEvent",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Event",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{namespace}/limitranges": {
    "get": {
     "description": "watch individual changes to a list of LimitRange",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedLimitRangeList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{namespace}/limitranges/{name}": {
    "get": {
     "description": "watch changes to an object of kind LimitRange",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedLimitRange",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the LimitRange",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{namespace}/persistentvolumeclaims": {
    "get": {
     "description": "watch individual changes to a list of PersistentVolumeClaim",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedPersistentVolumeClaimList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{namespace}/persistentvolumeclaims/{name}": {
    "get": {
     "description": "watch changes to an object of kind PersistentVolumeClaim",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedPersistentVolumeClaim",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the PersistentVolumeClaim",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{namespace}/pods": {
    "get": {
     "description": "watch individual changes to a list of Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedPodList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{namespace}/pods/{name}": {
    "get": {
     "description": "watch changes to an object of kind Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedPod",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Pod",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{namespace}/podtemplates": {
    "get": {
     "description": "watch individual changes to a list of PodTemplate",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedPodTemplateList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{namespace}/podtemplates/{name}": {
    "get": {
     "description": "watch changes to an object of kind PodTemplate",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedPodTemplate",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the PodTemplate",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{namespace}/replicationcontrollers": {
    "get": {
     "description": "watch individual changes to a list of ReplicationController",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedReplicationControllerList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{namespace}/replicationcontrollers/{name}": {
    "get": {
     "description": "watch changes to an object of kind ReplicationController",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedReplicationController",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the ReplicationController",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{namespace}/resourcequotas": {
    "get": {
     "description": "watch individual changes to a list of ResourceQuota",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedResourceQuotaList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{namespace}/resourcequotas/{name}": {
    "get": {
     "description": "watch changes to an object of kind ResourceQuota",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedResourceQuota",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the ResourceQuota",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{namespace}/secrets": {
    "get": {
     "description": "watch individual changes to a list of Secret",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedSecretList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{namespace}/secrets/{name}": {
    "get": {
     "description": "watch changes to an object of kind Secret",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedSecret",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Secret",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{namespace}/serviceaccounts": {
    "get": {
     "description": "watch individual changes to a list of ServiceAccount",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedServiceAccountList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{namespace}/serviceaccounts/{name}": {
    "get": {
     "description": "watch changes to an object of kind ServiceAccount",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedServiceAccount",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the ServiceAccount",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{namespace}/services": {
    "get": {
     "description": "watch individual changes to a list of Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedServiceList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{namespace}/services/{name}": {
    "get": {
     "description": "watch changes to an object of kind Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedService",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Service",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{name}": {
    "get": {
     "description": "watch changes to an object of kind Namespace",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespace",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Namespace",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/nodes": {
    "get": {
     "description": "watch individual changes to a list of Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNodeList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/nodes/{name}": {
    "get": {
     "description": "watch changes to an object of kind Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNode",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Node",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/persistentvolumeclaims": {
    "get": {
     "description": "watch individual changes to a list of PersistentVolumeClaim",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchPersistentVolumeClaimListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/persistentvolumes": {
    "get": {
     "description": "watch individual changes to a list of PersistentVolume",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchPersistentVolumeList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/persistentvolumes/{name}": {
    "get": {
     "description": "watch changes to an object of kind PersistentVolume",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchPersistentVolume",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the PersistentVolume",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/pods": {
    "get": {
     "description": "watch individual changes to a list of Pod",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchPodListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/podtemplates": {
    "get": {
     "description": "watch individual changes to a list of PodTemplate",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchPodTemplateListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/replicationcontrollers": {
    "get": {
     "description": "watch individual changes to a list of ReplicationController",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchReplicationControllerListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/resourcequotas": {
    "get": {
     "description": "watch individual changes to a list of ResourceQuota",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchResourceQuotaListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/secrets": {
    "get": {
     "description": "watch individual changes to a list of Secret",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchSecretListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/serviceaccounts": {
    "get": {
     "description": "watch individual changes to a list of ServiceAccount",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchServiceAccountListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/services": {
    "get": {
     "description": "watch individual changes to a list of Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchServiceListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/": {
    "get": {
     "description": "get available API versions",
     "consumes": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.APIGroupList"
       }
      }
     }
    }
   },
   "/apis/apps/": {
    "get": {
     "description": "get information of a group",
     "consumes": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.APIGroup"
       }
      }
     }
    }
   },
   "/apis/apps/v1alpha1/": {
    "get": {
     "description": "get available resources",
     "consumes": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.APIResourceList"
       }
      }
     }
    }
   },
   "/apis/apps/v1alpha1/namespaces/{namespace}/petsets": {
    "get": {
     "description": "list or watch objects of kind PetSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listNamespacedPetSet",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.PetSetList"
       }
      }
     }
    },
    "post": {
     "description": "create a PetSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespacedPetSet",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1alpha1.PetSet"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.PetSet"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of PetSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionNamespacedPetSet",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/apps/v1alpha1/namespaces/{namespace}/petsets/{name}": {
    "get": {
     "description": "read the specified PetSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedPetSet",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.PetSet"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified PetSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedPetSet",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1alpha1.PetSet"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.PetSet"
       }
      }
     }
    },
    "delete": {
     "description": "delete a PetSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteNamespacedPetSet",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified PetSet",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedPetSet",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.PetSet"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the PetSet",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/apps/v1alpha1/namespaces/{namespace}/petsets/{name}/status": {
    "get": {
     "description": "read status of the specified PetSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedPetSetStatus",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.PetSet"
       }
      }
     }
    },
    "put": {
     "description": "replace status of the specified PetSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedPetSetStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1alpha1.PetSet"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.PetSet"
       }
      }
     }
    },
    "patch": {
     "description": "partially update status of the specified PetSet",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedPetSetStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.PetSet"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the PetSet",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/apps/v1alpha1/petsets": {
    "get": {
     "description": "list or watch objects of kind PetSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listPetSetForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.PetSetList"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/apps/v1alpha1/watch/namespaces/{namespace}/petsets": {
    "get": {
     "description": "watch individual changes to a list of PetSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedPetSetList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/apps/v1alpha1/watch/namespaces/{namespace}/petsets/{name}": {
    "get": {
     "description": "watch changes to an object of kind PetSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedPetSet",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the PetSet",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/apps/v1alpha1/watch/petsets": {
    "get": {
     "description": "watch individual changes to a list of PetSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchPetSetListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/authentication.k8s.io/": {
    "get": {
     "description": "get information of a group",
     "consumes": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.APIGroup"
       }
      }
     }
    }
   },
   "/apis/authentication.k8s.io/v1beta1/": {
    "get": {
     "description": "get available resources",
     "consumes": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.APIResourceList"
       }
      }
     }
    }
   },
   "/apis/authentication.k8s.io/v1beta1/tokenreviews": {
    "post": {
     "description": "create a TokenReview",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createTokenReview",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.TokenReview"
       }
      }
     }
    },
    "parameters": [
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/v1beta1.TokenReview"
      }
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/authorization.k8s.io/": {
    "get": {
     "description": "get information of a group",
     "consumes": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.APIGroup"
       }
      }
     }
    }
   },
   "/apis/authorization.k8s.io/v1beta1/": {
    "get": {
     "description": "get available resources",
     "consumes": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.APIResourceList"
       }
      }
     }
    }
   },
   "/apis/authorization.k8s.io/v1beta1/namespaces/{namespace}/localsubjectaccessreviews": {
    "post": {
     "description": "create a LocalSubjectAccessReview",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespacedLocalSubjectAccessReview",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.LocalSubjectAccessReview"
       }
      }
     }
    },
    "parameters": [
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/v1beta1.LocalSubjectAccessReview"
      }
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/authorization.k8s.io/v1beta1/selfsubjectaccessreviews": {
    "post": {
     "description": "create a SelfSubjectAccessReview",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createSelfSubjectAccessReview",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.SelfSubjectAccessReview"
       }
      }
     }
    },
    "parameters": [
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/v1beta1.SelfSubjectAccessReview"
      }
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/authorization.k8s.io/v1beta1/subjectaccessreviews": {
    "post": {
     "description": "create a SubjectAccessReview",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createSubjectAccessReview",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.SubjectAccessReview"
       }
      }
     }
    },
    "parameters": [
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/v1beta1.SubjectAccessReview"
      }
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/autoscaling/": {
    "get": {
     "description": "get information of a group",
     "consumes": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.APIGroup"
       }
      }
     }
    }
   },
   "/apis/autoscaling/v1/": {
    "get": {
     "description": "get available resources",
     "consumes": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.APIResourceList"
       }
      }
     }
    }
   },
   "/apis/autoscaling/v1/horizontalpodautoscalers": {
    "get": {
     "description": "list or watch objects of kind HorizontalPodAutoscaler",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.HorizontalPodAutoscalerList"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers": {
    "get": {
     "description": "list or watch objects of kind HorizontalPodAutoscaler",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.HorizontalPodAutoscalerList"
       }
      }
     }
    },
    "post": {
     "description": "create a HorizontalPodAutoscaler",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.HorizontalPodAutoscaler"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.HorizontalPodAutoscaler"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of HorizontalPodAutoscaler",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers/{name}": {
    "get": {
     "description": "read the specified HorizontalPodAutoscaler",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.HorizontalPodAutoscaler"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified HorizontalPodAutoscaler",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.HorizontalPodAutoscaler"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.HorizontalPodAutoscaler"
       }
      }
     }
    },
    "delete": {
     "description": "delete a HorizontalPodAutoscaler",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified HorizontalPodAutoscaler",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.HorizontalPodAutoscaler"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the HorizontalPodAutoscaler",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers/{name}/status": {
    "get": {
     "description": "read status of the specified HorizontalPodAutoscaler",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.HorizontalPodAutoscaler"
       }
      }
     }
    },
    "put": {
     "description": "replace status of the specified HorizontalPodAutoscaler",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.HorizontalPodAutoscaler"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.HorizontalPodAutoscaler"
       }
      }
     }
    },
    "patch": {
     "description": "partially update status of the specified HorizontalPodAutoscaler",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.HorizontalPodAutoscaler"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the HorizontalPodAutoscaler",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/autoscaling/v1/watch/horizontalpodautoscalers": {
    "get": {
     "description": "watch individual changes to a list of HorizontalPodAutoscaler",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/autoscaling/v1/watch/namespaces/{namespace}/horizontalpodautoscalers": {
    "get": {
     "description": "watch individual changes to a list of HorizontalPodAutoscaler",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/autoscaling/v1/watch/namespaces/{namespace}/horizontalpodautoscalers/{name}": {
    "get": {
     "description": "watch changes to an object of kind HorizontalPodAutoscaler",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the HorizontalPodAutoscaler",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/batch/": {
    "get": {
     "description": "get information of a group",
     "consumes": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.APIGroup"
       }
      }
     }
    }
   },
   "/apis/batch/v1/": {
    "get": {
     "description": "get available resources",
     "consumes": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.APIResourceList"
       }
      }
     }
    }
   },
   "/apis/batch/v1/jobs": {
    "get": {
     "description": "list or watch objects of kind Job",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.JobList"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/batch/v1/namespaces/{namespace}/jobs": {
    "get": {
     "description": "list or watch objects of kind Job",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.JobList"
       }
      }
     }
    },
    "post": {
     "description": "create a Job",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Job"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Job"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of Job",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/batch/v1/namespaces/{namespace}/jobs/{name}": {
    "get": {
     "description": "read the specified Job",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Job"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified Job",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Job"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Job"
       }
      }
     }
    },
    "delete": {
     "description": "delete a Job",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified Job",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Job"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Job",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/batch/v1/namespaces/{namespace}/jobs/{name}/status": {
    "get": {
     "description": "read status of the specified Job",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Job"
       }
      }
     }
    },
    "put": {
     "description": "replace status of the specified Job",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Job"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Job"
       }
      }
     }
    },
    "patch": {
     "description": "partially update status of the specified Job",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Job"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Job",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/batch/v1/watch/jobs": {
    "get": {
     "description": "watch individual changes to a list of Job",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/batch/v1/watch/namespaces/{namespace}/jobs": {
    "get": {
     "description": "watch individual changes to a list of Job",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/batch/v1/watch/namespaces/{namespace}/jobs/{name}": {
    "get": {
     "description": "watch changes to an object of kind Job",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Job",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/batch/v2alpha1/": {
    "get": {
     "description": "get available resources",
     "consumes": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.APIResourceList"
       }
      }
     }
    }
   },
   "/apis/certificates.k8s.io/": {
    "get": {
     "description": "get information of a group",
     "consumes": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.APIGroup"
       }
      }
     }
    }
   },
   "/apis/certificates.k8s.io/v1alpha1/": {
    "get": {
     "description": "get available resources",
     "consumes": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.APIResourceList"
       }
      }
     }
    }
   },
   "/apis/certificates.k8s.io/v1alpha1/certificatesigningrequests": {
    "get": {
     "description": "list or watch objects of kind CertificateSigningRequest",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listCertificateSigningRequest",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.CertificateSigningRequestList"
       }
      }
     }
    },
    "post": {
     "description": "create a CertificateSigningRequest",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createCertificateSigningRequest",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1alpha1.CertificateSigningRequest"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.CertificateSigningRequest"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of CertificateSigningRequest",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionCertificateSigningRequest",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/certificates.k8s.io/v1alpha1/certificatesigningrequests/{name}": {
    "get": {
     "description": "read the specified CertificateSigningRequest",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readCertificateSigningRequest",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.CertificateSigningRequest"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified CertificateSigningRequest",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceCertificateSigningRequest",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1alpha1.CertificateSigningRequest"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.CertificateSigningRequest"
       }
      }
     }
    },
    "delete": {
     "description": "delete a CertificateSigningRequest",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteCertificateSigningRequest",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified CertificateSigningRequest",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchCertificateSigningRequest",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.CertificateSigningRequest"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the CertificateSigningRequest",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/certificates.k8s.io/v1alpha1/certificatesigningrequests/{name}/approval": {
    "put": {
     "description": "replace approval of the specified CertificateSigningRequest",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceCertificateSigningRequestApproval",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.CertificateSigningRequest"
       }
      }
     }
    },
    "parameters": [
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/v1alpha1.CertificateSigningRequest"
      }
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the CertificateSigningRequest",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/certificates.k8s.io/v1alpha1/certificatesigningrequests/{name}/status": {
    "put": {
     "description": "replace status of the specified CertificateSigningRequest",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceCertificateSigningRequestStatus",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.CertificateSigningRequest"
       }
      }
     }
    },
    "parameters": [
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/v1alpha1.CertificateSigningRequest"
      }
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the CertificateSigningRequest",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/certificates.k8s.io/v1alpha1/watch/certificatesigningrequests": {
    "get": {
     "description": "watch individual changes to a list of CertificateSigningRequest",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchCertificateSigningRequestList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/certificates.k8s.io/v1alpha1/watch/certificatesigningrequests/{name}": {
    "get": {
     "description": "watch changes to an object of kind CertificateSigningRequest",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchCertificateSigningRequest",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the CertificateSigningRequest",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/": {
    "get": {
     "description": "get information of a group",
     "consumes": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.APIGroup"
       }
      }
     }
    }
   },
   "/apis/extensions/v1beta1/": {
    "get": {
     "description": "get available resources",
     "consumes": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.APIResourceList"
       }
      }
     }
    }
   },
   "/apis/extensions/v1beta1/daemonsets": {
    "get": {
     "description": "list or watch objects of kind DaemonSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listDaemonSetForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.DaemonSetList"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/deployments": {
    "get": {
     "description": "list or watch objects of kind Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listDeploymentForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.DeploymentList"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/horizontalpodautoscalers": {
    "get": {
     "description": "list or watch objects of kind HorizontalPodAutoscaler",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.HorizontalPodAutoscalerList"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/ingresses": {
    "get": {
     "description": "list or watch objects of kind Ingress",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listIngressForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.IngressList"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/jobs": {
    "get": {
     "description": "list or watch objects of kind Job",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.JobList"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/namespaces/{namespace}/daemonsets": {
    "get": {
     "description": "list or watch objects of kind DaemonSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listNamespacedDaemonSet",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.DaemonSetList"
       }
      }
     }
    },
    "post": {
     "description": "create a DaemonSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespacedDaemonSet",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.DaemonSet"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.DaemonSet"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of DaemonSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionNamespacedDaemonSet",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/namespaces/{namespace}/daemonsets/{name}": {
    "get": {
     "description": "read the specified DaemonSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedDaemonSet",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.DaemonSet"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified DaemonSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedDaemonSet",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.DaemonSet"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.DaemonSet"
       }
      }
     }
    },
    "delete": {
     "description": "delete a DaemonSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteNamespacedDaemonSet",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified DaemonSet",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedDaemonSet",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.DaemonSet"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the DaemonSet",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/namespaces/{namespace}/daemonsets/{name}/status": {
    "get": {
     "description": "read status of the specified DaemonSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedDaemonSetStatus",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.DaemonSet"
       }
      }
     }
    },
    "put": {
     "description": "replace status of the specified DaemonSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedDaemonSetStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.DaemonSet"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.DaemonSet"
       }
      }
     }
    },
    "patch": {
     "description": "partially update status of the specified DaemonSet",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedDaemonSetStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.DaemonSet"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the DaemonSet",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/namespaces/{namespace}/deployments": {
    "get": {
     "description": "list or watch objects of kind Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listNamespacedDeployment",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.DeploymentList"
       }
      }
     }
    },
    "post": {
     "description": "create a Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespacedDeployment",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.Deployment"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.Deployment"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionNamespacedDeployment",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}": {
    "get": {
     "description": "read the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedDeployment",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.Deployment"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedDeployment",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.Deployment"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.Deployment"
       }
      }
     }
    },
    "delete": {
     "description": "delete a Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteNamespacedDeployment",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified Deployment",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedDeployment",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.Deployment"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Deployment",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/rollback": {
    "post": {
     "description": "create rollback of a DeploymentRollback",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespacedDeploymentRollbackRollback",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.DeploymentRollback"
       }
      }
     }
    },
    "parameters": [
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/v1beta1.DeploymentRollback"
      }
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the DeploymentRollback",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/scale": {
    "get": {
     "description": "read scale of the specified Scale",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.Scale"
       }
      }
     }
    },
    "put": {
     "description": "replace scale of the specified Scale",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.Scale"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.Scale"
       }
      }
     }
    },
    "patch": {
     "description": "partially update scale of the specified Scale",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.Scale"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Scale",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/status": {
    "get": {
     "description": "read status of the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedDeploymentStatus",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.Deployment"
       }
      }
     }
    },
    "put": {
     "description": "replace status of the specified Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedDeploymentStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.Deployment"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.Deployment"
       }
      }
     }
    },
    "patch": {
     "description": "partially update status of the specified Deployment",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedDeploymentStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.Deployment"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Deployment",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/namespaces/{namespace}/horizontalpodautoscalers": {
    "get": {
     "description": "list or watch objects of kind HorizontalPodAutoscaler",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.HorizontalPodAutoscalerList"
       }
      }
     }
    },
    "post": {
     "description": "create a HorizontalPodAutoscaler",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.HorizontalPodAutoscaler"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.HorizontalPodAutoscaler"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of HorizontalPodAutoscaler",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/namespaces/{namespace}/horizontalpodautoscalers/{name}": {
    "get": {
     "description": "read the specified HorizontalPodAutoscaler",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.HorizontalPodAutoscaler"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified HorizontalPodAutoscaler",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.HorizontalPodAutoscaler"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.HorizontalPodAutoscaler"
       }
      }
     }
    },
    "delete": {
     "description": "delete a HorizontalPodAutoscaler",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified HorizontalPodAutoscaler",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.HorizontalPodAutoscaler"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the HorizontalPodAutoscaler",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/namespaces/{namespace}/horizontalpodautoscalers/{name}/status": {
    "get": {
     "description": "read status of the specified HorizontalPodAutoscaler",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.HorizontalPodAutoscaler"
       }
      }
     }
    },
    "put": {
     "description": "replace status of the specified HorizontalPodAutoscaler",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.HorizontalPodAutoscaler"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.HorizontalPodAutoscaler"
       }
      }
     }
    },
    "patch": {
     "description": "partially update status of the specified HorizontalPodAutoscaler",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.HorizontalPodAutoscaler"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the HorizontalPodAutoscaler",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/namespaces/{namespace}/ingresses": {
    "get": {
     "description": "list or watch objects of kind Ingress",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listNamespacedIngress",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.IngressList"
       }
      }
     }
    },
    "post": {
     "description": "create a Ingress",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespacedIngress",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.Ingress"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.Ingress"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of Ingress",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionNamespacedIngress",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}": {
    "get": {
     "description": "read the specified Ingress",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedIngress",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.Ingress"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified Ingress",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedIngress",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.Ingress"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.Ingress"
       }
      }
     }
    },
    "delete": {
     "description": "delete a Ingress",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteNamespacedIngress",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified Ingress",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedIngress",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.Ingress"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Ingress",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}/status": {
    "get": {
     "description": "read status of the specified Ingress",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedIngressStatus",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.Ingress"
       }
      }
     }
    },
    "put": {
     "description": "replace status of the specified Ingress",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedIngressStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.Ingress"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.Ingress"
       }
      }
     }
    },
    "patch": {
     "description": "partially update status of the specified Ingress",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedIngressStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.Ingress"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Ingress",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/namespaces/{namespace}/jobs": {
    "get": {
     "description": "list or watch objects of kind Job",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.JobList"
       }
      }
     }
    },
    "post": {
     "description": "create a Job",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.Job"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.Job"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of Job",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/namespaces/{namespace}/jobs/{name}": {
    "get": {
     "description": "read the specified Job",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.Job"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified Job",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.Job"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.Job"
       }
      }
     }
    },
    "delete": {
     "description": "delete a Job",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified Job",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.Job"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Job",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/namespaces/{namespace}/jobs/{name}/status": {
    "get": {
     "description": "read status of the specified Job",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.Job"
       }
      }
     }
    },
    "put": {
     "description": "replace status of the specified Job",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.Job"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.Job"
       }
      }
     }
    },
    "patch": {
     "description": "partially update status of the specified Job",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.Job"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Job",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/namespaces/{namespace}/networkpolicies": {
    "get": {
     "description": "list or watch objects of kind NetworkPolicy",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listNamespacedNetworkPolicy",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.NetworkPolicyList"
       }
      }
     }
    },
    "post": {
     "description": "create a NetworkPolicy",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespacedNetworkPolicy",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.NetworkPolicy"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.NetworkPolicy"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of NetworkPolicy",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionNamespacedNetworkPolicy",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/namespaces/{namespace}/networkpolicies/{name}": {
    "get": {
     "description": "read the specified NetworkPolicy",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedNetworkPolicy",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.NetworkPolicy"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified NetworkPolicy",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedNetworkPolicy",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.NetworkPolicy"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.NetworkPolicy"
       }
      }
     }
    },
    "delete": {
     "description": "delete a NetworkPolicy",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteNamespacedNetworkPolicy",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified NetworkPolicy",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedNetworkPolicy",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.NetworkPolicy"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the NetworkPolicy",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/namespaces/{namespace}/replicasets": {
    "get": {
     "description": "list or watch objects of kind ReplicaSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listNamespacedReplicaSet",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.ReplicaSetList"
       }
      }
     }
    },
    "post": {
     "description": "create a ReplicaSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespacedReplicaSet",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.ReplicaSet"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.ReplicaSet"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of ReplicaSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionNamespacedReplicaSet",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}": {
    "get": {
     "description": "read the specified ReplicaSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedReplicaSet",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.ReplicaSet"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified ReplicaSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedReplicaSet",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.ReplicaSet"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.ReplicaSet"
       }
      }
     }
    },
    "delete": {
     "description": "delete a ReplicaSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteNamespacedReplicaSet",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified ReplicaSet",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedReplicaSet",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.ReplicaSet"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the ReplicaSet",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}/scale": {
    "get": {
     "description": "read scale of the specified Scale",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.Scale"
       }
      }
     }
    },
    "put": {
     "description": "replace scale of the specified Scale",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.Scale"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.Scale"
       }
      }
     }
    },
    "patch": {
     "description": "partially update scale of the specified Scale",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.Scale"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Scale",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}/status": {
    "get": {
     "description": "read status of the specified ReplicaSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedReplicaSetStatus",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.ReplicaSet"
       }
      }
     }
    },
    "put": {
     "description": "replace status of the specified ReplicaSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedReplicaSetStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.ReplicaSet"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.ReplicaSet"
       }
      }
     }
    },
    "patch": {
     "description": "partially update status of the specified ReplicaSet",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedReplicaSetStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.ReplicaSet"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the ReplicaSet",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/namespaces/{namespace}/replicationcontrollers/{name}/scale": {
    "get": {
     "description": "read scale of the specified Scale",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.Scale"
       }
      }
     }
    },
    "put": {
     "description": "replace scale of the specified Scale",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.Scale"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.Scale"
       }
      }
     }
    },
    "patch": {
     "description": "partially update scale of the specified Scale",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.Scale"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Scale",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/networkpolicies": {
    "get": {
     "description": "list or watch objects of kind NetworkPolicy",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listNetworkPolicyForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.NetworkPolicyList"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/replicasets": {
    "get": {
     "description": "list or watch objects of kind ReplicaSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listReplicaSetForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.ReplicaSetList"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/thirdpartyresources": {
    "get": {
     "description": "list or watch objects of kind ThirdPartyResource",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listThirdPartyResource",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.ThirdPartyResourceList"
       }
      }
     }
    },
    "post": {
     "description": "create a ThirdPartyResource",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createThirdPartyResource",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.ThirdPartyResource"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.ThirdPartyResource"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of ThirdPartyResource",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionThirdPartyResource",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/thirdpartyresources/{name}": {
    "get": {
     "description": "read the specified ThirdPartyResource",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readThirdPartyResource",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.ThirdPartyResource"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified ThirdPartyResource",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceThirdPartyResource",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.ThirdPartyResource"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.ThirdPartyResource"
       }
      }
     }
    },
    "delete": {
     "description": "delete a ThirdPartyResource",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteThirdPartyResource",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified ThirdPartyResource",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchThirdPartyResource",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.ThirdPartyResource"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the ThirdPartyResource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/watch/daemonsets": {
    "get": {
     "description": "watch individual changes to a list of DaemonSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchDaemonSetListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/watch/deployments": {
    "get": {
     "description": "watch individual changes to a list of Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchDeploymentListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/watch/horizontalpodautoscalers": {
    "get": {
     "description": "watch individual changes to a list of HorizontalPodAutoscaler",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/watch/ingresses": {
    "get": {
     "description": "watch individual changes to a list of Ingress",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchIngressListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/watch/jobs": {
    "get": {
     "description": "watch individual changes to a list of Job",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/watch/namespaces/{namespace}/daemonsets": {
    "get": {
     "description": "watch individual changes to a list of DaemonSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedDaemonSetList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/watch/namespaces/{namespace}/daemonsets/{name}": {
    "get": {
     "description": "watch changes to an object of kind DaemonSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedDaemonSet",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the DaemonSet",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/watch/namespaces/{namespace}/deployments": {
    "get": {
     "description": "watch individual changes to a list of Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedDeploymentList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/watch/namespaces/{namespace}/deployments/{name}": {
    "get": {
     "description": "watch changes to an object of kind Deployment",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedDeployment",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Deployment",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/watch/namespaces/{namespace}/horizontalpodautoscalers": {
    "get": {
     "description": "watch individual changes to a list of HorizontalPodAutoscaler",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/watch/namespaces/{namespace}/horizontalpodautoscalers/{name}": {
    "get": {
     "description": "watch changes to an object of kind HorizontalPodAutoscaler",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the HorizontalPodAutoscaler",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/watch/namespaces/{namespace}/ingresses": {
    "get": {
     "description": "watch individual changes to a list of Ingress",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedIngressList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/watch/namespaces/{namespace}/ingresses/{name}": {
    "get": {
     "description": "watch changes to an object of kind Ingress",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedIngress",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Ingress",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/watch/namespaces/{namespace}/jobs": {
    "get": {
     "description": "watch individual changes to a list of Job",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/watch/namespaces/{namespace}/jobs/{name}": {
    "get": {
     "description": "watch changes to an object of kind Job",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Job",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/watch/namespaces/{namespace}/networkpolicies": {
    "get": {
     "description": "watch individual changes to a list of NetworkPolicy",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedNetworkPolicyList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/watch/namespaces/{namespace}/networkpolicies/{name}": {
    "get": {
     "description": "watch changes to an object of kind NetworkPolicy",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedNetworkPolicy",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the NetworkPolicy",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/watch/namespaces/{namespace}/replicasets": {
    "get": {
     "description": "watch individual changes to a list of ReplicaSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedReplicaSetList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/watch/namespaces/{namespace}/replicasets/{name}": {
    "get": {
     "description": "watch changes to an object of kind ReplicaSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedReplicaSet",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the ReplicaSet",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/watch/networkpolicies": {
    "get": {
     "description": "watch individual changes to a list of NetworkPolicy",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNetworkPolicyListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/watch/replicasets": {
    "get": {
     "description": "watch individual changes to a list of ReplicaSet",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchReplicaSetListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/watch/thirdpartyresources": {
    "get": {
     "description": "watch individual changes to a list of ThirdPartyResource",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchThirdPartyResourceList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/extensions/v1beta1/watch/thirdpartyresources/{name}": {
    "get": {
     "description": "watch changes to an object of kind ThirdPartyResource",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchThirdPartyResource",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the ThirdPartyResource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/policy/": {
    "get": {
     "description": "get information of a group",
     "consumes": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.APIGroup"
       }
      }
     }
    }
   },
   "/apis/policy/v1alpha1/": {
    "get": {
     "description": "get available resources",
     "consumes": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.APIResourceList"
       }
      }
     }
    }
   },
   "/apis/policy/v1alpha1/namespaces/{namespace}/poddisruptionbudgets": {
    "get": {
     "description": "list or watch objects of kind PodDisruptionBudget",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listNamespacedPodDisruptionBudget",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.PodDisruptionBudgetList"
       }
      }
     }
    },
    "post": {
     "description": "create a PodDisruptionBudget",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespacedPodDisruptionBudget",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1alpha1.PodDisruptionBudget"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.PodDisruptionBudget"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of PodDisruptionBudget",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionNamespacedPodDisruptionBudget",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/policy/v1alpha1/namespaces/{namespace}/poddisruptionbudgets/{name}": {
    "get": {
     "description": "read the specified PodDisruptionBudget",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedPodDisruptionBudget",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.PodDisruptionBudget"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified PodDisruptionBudget",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedPodDisruptionBudget",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1alpha1.PodDisruptionBudget"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.PodDisruptionBudget"
       }
      }
     }
    },
    "delete": {
     "description": "delete a PodDisruptionBudget",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteNamespacedPodDisruptionBudget",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified PodDisruptionBudget",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedPodDisruptionBudget",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.PodDisruptionBudget"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the PodDisruptionBudget",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/policy/v1alpha1/namespaces/{namespace}/poddisruptionbudgets/{name}/status": {
    "get": {
     "description": "read status of the specified PodDisruptionBudget",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedPodDisruptionBudgetStatus",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.PodDisruptionBudget"
       }
      }
     }
    },
    "put": {
     "description": "replace status of the specified PodDisruptionBudget",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedPodDisruptionBudgetStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1alpha1.PodDisruptionBudget"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.PodDisruptionBudget"
       }
      }
     }
    },
    "patch": {
     "description": "partially update status of the specified PodDisruptionBudget",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedPodDisruptionBudgetStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.PodDisruptionBudget"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the PodDisruptionBudget",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/policy/v1alpha1/poddisruptionbudgets": {
    "get": {
     "description": "list or watch objects of kind PodDisruptionBudget",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listPodDisruptionBudgetForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.PodDisruptionBudgetList"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/policy/v1alpha1/watch/namespaces/{namespace}/poddisruptionbudgets": {
    "get": {
     "description": "watch individual changes to a list of PodDisruptionBudget",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedPodDisruptionBudgetList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/policy/v1alpha1/watch/namespaces/{namespace}/poddisruptionbudgets/{name}": {
    "get": {
     "description": "watch changes to an object of kind PodDisruptionBudget",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedPodDisruptionBudget",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the PodDisruptionBudget",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/policy/v1alpha1/watch/poddisruptionbudgets": {
    "get": {
     "description": "watch individual changes to a list of PodDisruptionBudget",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchPodDisruptionBudgetListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/rbac.authorization.k8s.io/": {
    "get": {
     "description": "get information of a group",
     "consumes": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.APIGroup"
       }
      }
     }
    }
   },
   "/apis/rbac.authorization.k8s.io/v1alpha1/": {
    "get": {
     "description": "get available resources",
     "consumes": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.APIResourceList"
       }
      }
     }
    }
   },
   "/apis/rbac.authorization.k8s.io/v1alpha1/clusterrolebindings": {
    "get": {
     "description": "list or watch objects of kind ClusterRoleBinding",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listClusterRoleBinding",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.ClusterRoleBindingList"
       }
      }
     }
    },
    "post": {
     "description": "create a ClusterRoleBinding",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createClusterRoleBinding",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1alpha1.ClusterRoleBinding"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.ClusterRoleBinding"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of ClusterRoleBinding",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionClusterRoleBinding",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/rbac.authorization.k8s.io/v1alpha1/clusterrolebindings/{name}": {
    "get": {
     "description": "read the specified ClusterRoleBinding",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readClusterRoleBinding",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.ClusterRoleBinding"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified ClusterRoleBinding",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceClusterRoleBinding",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1alpha1.ClusterRoleBinding"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.ClusterRoleBinding"
       }
      }
     }
    },
    "delete": {
     "description": "delete a ClusterRoleBinding",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteClusterRoleBinding",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified ClusterRoleBinding",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchClusterRoleBinding",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.ClusterRoleBinding"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the ClusterRoleBinding",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/rbac.authorization.k8s.io/v1alpha1/clusterroles": {
    "get": {
     "description": "list or watch objects of kind ClusterRole",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listClusterRole",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.ClusterRoleList"
       }
      }
     }
    },
    "post": {
     "description": "create a ClusterRole",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createClusterRole",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1alpha1.ClusterRole"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.ClusterRole"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of ClusterRole",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionClusterRole",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/rbac.authorization.k8s.io/v1alpha1/clusterroles/{name}": {
    "get": {
     "description": "read the specified ClusterRole",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readClusterRole",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.ClusterRole"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified ClusterRole",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceClusterRole",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1alpha1.ClusterRole"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.ClusterRole"
       }
      }
     }
    },
    "delete": {
     "description": "delete a ClusterRole",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteClusterRole",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified ClusterRole",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchClusterRole",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.ClusterRole"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the ClusterRole",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/rbac.authorization.k8s.io/v1alpha1/namespaces/{namespace}/rolebindings": {
    "get": {
     "description": "list or watch objects of kind RoleBinding",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listNamespacedRoleBinding",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.RoleBindingList"
       }
      }
     }
    },
    "post": {
     "description": "create a RoleBinding",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespacedRoleBinding",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1alpha1.RoleBinding"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.RoleBinding"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of RoleBinding",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionNamespacedRoleBinding",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/rbac.authorization.k8s.io/v1alpha1/namespaces/{namespace}/rolebindings/{name}": {
    "get": {
     "description": "read the specified RoleBinding",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedRoleBinding",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.RoleBinding"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified RoleBinding",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedRoleBinding",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1alpha1.RoleBinding"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.RoleBinding"
       }
      }
     }
    },
    "delete": {
     "description": "delete a RoleBinding",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteNamespacedRoleBinding",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified RoleBinding",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedRoleBinding",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.RoleBinding"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the RoleBinding",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/rbac.authorization.k8s.io/v1alpha1/namespaces/{namespace}/roles": {
    "get": {
     "description": "list or watch objects of kind Role",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listNamespacedRole",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.RoleList"
       }
      }
     }
    },
    "post": {
     "description": "create a Role",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespacedRole",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1alpha1.Role"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.Role"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of Role",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionNamespacedRole",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/rbac.authorization.k8s.io/v1alpha1/namespaces/{namespace}/roles/{name}": {
    "get": {
     "description": "read the specified Role",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedRole",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.Role"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified Role",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedRole",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1alpha1.Role"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.Role"
       }
      }
     }
    },
    "delete": {
     "description": "delete a Role",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteNamespacedRole",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified Role",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedRole",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.Role"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Role",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/rbac.authorization.k8s.io/v1alpha1/rolebindings": {
    "get": {
     "description": "list or watch objects of kind RoleBinding",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listRoleBindingForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.RoleBindingList"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/rbac.authorization.k8s.io/v1alpha1/roles": {
    "get": {
     "description": "list or watch objects of kind Role",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listRoleForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.RoleList"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/rbac.authorization.k8s.io/v1alpha1/watch/clusterrolebindings": {
    "get": {
     "description": "watch individual changes to a list of ClusterRoleBinding",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchClusterRoleBindingList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/rbac.authorization.k8s.io/v1alpha1/watch/clusterrolebindings/{name}": {
    "get": {
     "description": "watch changes to an object of kind ClusterRoleBinding",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchClusterRoleBinding",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the ClusterRoleBinding",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/rbac.authorization.k8s.io/v1alpha1/watch/clusterroles": {
    "get": {
     "description": "watch individual changes to a list of ClusterRole",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchClusterRoleList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/rbac.authorization.k8s.io/v1alpha1/watch/clusterroles/{name}": {
    "get": {
     "description": "watch changes to an object of kind ClusterRole",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchClusterRole",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the ClusterRole",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/rbac.authorization.k8s.io/v1alpha1/watch/namespaces/{namespace}/rolebindings": {
    "get": {
     "description": "watch individual changes to a list of RoleBinding",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedRoleBindingList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/rbac.authorization.k8s.io/v1alpha1/watch/namespaces/{namespace}/rolebindings/{name}": {
    "get": {
     "description": "watch changes to an object of kind RoleBinding",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedRoleBinding",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the RoleBinding",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/rbac.authorization.k8s.io/v1alpha1/watch/namespaces/{namespace}/roles": {
    "get": {
     "description": "watch individual changes to a list of Role",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedRoleList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/rbac.authorization.k8s.io/v1alpha1/watch/namespaces/{namespace}/roles/{name}": {
    "get": {
     "description": "watch changes to an object of kind Role",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedRole",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Role",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/rbac.authorization.k8s.io/v1alpha1/watch/rolebindings": {
    "get": {
     "description": "watch individual changes to a list of RoleBinding",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchRoleBindingListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/rbac.authorization.k8s.io/v1alpha1/watch/roles": {
    "get": {
     "description": "watch individual changes to a list of Role",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchRoleListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/storage.k8s.io/": {
    "get": {
     "description": "get information of a group",
     "consumes": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.APIGroup"
       }
      }
     }
    }
   },
   "/apis/storage.k8s.io/v1beta1/": {
    "get": {
     "description": "get available resources",
     "consumes": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.APIResourceList"
       }
      }
     }
    }
   },
   "/apis/storage.k8s.io/v1beta1/storageclasses": {
    "get": {
     "description": "list or watch objects of kind StorageClass",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listStorageClass",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.StorageClassList"
       }
      }
     }
    },
    "post": {
     "description": "create a StorageClass",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createStorageClass",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.StorageClass"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.StorageClass"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of StorageClass",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionStorageClass",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/storage.k8s.io/v1beta1/storageclasses/{name}": {
    "get": {
     "description": "read the specified StorageClass",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readStorageClass",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.StorageClass"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified StorageClass",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceStorageClass",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.StorageClass"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.StorageClass"
       }
      }
     }
    },
    "delete": {
     "description": "delete a StorageClass",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteStorageClass",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified StorageClass",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchStorageClass",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.StorageClass"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the StorageClass",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/apis/storage.k8s.io/v1beta1/watch/storageclasses": {
    "get": {
     "description": "watch individual changes to a list of StorageClass",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchStorageClassList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/storage.k8s.io/v1beta1/watch/storageclasses/{name}": {
    "get": {
     "description": "watch changes to an object of kind StorageClass",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchStorageClass",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the StorageClass",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/logs/": {
    "get": {
     "schemes": [
      "https"
     ],
     "operationId": "logFileListHandler",
     "responses": {
      "default": {
       "description": "Default Response."
      }
     }
    }
   },
   "/logs/{logpath}": {
    "get": {
     "schemes": [
      "https"
     ],
     "operationId": "logFileHandler",
     "responses": {
      "default": {
       "description": "Default Response."
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "path to the log",
      "name": "logpath",
      "in": "path",
      "required": true
     }
    ]
   },
   "/version/": {
    "get": {
     "description": "get the code version",
     "consumes": [
      "application/json"
     ],
     "produces": [
      "application/json"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "getCodeVersion",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/version.Info"
       }
      }
     }
    }
   }
  },
  "definitions": {
   "intstr.IntOrString": {
    "type": "string",
    "format": "int-or-string"
   },
   "resource.Quantity": {
    "type": "string"
   },
   "runtime.RawExtension": {
    "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.\n\n// Internal package: type MyAPIObject struct {\n\truntime.TypeMeta `json:\",inline\"`\n\tMyPlugin runtime.Object `json:\"myPlugin\"`\n} type PluginA struct {\n\tAOption string `json:\"aOption\"`\n}\n\n// External package: type MyAPIObject struct {\n\truntime.TypeMeta `json:\",inline\"`\n\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n} type PluginA struct {\n\tAOption string `json:\"aOption\"`\n}\n\n// On the wire, the JSON will look something like this: {\n\t\"kind\":\"MyAPIObject\",\n\t\"apiVersion\":\"v1\",\n\t\"myPlugin\": {\n\t\t\"kind\":\"PluginA\",\n\t\t\"aOption\":\"foo\",\n\t},\n}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)",
    "required": [
     "Raw"
    ],
    "properties": {
     "Raw": {
      "description": "Raw is the underlying serialization of this object.",
      "type": "string",
      "format": "byte"
     }
    }
   },
   "unversioned.APIGroup": {
    "description": "APIGroup contains the name, the supported versions, and the preferred version of a group.",
    "required": [
     "name",
     "versions",
     "serverAddressByClientCIDRs"
    ],
    "properties": {
     "name": {
      "description": "name is the name of the group.",
      "type": "string"
     },
     "preferredVersion": {
      "description": "preferredVersion is the version preferred by the API server, which probably is the storage version.",
      "$ref": "#/definitions/unversioned.GroupVersionForDiscovery"
     },
     "serverAddressByClientCIDRs": {
      "description": "a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/unversioned.ServerAddressByClientCIDR"
      }
     },
     "versions": {
      "description": "versions are the versions supported in this group.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/unversioned.GroupVersionForDiscovery"
      }
     }
    }
   },
   "unversioned.APIGroupList": {
    "description": "APIGroupList is a list of APIGroup, to allow clients to discover the API at /apis.",
    "required": [
     "groups"
    ],
    "properties": {
     "groups": {
      "description": "groups is a list of APIGroup.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/unversioned.APIGroup"
      }
     }
    }
   },
   "unversioned.APIResource": {
    "description": "APIResource specifies the name of a resource and whether it is namespaced.",
    "required": [
     "name",
     "namespaced",
     "kind"
    ],
    "properties": {
     "kind": {
      "description": "kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')",
      "type": "string"
     },
     "name": {
      "description": "name is the name of the resource.",
      "type": "string"
     },
     "namespaced": {
      "description": "namespaced indicates if a resource is namespaced or not.",
      "type": "boolean"
     }
    }
   },
   "unversioned.APIResourceList": {
    "description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
    "required": [
     "groupVersion",
     "resources"
    ],
    "properties": {
     "groupVersion": {
      "description": "groupVersion is the group and version this APIResourceList is for.",
      "type": "string"
     },
     "resources": {
      "description": "resources contains the name of the resources and if they are namespaced.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/unversioned.APIResource"
      }
     }
    }
   },
   "unversioned.APIVersions": {
    "description": "APIVersions lists the versions that are available, to allow clients to discover the API at /api, which is the root path of the legacy v1 API.",
    "required": [
     "versions",
     "serverAddressByClientCIDRs"
    ],
    "properties": {
     "serverAddressByClientCIDRs": {
      "description": "a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/unversioned.ServerAddressByClientCIDR"
      }
     },
     "versions": {
      "description": "versions are the api versions that are available.",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },
   "unversioned.GroupVersionForDiscovery": {
    "description": "GroupVersion contains the \"group/version\" and \"version\" string of a version. It is made a struct to keep extensibility.",
    "required": [
     "groupVersion",
     "version"
    ],
    "properties": {
     "groupVersion": {
      "description": "groupVersion specifies the API group and version in the form \"group/version\"",
      "type": "string"
     },
     "version": {
      "description": "version specifies the version in the form of \"version\". This is to save the clients the trouble of splitting the GroupVersion.",
      "type": "string"
     }
    }
   },
   "unversioned.LabelSelector": {
    "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
    "properties": {
     "matchExpressions": {
      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/unversioned.LabelSelectorRequirement"
      }
     },
     "matchLabels": {
      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     }
    }
   },
   "unversioned.LabelSelectorRequirement": {
    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
    "required": [
     "key",
     "operator"
    ],
    "properties": {
     "key": {
      "description": "key is the label key that the selector applies to.",
      "type": "string"
     },
     "operator": {
      "description": "operator represents a key's relationship to a set of values. Valid operators ard In, NotIn, Exists and DoesNotExist.",
      "type": "string"
     },
     "values": {
      "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },
   "unversioned.ListMeta": {
    "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
    "properties": {
     "resourceVersion": {
      "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency",
      "type": "string"
     },
     "selfLink": {
      "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.",
      "type": "string"
     }
    }
   },
   "unversioned.Patch": {
    "description": "Patch is provided to give a concrete name and type to the Kubernetes PATCH request body."
   },
   "unversioned.ServerAddressByClientCIDR": {
    "description": "ServerAddressByClientCIDR helps the client to determine the server address that they should use, depending on the clientCIDR that they match.",
    "required": [
     "clientCIDR",
     "serverAddress"
    ],
    "properties": {
     "clientCIDR": {
      "description": "The CIDR with which clients can match their IP to figure out the server address that they should use.",
      "type": "string"
     },
     "serverAddress": {
      "description": "Address of this server, suitable for a client that matches the above CIDR. This can be a hostname, hostname:port, IP or IP:port.",
      "type": "string"
     }
    }
   },
   "unversioned.Status": {
    "description": "Status is a return value for calls that don't return other objects.",
    "properties": {
     "code": {
      "description": "Suggested HTTP return code for this status, 0 if not set.",
      "type": "integer",
      "format": "int32"
     },
     "details": {
      "description": "Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.",
      "$ref": "#/definitions/unversioned.StatusDetails"
     },
     "message": {
      "description": "A human-readable description of the status of this operation.",
      "type": "string"
     },
     "metadata": {
      "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "$ref": "#/definitions/unversioned.ListMeta"
     },
     "reason": {
      "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.",
      "type": "string"
     },
     "status": {
      "description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "type": "string"
     }
    }
   },
   "unversioned.StatusCause": {
    "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
    "properties": {
     "field": {
      "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"",
      "type": "string"
     },
     "message": {
      "description": "A human-readable description of the cause of the error.  This field may be presented as-is to a reader.",
      "type": "string"
     },
     "reason": {
      "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available.",
      "type": "string"
     }
    }
   },
   "unversioned.StatusDetails": {
    "description": "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.",
    "properties": {
     "causes": {
      "description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/unversioned.StatusCause"
      }
     },
     "group": {
      "description": "The group attribute of the resource associated with the status StatusReason.",
      "type": "string"
     },
     "kind": {
      "description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "name": {
      "description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).",
      "type": "string"
     },
     "retryAfterSeconds": {
      "description": "If specified, the time in seconds before the operation should be retried.",
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "unversioned.Time": {
    "type": "string",
    "format": "date-time"
   },
   "v1.AttachedVolume": {
    "description": "AttachedVolume describes a volume attached to a node",
    "required": [
     "name",
     "devicePath"
    ],
    "properties": {
     "devicePath": {
      "description": "DevicePath represents the device path where the volume should be avilable",
      "type": "string"
     },
     "name": {
      "description": "Name of the attached volume",
      "type": "string"
     }
    }
   },
   "v1.Binding": {
    "description": "Binding ties one object to another. For example, a pod is bound to a node by a scheduler.",
    "required": [
     "target"
    ],
    "properties": {
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "target": {
      "description": "The target object that you want to bind to the standard object.",
      "$ref": "#/definitions/v1.ObjectReference"
     }
    }
   },
   "v1.Capabilities": {
    "description": "Adds and removes POSIX capabilities from running containers.",
    "properties": {
     "add": {
      "description": "Added capabilities",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "drop": {
      "description": "Removed capabilities",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },
   "v1.ComponentCondition": {
    "description": "Information about the condition of a component.",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "error": {
      "description": "Condition error code for a component. For example, a health check error code.",
      "type": "string"
     },
     "message": {
      "description": "Message about the condition for a component. For example, information about a health check.",
      "type": "string"
     },
     "status": {
      "description": "Status of the condition for a component. Valid values for \"Healthy\": \"True\", \"False\", or \"Unknown\".",
      "type": "string"
     },
     "type": {
      "description": "Type of condition for a component. Valid value: \"Healthy\"",
      "type": "string"
     }
    }
   },
   "v1.ComponentStatus": {
    "description": "ComponentStatus (and ComponentStatusList) holds the cluster validation info.",
    "properties": {
     "conditions": {
      "description": "List of component conditions observed",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.ComponentCondition"
      }
     },
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     }
    }
   },
   "v1.ComponentStatusList": {
    "description": "Status of all the conditions for the component as a list of ComponentStatus objects.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "List of ComponentStatus objects.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.ComponentStatus"
      }
     },
     "metadata": {
      "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1.ConfigMap": {
    "description": "ConfigMap holds configuration data for pods to consume.",
    "properties": {
     "data": {
      "description": "Data contains the configuration data. Each key must be a valid DNS_SUBDOMAIN with an optional leading dot.",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     }
    }
   },
   "v1.ConfigMapKeySelector": {
    "description": "Selects a key from a ConfigMap.",
    "required": [
     "key"
    ],
    "properties": {
     "key": {
      "description": "The key to select.",
      "type": "string"
     }
    }
   },
   "v1.ConfigMapList": {
    "description": "ConfigMapList is a resource containing a list of ConfigMap objects.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "Items is the list of ConfigMaps.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.ConfigMap"
      }
     },
     "metadata": {
      "description": "More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1.Container": {
    "description": "A single application container that you want to run within a pod.",
    "required": [
     "name"
    ],
    "properties": {
     "args": {
      "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "command": {
      "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "env": {
      "description": "List of environment variables to set in the container. Cannot be updated.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.EnvVar"
      }
     },
     "image": {
      "description": "Docker image name. More info: http://kubernetes.io/docs/user-guide/images",
      "type": "string"
     },
     "imagePullPolicy": {
      "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images",
      "type": "string"
     },
     "lifecycle": {
      "description": "Actions that the management system should take in response to container lifecycle events. Cannot be updated.",
      "$ref": "#/definitions/v1.Lifecycle"
     },
     "livenessProbe": {
      "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
      "$ref": "#/definitions/v1.Probe"
     },
     "name": {
      "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
      "type": "string"
     },
     "ports": {
      "description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.ContainerPort"
      }
     },
     "readinessProbe": {
      "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
      "$ref": "#/definitions/v1.Probe"
     },
     "resources": {
      "description": "Compute Resources required by this container. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#resources",
      "$ref": "#/definitions/v1.ResourceRequirements"
     },
     "securityContext": {
      "description": "Security options the pod should run with. More info: http://releases.k8s.io/HEAD/docs/design/security_context.md",
      "$ref": "#/definitions/v1.SecurityContext"
     },
     "stdin": {
      "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
      "type": "boolean"
     },
     "stdinOnce": {
      "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
      "type": "boolean"
     },
     "terminationMessagePath": {
      "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated.",
      "type": "string"
     },
     "tty": {
      "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.",
      "type": "boolean"
     },
     "volumeMounts": {
      "description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.VolumeMount"
      }
     },
     "workingDir": {
      "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
      "type": "string"
     }
    }
   },
   "v1.ContainerImage": {
    "description": "Describe a container image",
    "required": [
     "names"
    ],
    "properties": {
     "names": {
      "description": "Names by which this image is known. e.g. [\"gcr.io/google_containers/hyperkube:v1.0.7\", \"dockerhub.io/google_containers/hyperkube:v1.0.7\"]",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "sizeBytes": {
      "description": "The size of the image in bytes.",
      "type": "integer",
      "format": "int64"
     }
    }
   },
   "v1.ContainerPort": {
    "description": "ContainerPort represents a network port in a single container.",
    "required": [
     "containerPort"
    ],
    "properties": {
     "containerPort": {
      "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 \u003c x \u003c 65536.",
      "type": "integer",
      "format": "int32"
     },
     "hostIP": {
      "description": "What host IP to bind the external port to.",
      "type": "string"
     },
     "hostPort": {
      "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 \u003c x \u003c 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
      "type": "integer",
      "format": "int32"
     },
     "name": {
      "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.",
      "type": "string"
     },
     "protocol": {
      "description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
      "type": "string"
     }
    }
   },
   "v1.ContainerState": {
    "description": "ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.",
    "properties": {
     "running": {
      "description": "Details about a running container",
      "$ref": "#/definitions/v1.ContainerStateRunning"
     },
     "terminated": {
      "description": "Details about a terminated container",
      "$ref": "#/definitions/v1.ContainerStateTerminated"
     },
     "waiting": {
      "description": "Details about a waiting container",
      "$ref": "#/definitions/v1.ContainerStateWaiting"
     }
    }
   },
   "v1.ContainerStateRunning": {
    "description": "ContainerStateRunning is a running state of a container.",
    "properties": {
     "startedAt": {
      "description": "Time at which the container was last (re-)started",
      "$ref": "#/definitions/unversioned.Time"
     }
    }
   },
   "v1.ContainerStateTerminated": {
    "description": "ContainerStateTerminated is a terminated state of a container.",
    "required": [
     "exitCode"
    ],
    "properties": {
     "containerID": {
      "description": "Container's ID in the format 'docker://\u003ccontainer_id\u003e'",
      "type": "string"
     },
     "exitCode": {
      "description": "Exit status from the last termination of the container",
      "type": "integer",
      "format": "int32"
     },
     "finishedAt": {
      "description": "Time at which the container last terminated",
      "$ref": "#/definitions/unversioned.Time"
     },
     "message": {
      "description": "Message regarding the last termination of the container",
      "type": "string"
     },
     "reason": {
      "description": "(brief) reason from the last termination of the container",
      "type": "string"
     },
     "signal": {
      "description": "Signal from the last termination of the container",
      "type": "integer",
      "format": "int32"
     },
     "startedAt": {
      "description": "Time at which previous execution of the container started",
      "$ref": "#/definitions/unversioned.Time"
     }
    }
   },
   "v1.ContainerStateWaiting": {
    "description": "ContainerStateWaiting is a waiting state of a container.",
    "properties": {
     "message": {
      "description": "Message regarding why the container is not yet running.",
      "type": "string"
     },
     "reason": {
      "description": "(brief) reason the container is not yet running.",
      "type": "string"
     }
    }
   },
   "v1.ContainerStatus": {
    "description": "ContainerStatus contains details for the current status of this container.",
    "required": [
     "name",
     "ready",
     "restartCount",
     "image",
     "imageID"
    ],
    "properties": {
     "containerID": {
      "description": "Container's ID in the format 'docker://\u003ccontainer_id\u003e'. More info: http://kubernetes.io/docs/user-guide/container-environment#container-information",
      "type": "string"
     },
     "image": {
      "description": "The image the container is running. More info: http://kubernetes.io/docs/user-guide/images",
      "type": "string"
     },
     "imageID": {
      "description": "ImageID of the container's image.",
      "type": "string"
     },
     "lastState": {
      "description": "Details about the container's last termination condition.",
      "$ref": "#/definitions/v1.ContainerState"
     },
     "name": {
      "description": "This must be a DNS_LABEL. Each container in a pod must have a unique name. Cannot be updated.",
      "type": "string"
     },
     "ready": {
      "description": "Specifies whether the container has passed its readiness probe.",
      "type": "boolean"
     },
     "restartCount": {
      "description": "The number of times the container has been restarted, currently based on the number of dead containers that have not yet been removed. Note that this is calculated from dead containers. But those containers are subject to garbage collection. This value will get capped at 5 by GC.",
      "type": "integer",
      "format": "int32"
     },
     "state": {
      "description": "Details about the container's current condition.",
      "$ref": "#/definitions/v1.ContainerState"
     }
    }
   },
   "v1.CrossVersionObjectReference": {
    "description": "CrossVersionObjectReference contains enough information to let you identify the referred resource.",
    "required": [
     "kind",
     "name"
    ],
    "properties": {
     "apiVersion": {
      "description": "API version of the referent",
      "type": "string"
     },
     "kind": {
      "description": "Kind of the referent; More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds\"",
      "type": "string"
     },
     "name": {
      "description": "Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names",
      "type": "string"
     }
    }
   },
   "v1.DaemonEndpoint": {
    "description": "DaemonEndpoint contains information about a single Daemon endpoint.",
    "required": [
     "Port"
    ],
    "properties": {
     "Port": {
      "description": "Port number of the given endpoint.",
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1.DeleteOptions": {
    "description": "DeleteOptions may be provided when deleting an API object",
    "properties": {
     "gracePeriodSeconds": {
      "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
      "type": "integer",
      "format": "int64"
     },
     "orphanDependents": {
      "description": "Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list.",
      "type": "boolean"
     },
     "preconditions": {
      "description": "Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned.",
      "$ref": "#/definitions/v1.Preconditions"
     }
    }
   },
   "v1.EndpointAddress": {
    "description": "EndpointAddress is a tuple that describes single IP address.",
    "required": [
     "ip"
    ],
    "properties": {
     "hostname": {
      "description": "The Hostname of this endpoint",
      "type": "string"
     },
     "ip": {
      "description": "The IP of this endpoint. May not be loopback (127.0.0.0/8), link-local (169.254.0.0/16), or link-local multicast ((224.0.0.0/24). IPv6 is also accepted but not fully supported on all platforms. Also, certain kubernetes components, like kube-proxy, are not IPv6 ready.",
      "type": "string"
     },
     "nodeName": {
      "description": "Optional: Node hosting this endpoint. This can be used to determine endpoints local to a node.",
      "type": "string"
     },
     "targetRef": {
      "description": "Reference to object providing the endpoint.",
      "$ref": "#/definitions/v1.ObjectReference"
     }
    }
   },
   "v1.EndpointPort": {
    "description": "EndpointPort is a tuple that describes a single port.",
    "required": [
     "port"
    ],
    "properties": {
     "name": {
      "description": "The name of this port (corresponds to ServicePort.Name). Must be a DNS_LABEL. Optional only if one port is defined.",
      "type": "string"
     },
     "port": {
      "description": "The port number of the endpoint.",
      "type": "integer",
      "format": "int32"
     },
     "protocol": {
      "description": "The IP protocol for this port. Must be UDP or TCP. Default is TCP.",
      "type": "string"
     }
    }
   },
   "v1.EndpointSubset": {
    "description": "EndpointSubset is a group of addresses with a common set of ports. The expanded set of endpoints is the Cartesian product of Addresses x Ports. For example, given:\n  {\n    Addresses: [{\"ip\": \"10.10.1.1\"}, {\"ip\": \"10.10.2.2\"}],\n    Ports:     [{\"name\": \"a\", \"port\": 8675}, {\"name\": \"b\", \"port\": 309}]\n  }\nThe resulting set of endpoints can be viewed as:\n    a: [ 10.10.1.1:8675, 10.10.2.2:8675 ],\n    b: [ 10.10.1.1:309, 10.10.2.2:309 ]",
    "properties": {
     "addresses": {
      "description": "IP addresses which offer the related ports that are marked as ready. These endpoints should be considered safe for load balancers and clients to utilize.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.EndpointAddress"
      }
     },
     "notReadyAddresses": {
      "description": "IP addresses which offer the related ports but are not currently marked as ready because they have not yet finished starting, have recently failed a readiness check, or have recently failed a liveness check.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.EndpointAddress"
      }
     },
     "ports": {
      "description": "Port numbers available on the related IP addresses.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.EndpointPort"
      }
     }
    }
   },
   "v1.Endpoints": {
    "description": "Endpoints is a collection of endpoints that implement the actual service. Example:\n  Name: \"mysvc\",\n  Subsets: [\n    {\n      Addresses: [{\"ip\": \"10.10.1.1\"}, {\"ip\": \"10.10.2.2\"}],\n      Ports: [{\"name\": \"a\", \"port\": 8675}, {\"name\": \"b\", \"port\": 309}]\n    },\n    {\n      Addresses: [{\"ip\": \"10.10.3.3\"}],\n      Ports: [{\"name\": \"a\", \"port\": 93}, {\"name\": \"b\", \"port\": 76}]\n    },\n ]",
    "required": [
     "subsets"
    ],
    "properties": {
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "subsets": {
      "description": "The set of all endpoints is the union of all subsets. Addresses are placed into subsets according to the IPs they share. A single address with multiple ports, some of which are ready and some of which are not (because they come from different containers) will result in the address being displayed in different subsets for the different ports. No address will appear in both Addresses and NotReadyAddresses in the same subset. Sets of addresses and ports that comprise a service.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.EndpointSubset"
      }
     }
    }
   },
   "v1.EndpointsList": {
    "description": "EndpointsList is a list of endpoints.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "List of endpoints.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.Endpoints"
      }
     },
     "metadata": {
      "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1.EnvVar": {
    "description": "EnvVar represents an environment variable present in a Container.",
    "required": [
     "name"
    ],
    "properties": {
     "name": {
      "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
      "type": "string"
     },
     "value": {
      "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
      "type": "string"
     },
     "valueFrom": {
      "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
      "$ref": "#/definitions/v1.EnvVarSource"
     }
    }
   },
   "v1.EnvVarSource": {
    "description": "EnvVarSource represents a source for the value of an EnvVar.",
    "properties": {
     "configMapKeyRef": {
      "description": "Selects a key of a ConfigMap.",
      "$ref": "#/definitions/v1.ConfigMapKeySelector"
     },
     "fieldRef": {
      "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP.",
      "$ref": "#/definitions/v1.ObjectFieldSelector"
     },
     "resourceFieldRef": {
      "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
      "$ref": "#/definitions/v1.ResourceFieldSelector"
     },
     "secretKeyRef": {
      "description": "Selects a key of a secret in the pod's namespace",
      "$ref": "#/definitions/v1.SecretKeySelector"
     }
    }
   },
   "v1.Event": {
    "description": "Event is a report of an event somewhere in the cluster.",
    "required": [
     "metadata",
     "involvedObject"
    ],
    "properties": {
     "count": {
      "description": "The number of times this event has occurred.",
      "type": "integer",
      "format": "int32"
     },
     "firstTimestamp": {
      "description": "The time at which the event was first recorded. (Time of server receipt is in TypeMeta.)",
      "$ref": "#/definitions/unversioned.Time"
     },
     "involvedObject": {
      "description": "The object that this event is about.",
      "$ref": "#/definitions/v1.ObjectReference"
     },
     "lastTimestamp": {
      "description": "The time at which the most recent occurrence of this event was recorded.",
      "$ref": "#/definitions/unversioned.Time"
     },
     "message": {
      "description": "A human-readable description of the status of this operation.",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "reason": {
      "description": "This should be a short, machine understandable string that gives the reason for the transition into the object's current status.",
      "type": "string"
     },
     "source": {
      "description": "The component reporting this event. Should be a short machine understandable string.",
      "$ref": "#/definitions/v1.EventSource"
     },
     "type": {
      "description": "Type of this event (Normal, Warning), new types could be added in the future",
      "type": "string"
     }
    }
   },
   "v1.EventList": {
    "description": "EventList is a list of events.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "List of events",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.Event"
      }
     },
     "metadata": {
      "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1.EventSource": {
    "description": "EventSource contains information for an event.",
    "properties": {
     "component": {
      "description": "Component from which the event is generated.",
      "type": "string"
     },
     "host": {
      "description": "Node name on which the event is generated.",
      "type": "string"
     }
    }
   },
   "v1.ExecAction": {
    "description": "ExecAction describes a \"run in container\" action.",
    "properties": {
     "command": {
      "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },
   "v1.HTTPGetAction": {
    "description": "HTTPGetAction describes an action based on HTTP Get requests.",
    "required": [
     "port"
    ],
    "properties": {
     "host": {
      "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
      "type": "string"
     },
     "httpHeaders": {
      "description": "Custom headers to set in the request. HTTP allows repeated headers.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.HTTPHeader"
      }
     },
     "path": {
      "description": "Path to access on the HTTP server.",
      "type": "string"
     },
     "port": {
      "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
      "$ref": "#/definitions/intstr.IntOrString"
     },
     "scheme": {
      "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
      "type": "string"
     }
    }
   },
   "v1.HTTPHeader": {
    "description": "HTTPHeader describes a custom header to be used in HTTP probes",
    "required": [
     "name",
     "value"
    ],
    "properties": {
     "name": {
      "description": "The header field name",
      "type": "string"
     },
     "value": {
      "description": "The header field value",
      "type": "string"
     }
    }
   },
   "v1.Handler": {
    "description": "Handler defines a specific action that should be taken",
    "properties": {
     "exec": {
      "description": "One and only one of the following should be specified. Exec specifies the action to take.",
      "$ref": "#/definitions/v1.ExecAction"
     },
     "httpGet": {
      "description": "HTTPGet specifies the http request to perform.",
      "$ref": "#/definitions/v1.HTTPGetAction"
     },
     "tcpSocket": {
      "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
      "$ref": "#/definitions/v1.TCPSocketAction"
     }
    }
   },
   "v1.HorizontalPodAutoscaler": {
    "description": "configuration of a horizontal pod autoscaler.",
    "properties": {
     "metadata": {
      "description": "Standard object metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "behaviour of autoscaler. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status.",
      "$ref": "#/definitions/v1.HorizontalPodAutoscalerSpec"
     },
     "status": {
      "description": "current information about the autoscaler.",
      "$ref": "#/definitions/v1.HorizontalPodAutoscalerStatus"
     }
    }
   },
   "v1.HorizontalPodAutoscalerList": {
    "description": "list of horizontal pod autoscaler objects.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "list of horizontal pod autoscaler objects.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.HorizontalPodAutoscaler"
      }
     },
     "metadata": {
      "description": "Standard list metadata.",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1.HorizontalPodAutoscalerSpec": {
    "description": "specification of a horizontal pod autoscaler.",
    "required": [
     "scaleTargetRef",
     "maxReplicas"
    ],
    "properties": {
     "maxReplicas": {
      "description": "upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas.",
      "type": "integer",
      "format": "int32"
     },
     "minReplicas": {
      "description": "lower limit for the number of pods that can be set by the autoscaler, default 1.",
      "type": "integer",
      "format": "int32"
     },
     "scaleTargetRef": {
      "description": "reference to scaled resource; horizontal pod autoscaler will learn the current resource consumption and will set the desired number of pods by using its Scale subresource.",
      "$ref": "#/definitions/v1.CrossVersionObjectReference"
     },
     "targetCPUUtilizationPercentage": {
      "description": "target average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified the default autoscaling policy will be used.",
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1.HorizontalPodAutoscalerStatus": {
    "description": "current status of a horizontal pod autoscaler",
    "required": [
     "currentReplicas",
     "desiredReplicas"
    ],
    "properties": {
     "currentCPUUtilizationPercentage": {
      "description": "current average CPU utilization over all pods, represented as a percentage of requested CPU, e.g. 70 means that an average pod is using now 70% of its requested CPU.",
      "type": "integer",
      "format": "int32"
     },
     "currentReplicas": {
      "description": "current number of replicas of pods managed by this autoscaler.",
      "type": "integer",
      "format": "int32"
     },
     "desiredReplicas": {
      "description": "desired number of replicas of pods managed by this autoscaler.",
      "type": "integer",
      "format": "int32"
     },
     "lastScaleTime": {
      "description": "last time the HorizontalPodAutoscaler scaled the number of pods; used by the autoscaler to control how often the number of pods is changed.",
      "$ref": "#/definitions/unversioned.Time"
     },
     "observedGeneration": {
      "description": "most recent generation observed by this autoscaler.",
      "type": "integer",
      "format": "int64"
     }
    }
   },
   "v1.Job": {
    "description": "Job represents the configuration of a single job.",
    "properties": {
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "Spec is a structure defining the expected behavior of a job. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1.JobSpec"
     },
     "status": {
      "description": "Status is a structure describing current status of a job. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1.JobStatus"
     }
    }
   },
   "v1.JobCondition": {
    "description": "JobCondition describes current state of a job.",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "lastProbeTime": {
      "description": "Last time the condition was checked.",
      "$ref": "#/definitions/unversioned.Time"
     },
     "lastTransitionTime": {
      "description": "Last time the condition transit from one status to another.",
      "$ref": "#/definitions/unversioned.Time"
     },
     "message": {
      "description": "Human readable message indicating details about last transition.",
      "type": "string"
     },
     "reason": {
      "description": "(brief) reason for the condition's last transition.",
      "type": "string"
     },
     "status": {
      "description": "Status of the condition, one of True, False, Unknown.",
      "type": "string"
     },
     "type": {
      "description": "Type of job condition, Complete or Failed.",
      "type": "string"
     }
    }
   },
   "v1.JobList": {
    "description": "JobList is a collection of jobs.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "Items is the list of Job.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.Job"
      }
     },
     "metadata": {
      "description": "Standard list metadata More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1.JobSpec": {
    "description": "JobSpec describes how the job execution will look like.",
    "required": [
     "template"
    ],
    "properties": {
     "activeDeadlineSeconds": {
      "description": "Optional duration in seconds relative to the startTime that the job may be active before the system tries to terminate it; value must be positive integer",
      "type": "integer",
      "format": "int64"
     },
     "completions": {
      "description": "Completions specifies the desired number of successfully finished pods the job should be run with.  Setting to nil means that the success of any pod signals the success of all pods, and allows parallelism to have any positive value.  Setting to 1 means that parallelism is limited to 1 and the success of that pod signals the success of the job. More info: http://kubernetes.io/docs/user-guide/jobs",
      "type": "integer",
      "format": "int32"
     },
     "manualSelector": {
      "description": "ManualSelector controls generation of pod labels and pod selectors. Leave `manualSelector` unset unless you are certain what you are doing. When false or unset, the system pick labels unique to this job and appends those labels to the pod template.  When true, the user is responsible for picking unique labels and specifying the selector.  Failure to pick a unique label may cause this and other jobs to not function correctly.  However, You may see `manualSelector=true` in jobs that were created with the old `extensions/v1beta1` API. More info: http://releases.k8s.io/HEAD/docs/design/selector-generation.md",
      "type": "boolean"
     },
     "parallelism": {
      "description": "Parallelism specifies the maximum desired number of pods the job should run at any given time. The actual number of pods running in steady state will be less than this number when ((.spec.completions - .status.successful) \u003c .spec.parallelism), i.e. when the work left to do is less than max parallelism. More info: http://kubernetes.io/docs/user-guide/jobs",
      "type": "integer",
      "format": "int32"
     },
     "selector": {
      "description": "Selector is a label query over pods that should match the pod count. Normally, the system sets this field for you. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors",
      "$ref": "#/definitions/v1.LabelSelector"
     },
     "template": {
      "description": "Template is the object that describes the pod that will be created when executing a job. More info: http://kubernetes.io/docs/user-guide/jobs",
      "$ref": "#/definitions/v1.PodTemplateSpec"
     }
    }
   },
   "v1.JobStatus": {
    "description": "JobStatus represents the current state of a Job.",
    "properties": {
     "active": {
      "description": "Active is the number of actively running pods.",
      "type": "integer",
      "format": "int32"
     },
     "completionTime": {
      "description": "CompletionTime represents time when the job was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC.",
      "$ref": "#/definitions/unversioned.Time"
     },
     "conditions": {
      "description": "Conditions represent the latest available observations of an object's current state. More info: http://kubernetes.io/docs/user-guide/jobs",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.JobCondition"
      }
     },
     "failed": {
      "description": "Failed is the number of pods which reached Phase Failed.",
      "type": "integer",
      "format": "int32"
     },
     "startTime": {
      "description": "StartTime represents time when the job was acknowledged by the Job Manager. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC.",
      "$ref": "#/definitions/unversioned.Time"
     },
     "succeeded": {
      "description": "Succeeded is the number of pods which reached Phase Succeeded.",
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1.LabelSelector": {
    "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
    "properties": {
     "matchExpressions": {
      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.LabelSelectorRequirement"
      }
     },
     "matchLabels": {
      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     }
    }
   },
   "v1.LabelSelectorRequirement": {
    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
    "required": [
     "key",
     "operator"
    ],
    "properties": {
     "key": {
      "description": "key is the label key that the selector applies to.",
      "type": "string"
     },
     "operator": {
      "description": "operator represents a key's relationship to a set of values. Valid operators ard In, NotIn, Exists and DoesNotExist.",
      "type": "string"
     },
     "values": {
      "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },
   "v1.Lifecycle": {
    "description": "Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.",
    "properties": {
     "postStart": {
      "description": "PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: http://kubernetes.io/docs/user-guide/container-environment#hook-details",
      "$ref": "#/definitions/v1.Handler"
     },
     "preStop": {
      "description": "PreStop is called immediately before a container is terminated. The container is terminated after the handler completes. The reason for termination is passed to the handler. Regardless of the outcome of the handler, the container is eventually terminated. Other management of the container blocks until the hook completes. More info: http://kubernetes.io/docs/user-guide/container-environment#hook-details",
      "$ref": "#/definitions/v1.Handler"
     }
    }
   },
   "v1.LimitRange": {
    "description": "LimitRange sets resource usage limits for each kind of resource in a Namespace.",
    "properties": {
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "Spec defines the limits enforced. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1.LimitRangeSpec"
     }
    }
   },
   "v1.LimitRangeItem": {
    "description": "LimitRangeItem defines a min/max usage limit for any resource that matches on kind.",
    "properties": {
     "default": {
      "description": "Default resource requirement limit value by resource name if resource limit is omitted.",
      "type": "object",
      "additionalProperties": {
       "$ref": "#/definitions/resource.Quantity"
      }
     },
     "defaultRequest": {
      "description": "DefaultRequest is the default resource requirement request value by resource name if resource request is omitted.",
      "type": "object",
      "additionalProperties": {
       "$ref": "#/definitions/resource.Quantity"
      }
     },
     "max": {
      "description": "Max usage constraints on this kind by resource name.",
      "type": "object",
      "additionalProperties": {
       "$ref": "#/definitions/resource.Quantity"
      }
     },
     "maxLimitRequestRatio": {
      "description": "MaxLimitRequestRatio if specified, the named resource must have a request and limit that are both non-zero where limit divided by request is less than or equal to the enumerated value; this represents the max burst for the named resource.",
      "type": "object",
      "additionalProperties": {
       "$ref": "#/definitions/resource.Quantity"
      }
     },
     "min": {
      "description": "Min usage constraints on this kind by resource name.",
      "type": "object",
      "additionalProperties": {
       "$ref": "#/definitions/resource.Quantity"
      }
     },
     "type": {
      "description": "Type of resource that this limit applies to.",
      "type": "string"
     }
    }
   },
   "v1.LimitRangeList": {
    "description": "LimitRangeList is a list of LimitRange items.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "Items is a list of LimitRange objects. More info: http://releases.k8s.io/HEAD/docs/design/admission_control_limit_range.md",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.LimitRange"
      }
     },
     "metadata": {
      "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1.LimitRangeSpec": {
    "description": "LimitRangeSpec defines a min/max usage limit for resources that match on kind.",
    "required": [
     "limits"
    ],
    "properties": {
     "limits": {
      "description": "Limits is the list of LimitRangeItem objects that are enforced.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.LimitRangeItem"
      }
     }
    }
   },
   "v1.LoadBalancerIngress": {
    "description": "LoadBalancerIngress represents the status of a load-balancer ingress point: traffic intended for the service should be sent to an ingress point.",
    "properties": {
     "hostname": {
      "description": "Hostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers)",
      "type": "string"
     },
     "ip": {
      "description": "IP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers)",
      "type": "string"
     }
    }
   },
   "v1.LoadBalancerStatus": {
    "description": "LoadBalancerStatus represents the status of a load-balancer.",
    "properties": {
     "ingress": {
      "description": "Ingress is a list containing ingress points for the load-balancer. Traffic intended for the service should be sent to these ingress points.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.LoadBalancerIngress"
      }
     }
    }
   },
   "v1.LocalObjectReference": {
    "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
    "properties": {
     "name": {
      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
      "type": "string"
     }
    }
   },
   "v1.Namespace": {
    "description": "Namespace provides a scope for Names. Use of multiple namespaces is optional.",
    "properties": {
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "Spec defines the behavior of the Namespace. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1.NamespaceSpec"
     },
     "status": {
      "description": "Status describes the current status of a Namespace. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1.NamespaceStatus"
     }
    }
   },
   "v1.NamespaceList": {
    "description": "NamespaceList is a list of Namespaces.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "Items is the list of Namespace objects in the list. More info: http://kubernetes.io/docs/user-guide/namespaces",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.Namespace"
      }
     },
     "metadata": {
      "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1.NamespaceSpec": {
    "description": "NamespaceSpec describes the attributes on a Namespace.",
    "properties": {
     "finalizers": {
      "description": "Finalizers is an opaque list of values that must be empty to permanently remove object from storage. More info: http://releases.k8s.io/HEAD/docs/design/namespaces.md#finalizers",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },
   "v1.NamespaceStatus": {
    "description": "NamespaceStatus is information about the current status of a Namespace.",
    "properties": {
     "phase": {
      "description": "Phase is the current lifecycle phase of the namespace. More info: http://releases.k8s.io/HEAD/docs/design/namespaces.md#phases",
      "type": "string"
     }
    }
   },
   "v1.Node": {
    "description": "Node is a worker node in Kubernetes. Each node will have a unique identifier in the cache (i.e. in etcd).",
    "properties": {
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "Spec defines the behavior of a node. http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1.NodeSpec"
     },
     "status": {
      "description": "Most recently observed status of the node. Populated by the system. Read-only. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1.NodeStatus"
     }
    }
   },
   "v1.NodeAddress": {
    "description": "NodeAddress contains information for the node's address.",
    "required": [
     "type",
     "address"
    ],
    "properties": {
     "address": {
      "description": "The node address.",
      "type": "string"
     },
     "type": {
      "description": "Node address type, one of Hostname, ExternalIP or InternalIP.",
      "type": "string"
     }
    }
   },
   "v1.NodeCondition": {
    "description": "NodeCondition contains condition information for a node.",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "lastHeartbeatTime": {
      "description": "Last time we got an update on a given condition.",
      "$ref": "#/definitions/unversioned.Time"
     },
     "lastTransitionTime": {
      "description": "Last time the condition transit from one status to another.",
      "$ref": "#/definitions/unversioned.Time"
     },
     "message": {
      "description": "Human readable message indicating details about last transition.",
      "type": "string"
     },
     "reason": {
      "description": "(brief) reason for the condition's last transition.",
      "type": "string"
     },
     "status": {
      "description": "Status of the condition, one of True, False, Unknown.",
      "type": "string"
     },
     "type": {
      "description": "Type of node condition.",
      "type": "string"
     }
    }
   },
   "v1.NodeDaemonEndpoints": {
    "description": "NodeDaemonEndpoints lists ports opened by daemons running on the Node.",
    "properties": {
     "kubeletEndpoint": {
      "description": "Endpoint on which Kubelet is listening.",
      "$ref": "#/definitions/v1.DaemonEndpoint"
     }
    }
   },
   "v1.NodeList": {
    "description": "NodeList is the whole list of all Nodes which have been registered with master.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "List of nodes",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.Node"
      }
     },
     "metadata": {
      "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1.NodeSpec": {
    "description": "NodeSpec describes the attributes that a node is created with.",
    "properties": {
     "externalID": {
      "description": "External ID of the node assigned by some machine database (e.g. a cloud provider). Deprecated.",
      "type": "string"
     },
     "podCIDR": {
      "description": "PodCIDR represents the pod IP range assigned to the node.",
      "type": "string"
     },
     "providerID": {
      "description": "ID of the node assigned by the cloud provider in the format: \u003cProviderName\u003e://\u003cProviderSpecificNodeID\u003e",
      "type": "string"
     },
     "unschedulable": {
      "description": "Unschedulable controls node schedulability of new pods. By default, node is schedulable. More info: http://releases.k8s.io/HEAD/docs/admin/node.md#manual-node-administration\"`",
      "type": "boolean"
     }
    }
   },
   "v1.NodeStatus": {
    "description": "NodeStatus is information about the current status of a node.",
    "properties": {
     "addresses": {
      "description": "List of addresses reachable to the node. Queried from cloud provider, if available. More info: http://releases.k8s.io/HEAD/docs/admin/node.md#node-addresses",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.NodeAddress"
      }
     },
     "allocatable": {
      "description": "Allocatable represents the resources of a node that are available for scheduling. Defaults to Capacity.",
      "type": "object",
      "additionalProperties": {
       "$ref": "#/definitions/resource.Quantity"
      }
     },
     "capacity": {
      "description": "Capacity represents the total resources of a node. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#capacity for more details.",
      "type": "object",
      "additionalProperties": {
       "$ref": "#/definitions/resource.Quantity"
      }
     },
     "conditions": {
      "description": "Conditions is an array of current observed node conditions. More info: http://releases.k8s.io/HEAD/docs/admin/node.md#node-condition",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.NodeCondition"
      }
     },
     "daemonEndpoints": {
      "description": "Endpoints of daemons running on the Node.",
      "$ref": "#/definitions/v1.NodeDaemonEndpoints"
     },
     "images": {
      "description": "List of container images on this node",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.ContainerImage"
      }
     },
     "nodeInfo": {
      "description": "Set of ids/uuids to uniquely identify the node. More info: http://releases.k8s.io/HEAD/docs/admin/node.md#node-info",
      "$ref": "#/definitions/v1.NodeSystemInfo"
     },
     "phase": {
      "description": "NodePhase is the recently observed lifecycle phase of the node. More info: http://releases.k8s.io/HEAD/docs/admin/node.md#node-phase The field is never populated, and now is deprecated.",
      "type": "string"
     },
     "volumesAttached": {
      "description": "List of volumes that are attached to the node.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.AttachedVolume"
      }
     },
     "volumesInUse": {
      "description": "List of attachable volumes in use (mounted) by the node.",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },
   "v1.NodeSystemInfo": {
    "description": "NodeSystemInfo is a set of ids/uuids to uniquely identify the node.",
    "required": [
     "machineID",
     "systemUUID",
     "bootID",
     "kernelVersion",
     "osImage",
     "containerRuntimeVersion",
     "kubeletVersion",
     "kubeProxyVersion",
     "operatingSystem",
     "architecture"
    ],
    "properties": {
     "architecture": {
      "description": "The Architecture reported by the node",
      "type": "string"
     },
     "bootID": {
      "description": "Boot ID reported by the node.",
      "type": "string"
     },
     "containerRuntimeVersion": {
      "description": "ContainerRuntime Version reported by the node through runtime remote API (e.g. docker://1.5.0).",
      "type": "string"
     },
     "kernelVersion": {
      "description": "Kernel Version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64).",
      "type": "string"
     },
     "kubeProxyVersion": {
      "description": "KubeProxy Version reported by the node.",
      "type": "string"
     },
     "kubeletVersion": {
      "description": "Kubelet Version reported by the node.",
      "type": "string"
     },
     "machineID": {
      "description": "MachineID reported by the node. For unique machine identification in the cluster this field is prefered. Learn more from man(5) machine-id: http://man7.org/linux/man-pages/man5/machine-id.5.html",
      "type": "string"
     },
     "operatingSystem": {
      "description": "The Operating System reported by the node",
      "type": "string"
     },
     "osImage": {
      "description": "OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy)).",
      "type": "string"
     },
     "systemUUID": {
      "description": "SystemUUID reported by the node. For unique machine identification MachineID is prefered. This field is specific to Red Hat hosts https://access.redhat.com/documentation/en-US/Red_Hat_Subscription_Management/1/html/RHSM/getting-system-uuid.html",
      "type": "string"
     }
    }
   },
   "v1.ObjectFieldSelector": {
    "description": "ObjectFieldSelector selects an APIVersioned field of an object.",
    "required": [
     "fieldPath"
    ],
    "properties": {
     "apiVersion": {
      "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
      "type": "string"
     },
     "fieldPath": {
      "description": "Path of the field to select in the specified API version.",
      "type": "string"
     }
    }
   },
   "v1.ObjectMeta": {
    "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
    "properties": {
     "annotations": {
      "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "clusterName": {
      "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
      "type": "string"
     },
     "creationTimestamp": {
      "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/unversioned.Time"
     },
     "deletionGracePeriodSeconds": {
      "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
      "type": "integer",
      "format": "int64"
     },
     "deletionTimestamp": {
      "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource will be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field. Once set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. Once the resource is deleted in the API, the Kubelet will send a hard termination signal to the container. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/unversioned.Time"
     },
     "finalizers": {
      "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "generateName": {
      "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#idempotency",
      "type": "string"
     },
     "generation": {
      "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
      "type": "integer",
      "format": "int64"
     },
     "labels": {
      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "name": {
      "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
      "type": "string"
     },
     "namespace": {
      "description": "Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
      "type": "string"
     },
     "ownerReferences": {
      "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.OwnerReference"
      }
     },
     "resourceVersion": {
      "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency",
      "type": "string"
     },
     "selfLink": {
      "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.",
      "type": "string"
     },
     "uid": {
      "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
      "type": "string"
     }
    }
   },
   "v1.ObjectReference": {
    "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
    "properties": {
     "apiVersion": {
      "description": "API version of the referent.",
      "type": "string"
     },
     "fieldPath": {
      "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.",
      "type": "string"
     },
     "kind": {
      "description": "Kind of the referent. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "name": {
      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
      "type": "string"
     },
     "namespace": {
      "description": "Namespace of the referent. More info: http://kubernetes.io/docs/user-guide/namespaces",
      "type": "string"
     },
     "resourceVersion": {
      "description": "Specific resourceVersion to which this reference is made, if any. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency",
      "type": "string"
     },
     "uid": {
      "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
      "type": "string"
     }
    }
   },
   "v1.OwnerReference": {
    "description": "OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field.",
    "required": [
     "apiVersion",
     "kind",
     "name",
     "uid"
    ],
    "properties": {
     "apiVersion": {
      "description": "API version of the referent.",
      "type": "string"
     },
     "controller": {
      "description": "If true, this reference points to the managing controller.",
      "type": "boolean"
     },
     "kind": {
      "description": "Kind of the referent. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "name": {
      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
      "type": "string"
     },
     "uid": {
      "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
      "type": "string"
     }
    }
   },
   "v1.PersistentVolume": {
    "description": "PersistentVolume (PV) is a storage resource provisioned by an administrator. It is analogous to a node. More info: http://kubernetes.io/docs/user-guide/persistent-volumes",
    "properties": {
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "Spec defines a specification of a persistent volume owned by the cluster. Provisioned by an administrator. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#persistent-volumes",
      "$ref": "#/definitions/v1.PersistentVolumeSpec"
     },
     "status": {
      "description": "Status represents the current information/status for the persistent volume. Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#persistent-volumes",
      "$ref": "#/definitions/v1.PersistentVolumeStatus"
     }
    }
   },
   "v1.PersistentVolumeClaim": {
    "description": "PersistentVolumeClaim is a user's request for and claim to a persistent volume",
    "properties": {
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "Spec defines the desired characteristics of a volume requested by a pod author. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#persistentvolumeclaims",
      "$ref": "#/definitions/v1.PersistentVolumeClaimSpec"
     },
     "status": {
      "description": "Status represents the current information/status of a persistent volume claim. Read-only. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#persistentvolumeclaims",
      "$ref": "#/definitions/v1.PersistentVolumeClaimStatus"
     }
    }
   },
   "v1.PersistentVolumeClaimList": {
    "description": "PersistentVolumeClaimList is a list of PersistentVolumeClaim items.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "A list of persistent volume claims. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#persistentvolumeclaims",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.PersistentVolumeClaim"
      }
     },
     "metadata": {
      "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1.PersistentVolumeClaimSpec": {
    "description": "PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes",
    "properties": {
     "accessModes": {
      "description": "AccessModes contains the desired access modes the volume should have. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#access-modes-1",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "resources": {
      "description": "Resources represents the minimum resources the volume should have. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#resources",
      "$ref": "#/definitions/v1.ResourceRequirements"
     },
     "selector": {
      "description": "A label query over volumes to consider for binding.",
      "$ref": "#/definitions/unversioned.LabelSelector"
     },
     "volumeName": {
      "description": "VolumeName is the binding reference to the PersistentVolume backing this claim.",
      "type": "string"
     }
    }
   },
   "v1.PersistentVolumeClaimStatus": {
    "description": "PersistentVolumeClaimStatus is the current status of a persistent volume claim.",
    "properties": {
     "accessModes": {
      "description": "AccessModes contains the actual access modes the volume backing the PVC has. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#access-modes-1",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "capacity": {
      "description": "Represents the actual resources of the underlying volume.",
      "type": "object",
      "additionalProperties": {
       "$ref": "#/definitions/resource.Quantity"
      }
     },
     "phase": {
      "description": "Phase represents the current phase of PersistentVolumeClaim.",
      "type": "string"
     }
    }
   },
   "v1.PersistentVolumeList": {
    "description": "PersistentVolumeList is a list of PersistentVolume items.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "List of persistent volumes. More info: http://kubernetes.io/docs/user-guide/persistent-volumes",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.PersistentVolume"
      }
     },
     "metadata": {
      "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1.PersistentVolumeSpec": {
    "description": "PersistentVolumeSpec is the specification of a persistent volume.",
    "properties": {
     "accessModes": {
      "description": "AccessModes contains all ways the volume can be mounted. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#access-modes",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "capacity": {
      "description": "A description of the persistent volume's resources and capacity. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#capacity",
      "type": "object",
      "additionalProperties": {
       "$ref": "#/definitions/resource.Quantity"
      }
     },
     "claimRef": {
      "description": "ClaimRef is part of a bi-directional binding between PersistentVolume and PersistentVolumeClaim. Expected to be non-nil when bound. claim.VolumeName is the authoritative bind between PV and PVC. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#binding",
      "$ref": "#/definitions/v1.ObjectReference"
     },
     "persistentVolumeReclaimPolicy": {
      "description": "What happens to a persistent volume when released from its claim. Valid options are Retain (default) and Recycle. Recycling must be supported by the volume plugin underlying this persistent volume. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#recycling-policy",
      "type": "string"
     }
    }
   },
   "v1.PersistentVolumeStatus": {
    "description": "PersistentVolumeStatus is the current status of a persistent volume.",
    "properties": {
     "message": {
      "description": "A human-readable message indicating details about why the volume is in this state.",
      "type": "string"
     },
     "phase": {
      "description": "Phase indicates if a volume is available, bound to a claim, or released by a claim. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#phase",
      "type": "string"
     },
     "reason": {
      "description": "Reason is a brief CamelCase string that describes any failure and is meant for machine parsing and tidy display in the CLI.",
      "type": "string"
     }
    }
   },
   "v1.Pod": {
    "description": "Pod is a collection of containers that can run on a host. This resource is created by clients and scheduled onto hosts.",
    "properties": {
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "Specification of the desired behavior of the pod. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1.PodSpec"
     },
     "status": {
      "description": "Most recently observed status of the pod. This data may not be up to date. Populated by the system. Read-only. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1.PodStatus"
     }
    }
   },
   "v1.PodCondition": {
    "description": "PodCondition contains details for the current condition of this pod.",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "lastProbeTime": {
      "description": "Last time we probed the condition.",
      "$ref": "#/definitions/unversioned.Time"
     },
     "lastTransitionTime": {
      "description": "Last time the condition transitioned from one status to another.",
      "$ref": "#/definitions/unversioned.Time"
     },
     "message": {
      "description": "Human-readable message indicating details about last transition.",
      "type": "string"
     },
     "reason": {
      "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
      "type": "string"
     },
     "status": {
      "description": "Status is the status of the condition. Can be True, False, Unknown. More info: http://kubernetes.io/docs/user-guide/pod-states#pod-conditions",
      "type": "string"
     },
     "type": {
      "description": "Type is the type of the condition. Currently only Ready. More info: http://kubernetes.io/docs/user-guide/pod-states#pod-conditions",
      "type": "string"
     }
    }
   },
   "v1.PodList": {
    "description": "PodList is a list of Pods.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "List of pods. More info: http://kubernetes.io/docs/user-guide/pods",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.Pod"
      }
     },
     "metadata": {
      "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1.PodSecurityContext": {
    "description": "PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.",
    "properties": {
     "fsGroup": {
      "description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:\n\n1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.",
      "type": "integer",
      "format": "int64"
     },
     "runAsNonRoot": {
      "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
      "type": "boolean"
     },
     "runAsUser": {
      "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
      "type": "integer",
      "format": "int64"
     },
     "seLinuxOptions": {
      "description": "The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
      "$ref": "#/definitions/v1.SELinuxOptions"
     },
     "supplementalGroups": {
      "description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container.",
      "type": "array",
      "items": {
       "type": "integer",
       "format": "int64"
      }
     }
    }
   },
   "v1.PodSpec": {
    "description": "PodSpec is a description of a pod.",
    "required": [
     "containers"
    ],
    "properties": {
     "activeDeadlineSeconds": {
      "description": "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.",
      "type": "integer",
      "format": "int64"
     },
     "containers": {
      "description": "List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.Container"
      }
     },
     "dnsPolicy": {
      "description": "Set DNS policy for containers within the pod. One of 'ClusterFirst' or 'Default'. Defaults to \"ClusterFirst\".",
      "type": "string"
     },
     "hostIPC": {
      "description": "Use the host's ipc namespace. Optional: Default to false.",
      "type": "boolean"
     },
     "hostNetwork": {
      "description": "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false.",
      "type": "boolean"
     },
     "hostPID": {
      "description": "Use the host's pid namespace. Optional: Default to false.",
      "type": "boolean"
     },
     "hostname": {
      "description": "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.",
      "type": "string"
     },
     "imagePullSecrets": {
      "description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.LocalObjectReference"
      }
     },
     "nodeName": {
      "description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.",
      "type": "string"
     },
     "nodeSelector": {
      "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: http://kubernetes.io/docs/user-guide/node-selection/README",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "restartPolicy": {
      "description": "Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: http://kubernetes.io/docs/user-guide/pod-states#restartpolicy",
      "type": "string"
     },
     "securityContext": {
      "description": "SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty.  See type description for default values of each field.",
      "$ref": "#/definitions/v1.PodSecurityContext"
     },
     "serviceAccount": {
      "description": "DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead.",
      "type": "string"
     },
     "serviceAccountName": {
      "description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: http://releases.k8s.io/HEAD/docs/design/service_accounts.md",
      "type": "string"
     },
     "subdomain": {
      "description": "If specified, the fully qualified Pod hostname will be \"\u003chostname\u003e.\u003csubdomain\u003e.\u003cpod namespace\u003e.svc.\u003ccluster domain\u003e\". If not specified, the pod will not have a domainname at all.",
      "type": "string"
     },
     "terminationGracePeriodSeconds": {
      "description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
      "type": "integer",
      "format": "int64"
     },
     "volumes": {
      "description": "List of volumes that can be mounted by containers belonging to the pod. More info: http://kubernetes.io/docs/user-guide/volumes",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.Volume"
      }
     }
    }
   },
   "v1.PodStatus": {
    "description": "PodStatus represents information about the status of a pod. Status may trail the actual state of a system.",
    "properties": {
     "conditions": {
      "description": "Current service state of pod. More info: http://kubernetes.io/docs/user-guide/pod-states#pod-conditions",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.PodCondition"
      }
     },
     "containerStatuses": {
      "description": "The list has one entry per container in the manifest. Each entry is currently the output of `docker inspect`. More info: http://kubernetes.io/docs/user-guide/pod-states#container-statuses",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.ContainerStatus"
      }
     },
     "hostIP": {
      "description": "IP address of the host to which the pod is assigned. Empty if not yet scheduled.",
      "type": "string"
     },
     "message": {
      "description": "A human readable message indicating details about why the pod is in this condition.",
      "type": "string"
     },
     "phase": {
      "description": "Current condition of the pod. More info: http://kubernetes.io/docs/user-guide/pod-states#pod-phase",
      "type": "string"
     },
     "podIP": {
      "description": "IP address allocated to the pod. Routable at least within the cluster. Empty if not yet allocated.",
      "type": "string"
     },
     "reason": {
      "description": "A brief CamelCase message indicating details about why the pod is in this state. e.g. 'OutOfDisk'",
      "type": "string"
     },
     "startTime": {
      "description": "RFC 3339 date and time at which the object was acknowledged by the Kubelet. This is before the Kubelet pulled the container image(s) for the pod.",
      "$ref": "#/definitions/unversioned.Time"
     }
    }
   },
   "v1.PodTemplate": {
    "description": "PodTemplate describes a template for creating copies of a predefined pod.",
    "properties": {
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "template": {
      "description": "Template defines the pods that will be created from this pod template. http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1.PodTemplateSpec"
     }
    }
   },
   "v1.PodTemplateList": {
    "description": "PodTemplateList is a list of PodTemplates.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "List of pod templates",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.PodTemplate"
      }
     },
     "metadata": {
      "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1.PodTemplateSpec": {
    "description": "PodTemplateSpec describes the data a pod should have when created from a template",
    "properties": {
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "Specification of the desired behavior of the pod. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1.PodSpec"
     }
    }
   },
   "v1.Preconditions": {
    "description": "Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.",
    "properties": {
     "uid": {
      "description": "Specifies the target UID.",
      "type": "string"
     }
    }
   },
   "v1.Probe": {
    "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
    "properties": {
     "failureThreshold": {
      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
      "type": "integer",
      "format": "int32"
     },
     "initialDelaySeconds": {
      "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
      "type": "integer",
      "format": "int32"
     },
     "periodSeconds": {
      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
      "type": "integer",
      "format": "int32"
     },
     "successThreshold": {
      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
      "type": "integer",
      "format": "int32"
     },
     "timeoutSeconds": {
      "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1.ReplicationController": {
    "description": "ReplicationController represents the configuration of a replication controller.",
    "properties": {
     "metadata": {
      "description": "If the Labels of a ReplicationController are empty, they are defaulted to be the same as the Pod(s) that the replication controller manages. Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "Spec defines the specification of the desired behavior of the replication controller. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1.ReplicationControllerSpec"
     },
     "status": {
      "description": "Status is the most recently observed status of the replication controller. This data may be out of date by some window of time. Populated by the system. Read-only. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1.ReplicationControllerStatus"
     }
    }
   },
   "v1.ReplicationControllerList": {
    "description": "ReplicationControllerList is a collection of replication controllers.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "List of replication controllers. More info: http://kubernetes.io/docs/user-guide/replication-controller",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.ReplicationController"
      }
     },
     "metadata": {
      "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1.ReplicationControllerSpec": {
    "description": "ReplicationControllerSpec is the specification of a replication controller.",
    "properties": {
     "minReadySeconds": {
      "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
      "type": "integer",
      "format": "int32"
     },
     "replicas": {
      "description": "Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: http://kubernetes.io/docs/user-guide/replication-controller#what-is-a-replication-controller",
      "type": "integer",
      "format": "int32"
     },
     "selector": {
      "description": "Selector is a label query over pods that should match the Replicas count. If Selector is empty, it is defaulted to the labels present on the Pod template. Label keys and values that must match in order to be controlled by this replication controller, if empty defaulted to labels on Pod template. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "template": {
      "description": "Template is the object that describes the pod that will be created if insufficient replicas are detected. This takes precedence over a TemplateRef. More info: http://kubernetes.io/docs/user-guide/replication-controller#pod-template",
      "$ref": "#/definitions/v1.PodTemplateSpec"
     }
    }
   },
   "v1.ReplicationControllerStatus": {
    "description": "ReplicationControllerStatus represents the current status of a replication controller.",
    "required": [
     "replicas"
    ],
    "properties": {
     "availableReplicas": {
      "description": "The number of available replicas (ready for at least minReadySeconds) for this replication controller.",
      "type": "integer",
      "format": "int32"
     },
     "fullyLabeledReplicas": {
      "description": "The number of pods that have labels matching the labels of the pod template of the replication controller.",
      "type": "integer",
      "format": "int32"
     },
     "observedGeneration": {
      "description": "ObservedGeneration reflects the generation of the most recently observed replication controller.",
      "type": "integer",
      "format": "int64"
     },
     "readyReplicas": {
      "description": "The number of ready replicas for this replication controller.",
      "type": "integer",
      "format": "int32"
     },
     "replicas": {
      "description": "Replicas is the most recently oberved number of replicas. More info: http://kubernetes.io/docs/user-guide/replication-controller#what-is-a-replication-controller",
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1.ResourceFieldSelector": {
    "description": "ResourceFieldSelector represents container resources (cpu, memory) and their output format",
    "required": [
     "resource"
    ],
    "properties": {
     "containerName": {
      "description": "Container name: required for volumes, optional for env vars",
      "type": "string"
     },
     "divisor": {
      "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
      "$ref": "#/definitions/resource.Quantity"
     },
     "resource": {
      "description": "Required: resource to select",
      "type": "string"
     }
    }
   },
   "v1.ResourceQuota": {
    "description": "ResourceQuota sets aggregate quota restrictions enforced per namespace",
    "properties": {
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "Spec defines the desired quota. http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1.ResourceQuotaSpec"
     },
     "status": {
      "description": "Status defines the actual enforced quota and its current usage. http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1.ResourceQuotaStatus"
     }
    }
   },
   "v1.ResourceQuotaList": {
    "description": "ResourceQuotaList is a list of ResourceQuota items.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "Items is a list of ResourceQuota objects. More info: http://releases.k8s.io/HEAD/docs/design/admission_control_resource_quota.md#admissioncontrol-plugin-resourcequota",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.ResourceQuota"
      }
     },
     "metadata": {
      "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1.ResourceQuotaSpec": {
    "description": "ResourceQuotaSpec defines the desired hard limits to enforce for Quota.",
    "properties": {
     "hard": {
      "description": "Hard is the set of desired hard limits for each named resource. More info: http://releases.k8s.io/HEAD/docs/design/admission_control_resource_quota.md#admissioncontrol-plugin-resourcequota",
      "type": "object",
      "additionalProperties": {
       "$ref": "#/definitions/resource.Quantity"
      }
     },
     "scopes": {
      "description": "A collection of filters that must match each object tracked by a quota. If not specified, the quota matches all objects.",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },
   "v1.ResourceQuotaStatus": {
    "description": "ResourceQuotaStatus defines the enforced hard limits and observed use.",
    "properties": {
     "hard": {
      "description": "Hard is the set of enforced hard limits for each named resource. More info: http://releases.k8s.io/HEAD/docs/design/admission_control_resource_quota.md#admissioncontrol-plugin-resourcequota",
      "type": "object",
      "additionalProperties": {
       "$ref": "#/definitions/resource.Quantity"
      }
     },
     "used": {
      "description": "Used is the current observed total usage of the resource in the namespace.",
      "type": "object",
      "additionalProperties": {
       "$ref": "#/definitions/resource.Quantity"
      }
     }
    }
   },
   "v1.ResourceRequirements": {
    "description": "ResourceRequirements describes the compute resource requirements.",
    "properties": {
     "limits": {
      "description": "Limits describes the maximum amount of compute resources allowed. More info: http://kubernetes.io/docs/user-guide/compute-resources/",
      "type": "object",
      "additionalProperties": {
       "$ref": "#/definitions/resource.Quantity"
      }
     },
     "requests": {
      "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: http://kubernetes.io/docs/user-guide/compute-resources/",
      "type": "object",
      "additionalProperties": {
       "$ref": "#/definitions/resource.Quantity"
      }
     }
    }
   },
   "v1.SELinuxOptions": {
    "description": "SELinuxOptions are the labels to be applied to the container",
    "properties": {
     "level": {
      "description": "Level is SELinux level label that applies to the container.",
      "type": "string"
     },
     "role": {
      "description": "Role is a SELinux role label that applies to the container.",
      "type": "string"
     },
     "type": {
      "description": "Type is a SELinux type label that applies to the container.",
      "type": "string"
     },
     "user": {
      "description": "User is a SELinux user label that applies to the container.",
      "type": "string"
     }
    }
   },
   "v1.Scale": {
    "description": "Scale represents a scaling request for a resource.",
    "properties": {
     "metadata": {
      "description": "Standard object metadata; More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata.",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "defines the behavior of the scale. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status.",
      "$ref": "#/definitions/v1.ScaleSpec"
     },
     "status": {
      "description": "current status of the scale. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status. Read-only.",
      "$ref": "#/definitions/v1.ScaleStatus"
     }
    }
   },
   "v1.ScaleSpec": {
    "description": "ScaleSpec describes the attributes of a scale subresource.",
    "properties": {
     "replicas": {
      "description": "desired number of instances for the scaled object.",
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1.ScaleStatus": {
    "description": "ScaleStatus represents the current status of a scale subresource.",
    "required": [
     "replicas"
    ],
    "properties": {
     "replicas": {
      "description": "actual number of observed instances of the scaled object.",
      "type": "integer",
      "format": "int32"
     },
     "selector": {
      "description": "label query over pods that should match the replicas count. This is same as the label selector but in the string format to avoid introspection by clients. The string will be in the same format as the query-param syntax. More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors",
      "type": "string"
     }
    }
   },
   "v1.Secret": {
    "description": "Secret holds secret data of a certain type. The total bytes of the values in the Data field must be less than MaxSecretSize bytes.",
    "properties": {
     "data": {
      "description": "Data contains the secret data. Each key must be a valid DNS_SUBDOMAIN or leading dot followed by valid DNS_SUBDOMAIN. The serialized form of the secret data is a base64 encoded string, representing the arbitrary (possibly non-string) data value here. Described in https://tools.ietf.org/html/rfc4648#section-4",
      "type": "object",
      "additionalProperties": {
       "type": "array",
       "items": {
        "type": "integer",
        "format": "byte"
       }
      }
     },
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "stringData": {
      "description": "stringData allows specifying non-binary secret data in string form. It is provided as a write-only convenience method. All keys and values are merged into the data field on write, overwriting any existing values. It is never output when reading from the API.",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "type": {
      "description": "Used to facilitate programmatic handling of secret data.",
      "type": "string"
     }
    }
   },
   "v1.SecretKeySelector": {
    "description": "SecretKeySelector selects a key of a Secret.",
    "required": [
     "key"
    ],
    "properties": {
     "key": {
      "description": "The key of the secret to select from.  Must be a valid secret key.",
      "type": "string"
     }
    }
   },
   "v1.SecretList": {
    "description": "SecretList is a list of Secret.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "Items is a list of secret objects. More info: http://kubernetes.io/docs/user-guide/secrets",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.Secret"
      }
     },
     "metadata": {
      "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1.SecurityContext": {
    "description": "SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.",
    "properties": {
     "capabilities": {
      "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.",
      "$ref": "#/definitions/v1.Capabilities"
     },
     "privileged": {
      "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
      "type": "boolean"
     },
     "readOnlyRootFilesystem": {
      "description": "Whether this container has a read-only root filesystem. Default is false.",
      "type": "boolean"
     },
     "runAsNonRoot": {
      "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
      "type": "boolean"
     },
     "runAsUser": {
      "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
      "type": "integer",
      "format": "int64"
     },
     "seLinuxOptions": {
      "description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
      "$ref": "#/definitions/v1.SELinuxOptions"
     }
    }
   },
   "v1.Service": {
    "description": "Service is a named abstraction of software service (for example, mysql) consisting of local port (for example 3306) that the proxy listens on, and the selector that determines which pods will answer requests sent through the proxy.",
    "properties": {
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "Spec defines the behavior of a service. http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1.ServiceSpec"
     },
     "status": {
      "description": "Most recently observed status of the service. Populated by the system. Read-only. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1.ServiceStatus"
     }
    }
   },
   "v1.ServiceAccount": {
    "description": "ServiceAccount binds together: * a name, understood by users, and perhaps by peripheral systems, for an identity * a principal that can be authenticated and authorized * a set of secrets",
    "properties": {
     "imagePullSecrets": {
      "description": "ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet. More info: http://kubernetes.io/docs/user-guide/secrets#manually-specifying-an-imagepullsecret",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.LocalObjectReference"
      }
     },
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "secrets": {
      "description": "Secrets is the list of secrets allowed to be used by pods running using this ServiceAccount. More info: http://kubernetes.io/docs/user-guide/secrets",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.ObjectReference"
      }
     }
    }
   },
   "v1.ServiceAccountList": {
    "description": "ServiceAccountList is a list of ServiceAccount objects",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "List of ServiceAccounts. More info: http://releases.k8s.io/HEAD/docs/design/service_accounts.md#service-accounts",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.ServiceAccount"
      }
     },
     "metadata": {
      "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1.ServiceList": {
    "description": "ServiceList holds a list of services.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "List of services",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.Service"
      }
     },
     "metadata": {
      "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1.ServicePort": {
    "description": "ServicePort contains information on service's port.",
    "required": [
     "port"
    ],
    "properties": {
     "name": {
      "description": "The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. This maps to the 'Name' field in EndpointPort objects. Optional if only one ServicePort is defined on this service.",
      "type": "string"
     },
     "nodePort": {
      "description": "The port on each node on which this service is exposed when type=NodePort or LoadBalancer. Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the ServiceType of this Service requires one. More info: http://kubernetes.io/docs/user-guide/services#type--nodeport",
      "type": "integer",
      "format": "int32"
     },
     "port": {
      "description": "The port that will be exposed by this service.",
      "type": "integer",
      "format": "int32"
     },
     "protocol": {
      "description": "The IP protocol for this port. Supports \"TCP\" and \"UDP\". Default is TCP.",
      "type": "string"
     },
     "targetPort": {
      "description": "Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: http://kubernetes.io/docs/user-guide/services#defining-a-service",
      "$ref": "#/definitions/intstr.IntOrString"
     }
    }
   },
   "v1.ServiceSpec": {
    "description": "ServiceSpec describes the attributes that a user creates on a service.",
    "required": [
     "ports"
    ],
    "properties": {
     "clusterIP": {
      "description": "clusterIP is the IP address of the service and is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are \"None\", empty string (\"\"), or a valid IP address. \"None\" can be specified for headless services when proxying is not required. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies",
      "type": "string"
     },
     "deprecatedPublicIPs": {
      "description": "deprecatedPublicIPs is deprecated and replaced by the externalIPs field with almost the exact same semantics.  This field is retained in the v1 API for compatibility until at least 8/20/2016.  It will be removed from any new API revisions.  If both deprecatedPublicIPs *and* externalIPs are set, deprecatedPublicIPs is used.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "externalIPs": {
      "description": "externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.  A previous form of this functionality exists as the deprecatedPublicIPs field.  When using this field, callers should also clear the deprecatedPublicIPs field.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "externalName": {
      "description": "externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid DNS name and requires Type to be ExternalName.",
      "type": "string"
     },
     "loadBalancerIP": {
      "description": "Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.",
      "type": "string"
     },
     "loadBalancerSourceRanges": {
      "description": "If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature.\" More info: http://kubernetes.io/docs/user-guide/services-firewalls",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "ports": {
      "description": "The list of ports that are exposed by this service. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.ServicePort"
      }
     },
     "selector": {
      "description": "Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: http://kubernetes.io/docs/user-guide/services#overview",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "sessionAffinity": {
      "description": "Supports \"ClientIP\" and \"None\". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies",
      "type": "string"
     },
     "type": {
      "description": "type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \"ExternalName\" maps to the specified externalName. \"ClusterIP\" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is \"None\", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. \"NodePort\" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. \"LoadBalancer\" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: http://kubernetes.io/docs/user-guide/services#overview",
      "type": "string"
     }
    }
   },
   "v1.ServiceStatus": {
    "description": "ServiceStatus represents the current status of a service.",
    "properties": {
     "loadBalancer": {
      "description": "LoadBalancer contains the current status of the load-balancer, if one is present.",
      "$ref": "#/definitions/v1.LoadBalancerStatus"
     }
    }
   },
   "v1.TCPSocketAction": {
    "description": "TCPSocketAction describes an action based on opening a socket",
    "required": [
     "port"
    ],
    "properties": {
     "port": {
      "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
      "$ref": "#/definitions/intstr.IntOrString"
     }
    }
   },
   "v1.Volume": {
    "description": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
    "required": [
     "name"
    ],
    "properties": {
     "name": {
      "description": "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
      "type": "string"
     }
    }
   },
   "v1.VolumeMount": {
    "description": "VolumeMount describes a mounting of a Volume within a container.",
    "required": [
     "name",
     "mountPath"
    ],
    "properties": {
     "mountPath": {
      "description": "Path within the container at which the volume should be mounted.  Must not contain ':'.",
      "type": "string"
     },
     "name": {
      "description": "This must match the Name of a Volume.",
      "type": "string"
     },
     "readOnly": {
      "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
      "type": "boolean"
     },
     "subPath": {
      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
      "type": "string"
     }
    }
   },
   "v1alpha1.CertificateSigningRequest": {
    "description": "Describes a certificate signing request",
    "properties": {
     "metadata": {
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "The certificate request itself and any additional information.",
      "$ref": "#/definitions/v1alpha1.CertificateSigningRequestSpec"
     },
     "status": {
      "description": "Derived information about the request.",
      "$ref": "#/definitions/v1alpha1.CertificateSigningRequestStatus"
     }
    }
   },
   "v1alpha1.CertificateSigningRequestCondition": {
    "required": [
     "type"
    ],
    "properties": {
     "lastUpdateTime": {
      "description": "timestamp for the last update to this condition",
      "$ref": "#/definitions/unversioned.Time"
     },
     "message": {
      "description": "human readable message with details about the request state",
      "type": "string"
     },
     "reason": {
      "description": "brief reason for the request state",
      "type": "string"
     },
     "type": {
      "description": "request approval state, currently Approved or Denied.",
      "type": "string"
     }
    }
   },
   "v1alpha1.CertificateSigningRequestList": {
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1alpha1.CertificateSigningRequest"
      }
     },
     "metadata": {
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1alpha1.CertificateSigningRequestSpec": {
    "description": "This information is immutable after the request is created. Only the Request and ExtraInfo fields can be set on creation, other fields are derived by Kubernetes and cannot be modified by users.",
    "required": [
     "request"
    ],
    "properties": {
     "groups": {
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "request": {
      "description": "Base64-encoded PKCS#10 CSR data",
      "type": "string",
      "format": "byte"
     },
     "uid": {
      "type": "string"
     },
     "username": {
      "description": "Information about the requesting user (if relevant) See user.Info interface for details",
      "type": "string"
     }
    }
   },
   "v1alpha1.CertificateSigningRequestStatus": {
    "properties": {
     "certificate": {
      "description": "If request was approved, the controller will place the issued certificate here.",
      "type": "string",
      "format": "byte"
     },
     "conditions": {
      "description": "Conditions applied to the request, such as approval or denial.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1alpha1.CertificateSigningRequestCondition"
      }
     }
    }
   },
   "v1alpha1.ClusterRole": {
    "description": "ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding.",
    "required": [
     "rules"
    ],
    "properties": {
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "rules": {
      "description": "Rules holds all the PolicyRules for this ClusterRole",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1alpha1.PolicyRule"
      }
     }
    }
   },
   "v1alpha1.ClusterRoleBinding": {
    "description": "ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a ClusterRole in the global namespace, and adds who information via Subject.",
    "required": [
     "subjects",
     "roleRef"
    ],
    "properties": {
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "roleRef": {
      "description": "RoleRef can only reference a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error.",
      "$ref": "#/definitions/v1alpha1.RoleRef"
     },
     "subjects": {
      "description": "Subjects holds references to the objects the role applies to.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1alpha1.Subject"
      }
     }
    }
   },
   "v1alpha1.ClusterRoleBindingList": {
    "description": "ClusterRoleBindingList is a collection of ClusterRoleBindings",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "Items is a list of ClusterRoleBindings",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1alpha1.ClusterRoleBinding"
      }
     },
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1alpha1.ClusterRoleList": {
    "description": "ClusterRoleList is a collection of ClusterRoles",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "Items is a list of ClusterRoles",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1alpha1.ClusterRole"
      }
     },
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1alpha1.Eviction": {
    "description": "Eviction evicts a pod from its node subject to certain policies and safety constraints. This is a subresource of Pod.  A request to cause such an eviction is created by POSTing to .../pods/\u003cpod name\u003e/evictions.",
    "properties": {
     "deleteOptions": {
      "description": "DeleteOptions may be provided",
      "$ref": "#/definitions/v1.DeleteOptions"
     },
     "metadata": {
      "description": "ObjectMeta describes the pod that is being evicted.",
      "$ref": "#/definitions/v1.ObjectMeta"
     }
    }
   },
   "v1alpha1.PetSet": {
    "description": "PetSet represents a set of pods with consistent identities. Identities are defined as:\n - Network: A single stable DNS and hostname.\n - Storage: As many VolumeClaims as requested.\nThe PetSet guarantees that a given network identity will always map to the same storage identity. PetSet is currently in alpha and subject to change without notice.",
    "properties": {
     "metadata": {
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "Spec defines the desired identities of pets in this set.",
      "$ref": "#/definitions/v1alpha1.PetSetSpec"
     },
     "status": {
      "description": "Status is the current status of Pets in this PetSet. This data may be out of date by some window of time.",
      "$ref": "#/definitions/v1alpha1.PetSetStatus"
     }
    }
   },
   "v1alpha1.PetSetList": {
    "description": "PetSetList is a collection of PetSets.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1alpha1.PetSet"
      }
     },
     "metadata": {
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1alpha1.PetSetSpec": {
    "description": "A PetSetSpec is the specification of a PetSet.",
    "required": [
     "template",
     "serviceName"
    ],
    "properties": {
     "replicas": {
      "description": "Replicas is the desired number of replicas of the given Template. These are replicas in the sense that they are instantiations of the same Template, but individual replicas also have a consistent identity. If unspecified, defaults to 1.",
      "type": "integer",
      "format": "int32"
     },
     "selector": {
      "description": "Selector is a label query over pods that should match the replica count. If empty, defaulted to labels on the pod template. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors",
      "$ref": "#/definitions/unversioned.LabelSelector"
     },
     "serviceName": {
      "description": "ServiceName is the name of the service that governs this PetSet. This service must exist before the PetSet, and is responsible for the network identity of the set. Pets get DNS/hostnames that follow the pattern: pet-specific-string.serviceName.default.svc.cluster.local where \"pet-specific-string\" is managed by the PetSet controller.",
      "type": "string"
     },
     "template": {
      "description": "Template is the object that describes the pod that will be created if insufficient replicas are detected. Each pod stamped out by the PetSet will fulfill this Template, but have a unique identity from the rest of the PetSet.",
      "$ref": "#/definitions/v1.PodTemplateSpec"
     },
     "volumeClaimTemplates": {
      "description": "VolumeClaimTemplates is a list of claims that pets are allowed to reference. The PetSet controller is responsible for mapping network identities to claims in a way that maintains the identity of a pet. Every claim in this list must have at least one matching (by name) volumeMount in one container in the template. A claim in this list takes precedence over any volumes in the template, with the same name.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.PersistentVolumeClaim"
      }
     }
    }
   },
   "v1alpha1.PetSetStatus": {
    "description": "PetSetStatus represents the current state of a PetSet.",
    "required": [
     "replicas"
    ],
    "properties": {
     "observedGeneration": {
      "description": "most recent generation observed by this autoscaler.",
      "type": "integer",
      "format": "int64"
     },
     "replicas": {
      "description": "Replicas is the number of actual replicas.",
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1alpha1.PodDisruptionBudget": {
    "description": "PodDisruptionBudget is an object to define the max disruption that can be caused to a collection of pods",
    "properties": {
     "metadata": {
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "Specification of the desired behavior of the PodDisruptionBudget.",
      "$ref": "#/definitions/v1alpha1.PodDisruptionBudgetSpec"
     },
     "status": {
      "description": "Most recently observed status of the PodDisruptionBudget.",
      "$ref": "#/definitions/v1alpha1.PodDisruptionBudgetStatus"
     }
    }
   },
   "v1alpha1.PodDisruptionBudgetList": {
    "description": "PodDisruptionBudgetList is a collection of PodDisruptionBudgets.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1alpha1.PodDisruptionBudget"
      }
     },
     "metadata": {
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1alpha1.PodDisruptionBudgetSpec": {
    "description": "PodDisruptionBudgetSpec is a description of a PodDisruptionBudget.",
    "properties": {
     "minAvailable": {
      "description": "An eviction is allowed if at least \"minAvailable\" pods selected by \"selector\" will still be available after the eviction, i.e. even in the absence of the evicted pod.  So for example you can prevent all voluntary evictions by specifying \"100%\".",
      "$ref": "#/definitions/intstr.IntOrString"
     },
     "selector": {
      "description": "Label query over pods whose evictions are managed by the disruption budget.",
      "$ref": "#/definitions/unversioned.LabelSelector"
     }
    }
   },
   "v1alpha1.PodDisruptionBudgetStatus": {
    "description": "PodDisruptionBudgetStatus represents information about the status of a PodDisruptionBudget. Status may trail the actual state of a system.",
    "required": [
     "disruptionAllowed",
     "currentHealthy",
     "desiredHealthy",
     "expectedPods"
    ],
    "properties": {
     "currentHealthy": {
      "description": "current number of healthy pods",
      "type": "integer",
      "format": "int32"
     },
     "desiredHealthy": {
      "description": "minimum desired number of healthy pods",
      "type": "integer",
      "format": "int32"
     },
     "disruptionAllowed": {
      "description": "Whether or not a disruption is currently allowed.",
      "type": "boolean"
     },
     "expectedPods": {
      "description": "total number of pods counted by this disruption budget",
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1alpha1.PolicyRule": {
    "description": "PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.",
    "required": [
     "verbs"
    ],
    "properties": {
     "apiGroups": {
      "description": "APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "attributeRestrictions": {
      "description": "AttributeRestrictions will vary depending on what the Authorizer/AuthorizationAttributeBuilder pair supports. If the Authorizer does not recognize how to handle the AttributeRestrictions, the Authorizer should report an error.",
      "$ref": "#/definitions/runtime.RawExtension"
     },
     "nonResourceURLs": {
      "description": "NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path This name is intentionally different than the internal type so that the DefaultConvert works nicely and because the ordering may be different. Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as \"pods\" or \"secrets\") or non-resource URL paths (such as \"/api\"),  but not both.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "resourceNames": {
      "description": "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "resources": {
      "description": "Resources is a list of resources this rule applies to.  ResourceAll represents all resources.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "verbs": {
      "description": "Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll represents all kinds.",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },
   "v1alpha1.Role": {
    "description": "Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding.",
    "required": [
     "rules"
    ],
    "properties": {
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "rules": {
      "description": "Rules holds all the PolicyRules for this Role",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1alpha1.PolicyRule"
      }
     }
    }
   },
   "v1alpha1.RoleBinding": {
    "description": "RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace.",
    "required": [
     "subjects",
     "roleRef"
    ],
    "properties": {
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "roleRef": {
      "description": "RoleRef can reference a Role in the current namespace or a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error.",
      "$ref": "#/definitions/v1alpha1.RoleRef"
     },
     "subjects": {
      "description": "Subjects holds references to the objects the role applies to.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1alpha1.Subject"
      }
     }
    }
   },
   "v1alpha1.RoleBindingList": {
    "description": "RoleBindingList is a collection of RoleBindings",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "Items is a list of RoleBindings",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1alpha1.RoleBinding"
      }
     },
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1alpha1.RoleList": {
    "description": "RoleList is a collection of Roles",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "Items is a list of Roles",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1alpha1.Role"
      }
     },
     "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1alpha1.RoleRef": {
    "description": "RoleRef contains information that points to the role being used",
    "required": [
     "apiGroup",
     "kind",
     "name"
    ],
    "properties": {
     "apiGroup": {
      "description": "APIGroup is the group for the resource being referenced",
      "type": "string"
     },
     "kind": {
      "description": "Kind is the type of resource being referenced",
      "type": "string"
     },
     "name": {
      "description": "Name is the name of resource being referenced",
      "type": "string"
     }
    }
   },
   "v1alpha1.Subject": {
    "description": "Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.",
    "required": [
     "kind",
     "name"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion holds the API group and version of the referenced object.",
      "type": "string"
     },
     "kind": {
      "description": "Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\". If the Authorizer does not recognized the kind value, the Authorizer should report an error.",
      "type": "string"
     },
     "name": {
      "description": "Name of the object being referenced.",
      "type": "string"
     },
     "namespace": {
      "description": "Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty the Authorizer should report an error.",
      "type": "string"
     }
    }
   },
   "v1beta1.APIVersion": {
    "description": "An APIVersion represents a single concrete version of an object model.",
    "properties": {
     "name": {
      "description": "Name of this version (e.g. 'v1').",
      "type": "string"
     }
    }
   },
   "v1beta1.CPUTargetUtilization": {
    "required": [
     "targetPercentage"
    ],
    "properties": {
     "targetPercentage": {
      "description": "fraction of the requested CPU that should be utilized/used, e.g. 70 means that 70% of the requested CPU should be in use.",
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1beta1.DaemonSet": {
    "description": "DaemonSet represents the configuration of a daemon set.",
    "properties": {
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "Spec defines the desired behavior of this daemon set. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1beta1.DaemonSetSpec"
     },
     "status": {
      "description": "Status is the current status of this daemon set. This data may be out of date by some window of time. Populated by the system. Read-only. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1beta1.DaemonSetStatus"
     }
    }
   },
   "v1beta1.DaemonSetList": {
    "description": "DaemonSetList is a collection of daemon sets.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "Items is a list of daemon sets.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1beta1.DaemonSet"
      }
     },
     "metadata": {
      "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1beta1.DaemonSetSpec": {
    "description": "DaemonSetSpec is the specification of a daemon set.",
    "required": [
     "template"
    ],
    "properties": {
     "selector": {
      "description": "Selector is a label query over pods that are managed by the daemon set. Must match in order to be controlled. If empty, defaulted to labels on Pod template. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors",
      "$ref": "#/definitions/v1beta1.LabelSelector"
     },
     "template": {
      "description": "Template is the object that describes the pod that will be created. The DaemonSet will create exactly one copy of this pod on every node that matches the template's node selector (or on every node if no node selector is specified). More info: http://kubernetes.io/docs/user-guide/replication-controller#pod-template",
      "$ref": "#/definitions/v1.PodTemplateSpec"
     }
    }
   },
   "v1beta1.DaemonSetStatus": {
    "description": "DaemonSetStatus represents the current status of a daemon set.",
    "required": [
     "currentNumberScheduled",
     "numberMisscheduled",
     "desiredNumberScheduled"
    ],
    "properties": {
     "currentNumberScheduled": {
      "description": "CurrentNumberScheduled is the number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: http://releases.k8s.io/HEAD/docs/admin/daemons.md",
      "type": "integer",
      "format": "int32"
     },
     "desiredNumberScheduled": {
      "description": "DesiredNumberScheduled is the total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: http://releases.k8s.io/HEAD/docs/admin/daemons.md",
      "type": "integer",
      "format": "int32"
     },
     "numberMisscheduled": {
      "description": "NumberMisscheduled is the number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: http://releases.k8s.io/HEAD/docs/admin/daemons.md",
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1beta1.Deployment": {
    "description": "Deployment enables declarative updates for Pods and ReplicaSets.",
    "properties": {
     "metadata": {
      "description": "Standard object metadata.",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "Specification of the desired behavior of the Deployment.",
      "$ref": "#/definitions/v1beta1.DeploymentSpec"
     },
     "status": {
      "description": "Most recently observed status of the Deployment.",
      "$ref": "#/definitions/v1beta1.DeploymentStatus"
     }
    }
   },
   "v1beta1.DeploymentList": {
    "description": "DeploymentList is a list of Deployments.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "Items is the list of Deployments.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1beta1.Deployment"
      }
     },
     "metadata": {
      "description": "Standard list metadata.",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1beta1.DeploymentRollback": {
    "description": "DeploymentRollback stores the information required to rollback a deployment.",
    "required": [
     "name",
     "rollbackTo"
    ],
    "properties": {
     "name": {
      "description": "Required: This must match the Name of a deployment.",
      "type": "string"
     },
     "rollbackTo": {
      "description": "The config of this deployment rollback.",
      "$ref": "#/definitions/v1beta1.RollbackConfig"
     },
     "updatedAnnotations": {
      "description": "The annotations to be updated to a deployment",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     }
    }
   },
   "v1beta1.DeploymentSpec": {
    "description": "DeploymentSpec is the specification of the desired behavior of the Deployment.",
    "required": [
     "template"
    ],
    "properties": {
     "minReadySeconds": {
      "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
      "type": "integer",
      "format": "int32"
     },
     "paused": {
      "description": "Indicates that the deployment is paused and will not be processed by the deployment controller.",
      "type": "boolean"
     },
     "replicas": {
      "description": "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.",
      "type": "integer",
      "format": "int32"
     },
     "revisionHistoryLimit": {
      "description": "The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified.",
      "type": "integer",
      "format": "int32"
     },
     "rollbackTo": {
      "description": "The config this deployment is rolling back to. Will be cleared after rollback is done.",
      "$ref": "#/definitions/v1beta1.RollbackConfig"
     },
     "selector": {
      "description": "Label selector for pods. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment.",
      "$ref": "#/definitions/v1beta1.LabelSelector"
     },
     "strategy": {
      "description": "The deployment strategy to use to replace existing pods with new ones.",
      "$ref": "#/definitions/v1beta1.DeploymentStrategy"
     },
     "template": {
      "description": "Template describes the pods that will be created.",
      "$ref": "#/definitions/v1.PodTemplateSpec"
     }
    }
   },
   "v1beta1.DeploymentStatus": {
    "description": "DeploymentStatus is the most recently observed status of the Deployment.",
    "properties": {
     "availableReplicas": {
      "description": "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.",
      "type": "integer",
      "format": "int32"
     },
     "observedGeneration": {
      "description": "The generation observed by the deployment controller.",
      "type": "integer",
      "format": "int64"
     },
     "replicas": {
      "description": "Total number of non-terminated pods targeted by this deployment (their labels match the selector).",
      "type": "integer",
      "format": "int32"
     },
     "unavailableReplicas": {
      "description": "Total number of unavailable pods targeted by this deployment.",
      "type": "integer",
      "format": "int32"
     },
     "updatedReplicas": {
      "description": "Total number of non-terminated pods targeted by this deployment that have the desired template spec.",
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1beta1.DeploymentStrategy": {
    "description": "DeploymentStrategy describes how to replace existing pods with new ones.",
    "properties": {
     "rollingUpdate": {
      "description": "Rolling update config params. Present only if DeploymentStrategyType = RollingUpdate.",
      "$ref": "#/definitions/v1beta1.RollingUpdateDeployment"
     },
     "type": {
      "description": "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate.",
      "type": "string"
     }
    }
   },
   "v1beta1.HorizontalPodAutoscaler": {
    "description": "configuration of a horizontal pod autoscaler.",
    "properties": {
     "metadata": {
      "description": "Standard object metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "behaviour of autoscaler. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status.",
      "$ref": "#/definitions/v1beta1.HorizontalPodAutoscalerSpec"
     },
     "status": {
      "description": "current information about the autoscaler.",
      "$ref": "#/definitions/v1beta1.HorizontalPodAutoscalerStatus"
     }
    }
   },
   "v1beta1.HorizontalPodAutoscalerList": {
    "description": "list of horizontal pod autoscaler objects.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "list of horizontal pod autoscaler objects.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1beta1.HorizontalPodAutoscaler"
      }
     },
     "metadata": {
      "description": "Standard list metadata.",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1beta1.HorizontalPodAutoscalerSpec": {
    "description": "specification of a horizontal pod autoscaler.",
    "required": [
     "scaleRef",
     "maxReplicas"
    ],
    "properties": {
     "cpuUtilization": {
      "description": "target average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified it defaults to the target CPU utilization at 80% of the requested resources.",
      "$ref": "#/definitions/v1beta1.CPUTargetUtilization"
     },
     "maxReplicas": {
      "description": "upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas.",
      "type": "integer",
      "format": "int32"
     },
     "minReplicas": {
      "description": "lower limit for the number of pods that can be set by the autoscaler, default 1.",
      "type": "integer",
      "format": "int32"
     },
     "scaleRef": {
      "description": "reference to Scale subresource; horizontal pod autoscaler will learn the current resource consumption from its status, and will set the desired number of pods by modifying its spec.",
      "$ref": "#/definitions/v1beta1.SubresourceReference"
     }
    }
   },
   "v1beta1.HorizontalPodAutoscalerStatus": {
    "description": "current status of a horizontal pod autoscaler",
    "required": [
     "currentReplicas",
     "desiredReplicas"
    ],
    "properties": {
     "currentCPUUtilizationPercentage": {
      "description": "current average CPU utilization over all pods, represented as a percentage of requested CPU, e.g. 70 means that an average pod is using now 70% of its requested CPU.",
      "type": "integer",
      "format": "int32"
     },
     "currentReplicas": {
      "description": "current number of replicas of pods managed by this autoscaler.",
      "type": "integer",
      "format": "int32"
     },
     "desiredReplicas": {
      "description": "desired number of replicas of pods managed by this autoscaler.",
      "type": "integer",
      "format": "int32"
     },
     "lastScaleTime": {
      "description": "last time the HorizontalPodAutoscaler scaled the number of pods; used by the autoscaler to control how often the number of pods is changed.",
      "$ref": "#/definitions/unversioned.Time"
     },
     "observedGeneration": {
      "description": "most recent generation observed by this autoscaler.",
      "type": "integer",
      "format": "int64"
     }
    }
   },
   "v1beta1.Ingress": {
    "description": "Ingress is a collection of rules that allow inbound connections to reach the endpoints defined by a backend. An Ingress can be configured to give services externally-reachable urls, load balance traffic, terminate SSL, offer name based virtual hosting etc.",
    "properties": {
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "Spec is the desired state of the Ingress. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1beta1.IngressSpec"
     },
     "status": {
      "description": "Status is the current state of the Ingress. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1beta1.IngressStatus"
     }
    }
   },
   "v1beta1.IngressBackend": {
    "description": "IngressBackend describes all endpoints for a given service and port.",
    "required": [
     "serviceName",
     "servicePort"
    ],
    "properties": {
     "serviceName": {
      "description": "Specifies the name of the referenced service.",
      "type": "string"
     },
     "servicePort": {
      "description": "Specifies the port of the referenced service.",
      "$ref": "#/definitions/intstr.IntOrString"
     }
    }
   },
   "v1beta1.IngressList": {
    "description": "IngressList is a collection of Ingress.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "Items is the list of Ingress.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1beta1.Ingress"
      }
     },
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1beta1.IngressRule": {
    "description": "IngressRule represents the rules mapping the paths under a specified host to the related backend services. Incoming requests are first evaluated for a host match, then routed to the backend associated with the matching IngressRuleValue.",
    "properties": {
     "host": {
      "description": "Host is the fully qualified domain name of a network host, as defined by RFC 3986. Note the following deviations from the \"host\" part of the URI as defined in the RFC: 1. IPs are not allowed. Currently an IngressRuleValue can only apply to the\n\t  IP in the Spec of the parent Ingress.\n2. The `:` delimiter is not respected because ports are not allowed.\n\t  Currently the port of an Ingress is implicitly :80 for http and\n\t  :443 for https.\nBoth these may change in the future. Incoming requests are matched against the host before the IngressRuleValue. If the host is unspecified, the Ingress routes all traffic based on the specified IngressRuleValue.",
      "type": "string"
     }
    }
   },
   "v1beta1.IngressSpec": {
    "description": "IngressSpec describes the Ingress the user wishes to exist.",
    "properties": {
     "backend": {
      "description": "A default backend capable of servicing requests that don't match any rule. At least one of 'backend' or 'rules' must be specified. This field is optional to allow the loadbalancer controller or defaulting logic to specify a global default.",
      "$ref": "#/definitions/v1beta1.IngressBackend"
     },
     "rules": {
      "description": "A list of host rules used to configure the Ingress. If unspecified, or no rule matches, all traffic is sent to the default backend.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1beta1.IngressRule"
      }
     },
     "tls": {
      "description": "TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1beta1.IngressTLS"
      }
     }
    }
   },
   "v1beta1.IngressStatus": {
    "description": "IngressStatus describe the current state of the Ingress.",
    "properties": {
     "loadBalancer": {
      "description": "LoadBalancer contains the current status of the load-balancer.",
      "$ref": "#/definitions/v1.LoadBalancerStatus"
     }
    }
   },
   "v1beta1.IngressTLS": {
    "description": "IngressTLS describes the transport layer security associated with an Ingress.",
    "properties": {
     "hosts": {
      "description": "Hosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "secretName": {
      "description": "SecretName is the name of the secret used to terminate SSL traffic on 443. Field is left optional to allow SSL routing based on SNI hostname alone. If the SNI host in a listener conflicts with the \"Host\" header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing.",
      "type": "string"
     }
    }
   },
   "v1beta1.Job": {
    "description": "Job represents the configuration of a single job.",
    "properties": {
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "Spec is a structure defining the expected behavior of a job. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1beta1.JobSpec"
     },
     "status": {
      "description": "Status is a structure describing current status of a job. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1beta1.JobStatus"
     }
    }
   },
   "v1beta1.JobCondition": {
    "description": "JobCondition describes current state of a job.",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "lastProbeTime": {
      "description": "Last time the condition was checked.",
      "$ref": "#/definitions/unversioned.Time"
     },
     "lastTransitionTime": {
      "description": "Last time the condition transit from one status to another.",
      "$ref": "#/definitions/unversioned.Time"
     },
     "message": {
      "description": "Human readable message indicating details about last transition.",
      "type": "string"
     },
     "reason": {
      "description": "(brief) reason for the condition's last transition.",
      "type": "string"
     },
     "status": {
      "description": "Status of the condition, one of True, False, Unknown.",
      "type": "string"
     },
     "type": {
      "description": "Type of job condition, Complete or Failed.",
      "type": "string"
     }
    }
   },
   "v1beta1.JobList": {
    "description": "JobList is a collection of jobs.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "Items is the list of Job.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1beta1.Job"
      }
     },
     "metadata": {
      "description": "Standard list metadata More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1beta1.JobSpec": {
    "description": "JobSpec describes how the job execution will look like.",
    "required": [
     "template"
    ],
    "properties": {
     "activeDeadlineSeconds": {
      "description": "Optional duration in seconds relative to the startTime that the job may be active before the system tries to terminate it; value must be positive integer",
      "type": "integer",
      "format": "int64"
     },
     "autoSelector": {
      "description": "AutoSelector controls generation of pod labels and pod selectors. It was not present in the original extensions/v1beta1 Job definition, but exists to allow conversion from batch/v1 Jobs, where it corresponds to, but has the opposite meaning as, ManualSelector. More info: http://releases.k8s.io/HEAD/docs/design/selector-generation.md",
      "type": "boolean"
     },
     "completions": {
      "description": "Completions specifies the desired number of successfully finished pods the job should be run with.  Setting to nil means that the success of any pod signals the success of all pods, and allows parallelism to have any positive value.  Setting to 1 means that parallelism is limited to 1 and the success of that pod signals the success of the job. More info: http://kubernetes.io/docs/user-guide/jobs",
      "type": "integer",
      "format": "int32"
     },
     "parallelism": {
      "description": "Parallelism specifies the maximum desired number of pods the job should run at any given time. The actual number of pods running in steady state will be less than this number when ((.spec.completions - .status.successful) \u003c .spec.parallelism), i.e. when the work left to do is less than max parallelism. More info: http://kubernetes.io/docs/user-guide/jobs",
      "type": "integer",
      "format": "int32"
     },
     "selector": {
      "description": "Selector is a label query over pods that should match the pod count. Normally, the system sets this field for you. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors",
      "$ref": "#/definitions/v1beta1.LabelSelector"
     },
     "template": {
      "description": "Template is the object that describes the pod that will be created when executing a job. More info: http://kubernetes.io/docs/user-guide/jobs",
      "$ref": "#/definitions/v1.PodTemplateSpec"
     }
    }
   },
   "v1beta1.JobStatus": {
    "description": "JobStatus represents the current state of a Job.",
    "properties": {
     "active": {
      "description": "Active is the number of actively running pods.",
      "type": "integer",
      "format": "int32"
     },
     "completionTime": {
      "description": "CompletionTime represents time when the job was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC.",
      "$ref": "#/definitions/unversioned.Time"
     },
     "conditions": {
      "description": "Conditions represent the latest available observations of an object's current state. More info: http://kubernetes.io/docs/user-guide/jobs",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1beta1.JobCondition"
      }
     },
     "failed": {
      "description": "Failed is the number of pods which reached Phase Failed.",
      "type": "integer",
      "format": "int32"
     },
     "startTime": {
      "description": "StartTime represents time when the job was acknowledged by the Job Manager. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC.",
      "$ref": "#/definitions/unversioned.Time"
     },
     "succeeded": {
      "description": "Succeeded is the number of pods which reached Phase Succeeded.",
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1beta1.LabelSelector": {
    "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
    "properties": {
     "matchExpressions": {
      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1beta1.LabelSelectorRequirement"
      }
     },
     "matchLabels": {
      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     }
    }
   },
   "v1beta1.LabelSelectorRequirement": {
    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
    "required": [
     "key",
     "operator"
    ],
    "properties": {
     "key": {
      "description": "key is the label key that the selector applies to.",
      "type": "string"
     },
     "operator": {
      "description": "operator represents a key's relationship to a set of values. Valid operators ard In, NotIn, Exists and DoesNotExist.",
      "type": "string"
     },
     "values": {
      "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },
   "v1beta1.LocalSubjectAccessReview": {
    "description": "LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace. Having a namespace scoped resource makes it much easier to grant namespace scoped policy that includes permissions checking.",
    "required": [
     "spec"
    ],
    "properties": {
     "metadata": {
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "Spec holds information about the request being evaluated.  spec.namespace must be equal to the namespace you made the request against.  If empty, it is defaulted.",
      "$ref": "#/definitions/v1beta1.SubjectAccessReviewSpec"
     },
     "status": {
      "description": "Status is filled in by the server and indicates whether the request is allowed or not",
      "$ref": "#/definitions/v1beta1.SubjectAccessReviewStatus"
     }
    }
   },
   "v1beta1.NetworkPolicy": {
    "properties": {
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "Specification of the desired behavior for this NetworkPolicy.",
      "$ref": "#/definitions/v1beta1.NetworkPolicySpec"
     }
    }
   },
   "v1beta1.NetworkPolicyIngressRule": {
    "description": "This NetworkPolicyIngressRule matches traffic if and only if the traffic matches both ports AND from.",
    "properties": {
     "from": {
      "description": "List of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is not provided, this rule matches all sources (traffic not restricted by source). If this field is empty, this rule matches no sources (no traffic matches). If this field is present and contains at least on item, this rule allows traffic only if the traffic matches at least one item in the from list.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1beta1.NetworkPolicyPeer"
      }
     },
     "ports": {
      "description": "List of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is not provided, this rule matches all ports (traffic not restricted by port). If this field is empty, this rule matches no ports (no traffic matches). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1beta1.NetworkPolicyPort"
      }
     }
    }
   },
   "v1beta1.NetworkPolicyList": {
    "description": "Network Policy List is a list of NetworkPolicy objects.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "Items is a list of schema objects.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1beta1.NetworkPolicy"
      }
     },
     "metadata": {
      "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1beta1.NetworkPolicyPeer": {
    "properties": {
     "namespaceSelector": {
      "description": "Selects Namespaces using cluster scoped-labels.  This matches all pods in all namespaces selected by this label selector. This field follows standard label selector semantics. If omitted, this selector selects no namespaces. If present but empty, this selector selects all namespaces.",
      "$ref": "#/definitions/v1beta1.LabelSelector"
     },
     "podSelector": {
      "description": "This is a label selector which selects Pods in this namespace. This field follows standard label selector semantics. If not provided, this selector selects no pods. If present but empty, this selector selects all pods in this namespace.",
      "$ref": "#/definitions/v1beta1.LabelSelector"
     }
    }
   },
   "v1beta1.NetworkPolicyPort": {
    "properties": {
     "port": {
      "description": "If specified, the port on the given protocol.  This can either be a numerical or named port on a pod.  If this field is not provided, this matches all port names and numbers. If present, only traffic on the specified protocol AND port will be matched.",
      "$ref": "#/definitions/intstr.IntOrString"
     },
     "protocol": {
      "description": "Optional.  The protocol (TCP or UDP) which traffic must match. If not specified, this field defaults to TCP.",
      "type": "string"
     }
    }
   },
   "v1beta1.NetworkPolicySpec": {
    "required": [
     "podSelector"
    ],
    "properties": {
     "ingress": {
      "description": "List of ingress rules to be applied to the selected pods. Traffic is allowed to a pod if namespace.networkPolicy.ingress.isolation is undefined and cluster policy allows it, OR if the traffic source is the pod's local node, OR if the traffic matches at least one ingress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy does not affect ingress isolation. If this field is present and contains at least one rule, this policy allows any traffic which matches at least one of the ingress rules in this list.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1beta1.NetworkPolicyIngressRule"
      }
     },
     "podSelector": {
      "description": "Selects the pods to which this NetworkPolicy object applies.  The array of ingress rules is applied to any pods selected by this field. Multiple network policies can select the same set of pods.  In this case, the ingress rules for each are combined additively. This field is NOT optional and follows standard label selector semantics. An empty podSelector matches all pods in this namespace.",
      "$ref": "#/definitions/v1beta1.LabelSelector"
     }
    }
   },
   "v1beta1.NonResourceAttributes": {
    "description": "NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface",
    "properties": {
     "path": {
      "description": "Path is the URL path of the request",
      "type": "string"
     },
     "verb": {
      "description": "Verb is the standard HTTP verb",
      "type": "string"
     }
    }
   },
   "v1beta1.ReplicaSet": {
    "description": "ReplicaSet represents the configuration of a ReplicaSet.",
    "properties": {
     "metadata": {
      "description": "If the Labels of a ReplicaSet are empty, they are defaulted to be the same as the Pod(s) that the ReplicaSet manages. Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "Spec defines the specification of the desired behavior of the ReplicaSet. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1beta1.ReplicaSetSpec"
     },
     "status": {
      "description": "Status is the most recently observed status of the ReplicaSet. This data may be out of date by some window of time. Populated by the system. Read-only. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1beta1.ReplicaSetStatus"
     }
    }
   },
   "v1beta1.ReplicaSetList": {
    "description": "ReplicaSetList is a collection of ReplicaSets.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "List of ReplicaSets. More info: http://kubernetes.io/docs/user-guide/replication-controller",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1beta1.ReplicaSet"
      }
     },
     "metadata": {
      "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1beta1.ReplicaSetSpec": {
    "description": "ReplicaSetSpec is the specification of a ReplicaSet.",
    "properties": {
     "minReadySeconds": {
      "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
      "type": "integer",
      "format": "int32"
     },
     "replicas": {
      "description": "Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: http://kubernetes.io/docs/user-guide/replication-controller#what-is-a-replication-controller",
      "type": "integer",
      "format": "int32"
     },
     "selector": {
      "description": "Selector is a label query over pods that should match the replica count. If the selector is empty, it is defaulted to the labels present on the pod template. Label keys and values that must match in order to be controlled by this replica set. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors",
      "$ref": "#/definitions/v1beta1.LabelSelector"
     },
     "template": {
      "description": "Template is the object that describes the pod that will be created if insufficient replicas are detected. More info: http://kubernetes.io/docs/user-guide/replication-controller#pod-template",
      "$ref": "#/definitions/v1.PodTemplateSpec"
     }
    }
   },
   "v1beta1.ReplicaSetStatus": {
    "description": "ReplicaSetStatus represents the current status of a ReplicaSet.",
    "required": [
     "replicas"
    ],
    "properties": {
     "availableReplicas": {
      "description": "The number of available replicas (ready for at least minReadySeconds) for this replica set.",
      "type": "integer",
      "format": "int32"
     },
     "fullyLabeledReplicas": {
      "description": "The number of pods that have labels matching the labels of the pod template of the replicaset.",
      "type": "integer",
      "format": "int32"
     },
     "observedGeneration": {
      "description": "ObservedGeneration reflects the generation of the most recently observed ReplicaSet.",
      "type": "integer",
      "format": "int64"
     },
     "readyReplicas": {
      "description": "The number of ready replicas for this replica set.",
      "type": "integer",
      "format": "int32"
     },
     "replicas": {
      "description": "Replicas is the most recently oberved number of replicas. More info: http://kubernetes.io/docs/user-guide/replication-controller#what-is-a-replication-controller",
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1beta1.ResourceAttributes": {
    "description": "ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface",
    "properties": {
     "group": {
      "description": "Group is the API Group of the Resource.  \"*\" means all.",
      "type": "string"
     },
     "name": {
      "description": "Name is the name of the resource being requested for a \"get\" or deleted for a \"delete\". \"\" (empty) means all.",
      "type": "string"
     },
     "namespace": {
      "description": "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces \"\" (empty) is defaulted for LocalSubjectAccessReviews \"\" (empty) is empty for cluster-scoped resources \"\" (empty) means \"all\" for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview",
      "type": "string"
     },
     "resource": {
      "description": "Resource is one of the existing resource types.  \"*\" means all.",
      "type": "string"
     },
     "subresource": {
      "description": "Subresource is one of the existing resource types.  \"\" means none.",
      "type": "string"
     },
     "verb": {
      "description": "Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy.  \"*\" means all.",
      "type": "string"
     },
     "version": {
      "description": "Version is the API Version of the Resource.  \"*\" means all.",
      "type": "string"
     }
    }
   },
   "v1beta1.RollbackConfig": {
    "properties": {
     "revision": {
      "description": "The revision to rollback to. If set to 0, rollbck to the last revision.",
      "type": "integer",
      "format": "int64"
     }
    }
   },
   "v1beta1.RollingUpdateDeployment": {
    "description": "Spec to control the desired behavior of rolling update.",
    "properties": {
     "maxSurge": {
      "description": "The maximum number of pods that can be scheduled above the desired number of pods. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. By default, a value of 1 is used. Example: when this is set to 30%, the new RC can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods. Once old pods have been killed, new RC can be scaled up further, ensuring that total number of pods running at any time during the update is atmost 130% of desired pods.",
      "$ref": "#/definitions/intstr.IntOrString"
     },
     "maxUnavailable": {
      "description": "The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding up. This can not be 0 if MaxSurge is 0. By default, a fixed value of 1 is used. Example: when this is set to 30%, the old RC can be scaled down to 70% of desired pods immediately when the rolling update starts. Once new pods are ready, old RC can be scaled down further, followed by scaling up the new RC, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods.",
      "$ref": "#/definitions/intstr.IntOrString"
     }
    }
   },
   "v1beta1.Scale": {
    "description": "represents a scaling request for a resource.",
    "properties": {
     "metadata": {
      "description": "Standard object metadata; More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata.",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "defines the behavior of the scale. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status.",
      "$ref": "#/definitions/v1beta1.ScaleSpec"
     },
     "status": {
      "description": "current status of the scale. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status. Read-only.",
      "$ref": "#/definitions/v1beta1.ScaleStatus"
     }
    }
   },
   "v1beta1.ScaleSpec": {
    "description": "describes the attributes of a scale subresource",
    "properties": {
     "replicas": {
      "description": "desired number of instances for the scaled object.",
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1beta1.ScaleStatus": {
    "description": "represents the current status of a scale subresource.",
    "required": [
     "replicas"
    ],
    "properties": {
     "replicas": {
      "description": "actual number of observed instances of the scaled object.",
      "type": "integer",
      "format": "int32"
     },
     "selector": {
      "description": "label query over pods that should match the replicas count. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "targetSelector": {
      "description": "label selector for pods that should match the replicas count. This is a serializated version of both map-based and more expressive set-based selectors. This is done to avoid introspection in the clients. The string will be in the same format as the query-param syntax. If the target type only supports map-based selectors, both this field and map-based selector field are populated. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors",
      "type": "string"
     }
    }
   },
   "v1beta1.SelfSubjectAccessReview": {
    "description": "SelfSubjectAccessReview checks whether or the current user can perform an action.  Not filling in a spec.namespace means \"in all namespaces\".  Self is a special case, because users should always be able to check whether they can perform an action",
    "required": [
     "spec"
    ],
    "properties": {
     "metadata": {
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "Spec holds information about the request being evaluated.  user and groups must be empty",
      "$ref": "#/definitions/v1beta1.SelfSubjectAccessReviewSpec"
     },
     "status": {
      "description": "Status is filled in by the server and indicates whether the request is allowed or not",
      "$ref": "#/definitions/v1beta1.SubjectAccessReviewStatus"
     }
    }
   },
   "v1beta1.SelfSubjectAccessReviewSpec": {
    "description": "SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set",
    "properties": {
     "nonResourceAttributes": {
      "description": "NonResourceAttributes describes information for a non-resource access request",
      "$ref": "#/definitions/v1beta1.NonResourceAttributes"
     },
     "resourceAttributes": {
      "description": "ResourceAuthorizationAttributes describes information for a resource access request",
      "$ref": "#/definitions/v1beta1.ResourceAttributes"
     }
    }
   },
   "v1beta1.StorageClass": {
    "description": "StorageClass describes the parameters for a class of storage for which PersistentVolumes can be dynamically provisioned.\n\nStorageClasses are non-namespaced; the name of the storage class according to etcd is in ObjectMeta.Name.",
    "required": [
     "provisioner"
    ],
    "properties": {
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "parameters": {
      "description": "Parameters holds the parameters for the provisioner that should create volumes of this storage class.",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "provisioner": {
      "description": "Provisioner indicates the type of the provisioner.",
      "type": "string"
     }
    }
   },
   "v1beta1.StorageClassList": {
    "description": "StorageClassList is a collection of storage classes.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "Items is the list of StorageClasses",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1beta1.StorageClass"
      }
     },
     "metadata": {
      "description": "Standard list metadata More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1beta1.SubjectAccessReview": {
    "description": "SubjectAccessReview checks whether or not a user or group can perform an action.",
    "required": [
     "spec"
    ],
    "properties": {
     "metadata": {
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "Spec holds information about the request being evaluated",
      "$ref": "#/definitions/v1beta1.SubjectAccessReviewSpec"
     },
     "status": {
      "description": "Status is filled in by the server and indicates whether the request is allowed or not",
      "$ref": "#/definitions/v1beta1.SubjectAccessReviewStatus"
     }
    }
   },
   "v1beta1.SubjectAccessReviewSpec": {
    "description": "SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set",
    "properties": {
     "extra": {
      "description": "Extra corresponds to the user.Info.GetExtra() method from the authenticator.  Since that is input to the authorizer it needs a reflection here.",
      "type": "object",
      "additionalProperties": {
       "type": "array",
       "items": {
        "type": "string"
       }
      }
     },
     "group": {
      "description": "Groups is the groups you're testing for.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "nonResourceAttributes": {
      "description": "NonResourceAttributes describes information for a non-resource access request",
      "$ref": "#/definitions/v1beta1.NonResourceAttributes"
     },
     "resourceAttributes": {
      "description": "ResourceAuthorizationAttributes describes information for a resource access request",
      "$ref": "#/definitions/v1beta1.ResourceAttributes"
     },
     "user": {
      "description": "User is the user you're testing for. If you specify \"User\" but not \"Group\", then is it interpreted as \"What if User were not a member of any groups",
      "type": "string"
     }
    }
   },
   "v1beta1.SubjectAccessReviewStatus": {
    "description": "SubjectAccessReviewStatus",
    "required": [
     "allowed"
    ],
    "properties": {
     "allowed": {
      "description": "Allowed is required.  True if the action would be allowed, false otherwise.",
      "type": "boolean"
     },
     "evaluationError": {
      "description": "EvaluationError is an indication that some error occurred during the authorization check. It is entirely possible to get an error and be able to continue determine authorization status in spite of it. For instance, RBAC can be missing a role, but enough roles are still present and bound to reason about the request.",
      "type": "string"
     },
     "reason": {
      "description": "Reason is optional.  It indicates why a request was allowed or denied.",
      "type": "string"
     }
    }
   },
   "v1beta1.SubresourceReference": {
    "description": "SubresourceReference contains enough information to let you inspect or modify the referred subresource.",
    "properties": {
     "apiVersion": {
      "description": "API version of the referent",
      "type": "string"
     },
     "kind": {
      "description": "Kind of the referent; More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "name": {
      "description": "Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names",
      "type": "string"
     },
     "subresource": {
      "description": "Subresource name of the referent",
      "type": "string"
     }
    }
   },
   "v1beta1.ThirdPartyResource": {
    "description": "A ThirdPartyResource is a generic representation of a resource, it is used by add-ons and plugins to add new resource types to the API.  It consists of one or more Versions of the api.",
    "properties": {
     "description": {
      "description": "Description is the description of this object.",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "versions": {
      "description": "Versions are versions for this third party object",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1beta1.APIVersion"
      }
     }
    }
   },
   "v1beta1.ThirdPartyResourceList": {
    "description": "ThirdPartyResourceList is a list of ThirdPartyResources.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "Items is the list of ThirdPartyResources.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1beta1.ThirdPartyResource"
      }
     },
     "metadata": {
      "description": "Standard list metadata.",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1beta1.TokenReview": {
    "description": "TokenReview attempts to authenticate a token to a known user. Note: TokenReview requests may be cached by the webhook token authenticator plugin in the kube-apiserver.",
    "required": [
     "spec"
    ],
    "properties": {
     "metadata": {
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "Spec holds information about the request being evaluated",
      "$ref": "#/definitions/v1beta1.TokenReviewSpec"
     },
     "status": {
      "description": "Status is filled in by the server and indicates whether the request can be authenticated.",
      "$ref": "#/definitions/v1beta1.TokenReviewStatus"
     }
    }
   },
   "v1beta1.TokenReviewSpec": {
    "description": "TokenReviewSpec is a description of the token authentication request.",
    "properties": {
     "token": {
      "description": "Token is the opaque bearer token.",
      "type": "string"
     }
    }
   },
   "v1beta1.TokenReviewStatus": {
    "description": "TokenReviewStatus is the result of the token authentication request.",
    "properties": {
     "authenticated": {
      "description": "Authenticated indicates that the token was associated with a known user.",
      "type": "boolean"
     },
     "error": {
      "description": "Error indicates that the token couldn't be checked",
      "type": "string"
     },
     "user": {
      "description": "User is the UserInfo associated with the provided token.",
      "$ref": "#/definitions/v1beta1.UserInfo"
     }
    }
   },
   "v1beta1.UserInfo": {
    "description": "UserInfo holds the information about the user needed to implement the user.Info interface.",
    "properties": {
     "extra": {
      "description": "Any additional information provided by the authenticator.",
      "type": "object",
      "additionalProperties": {
       "type": "array",
       "items": {
        "type": "string"
       }
      }
     },
     "groups": {
      "description": "The names of groups this user is a part of.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "uid": {
      "description": "A unique value that identifies this user across time. If this user is deleted and another user by the same name is added, they will have different UIDs.",
      "type": "string"
     },
     "username": {
      "description": "The name that uniquely identifies this user among all active users.",
      "type": "string"
     }
    }
   },
   "version.Info": {
    "description": "Info contains versioning information. how we'll want to distribute that information.",
    "required": [
     "major",
     "minor",
     "gitVersion",
     "gitCommit",
     "gitTreeState",
     "buildDate",
     "goVersion",
     "compiler",
     "platform"
    ],
    "properties": {
     "buildDate": {
      "type": "string"
     },
     "compiler": {
      "type": "string"
     },
     "gitCommit": {
      "type": "string"
     },
     "gitTreeState": {
      "type": "string"
     },
     "gitVersion": {
      "type": "string"
     },
     "goVersion": {
      "type": "string"
     },
     "major": {
      "type": "string"
     },
     "minor": {
      "type": "string"
     },
     "platform": {
      "type": "string"
     }
    }
   },
   "versioned.Event": {
    "description": "Event represents a single event to a watched resource.",
    "required": [
     "type",
     "object"
    ],
    "properties": {
     "object": {
      "description": "Object is:\n * If Type is Added or Modified: the new state of the object.\n * If Type is Deleted: the state of the object immediately before deletion.\n * If Type is Error: *api.Status is recommended; other types may make sense\n   depending on context.",
      "$ref": "#/definitions/runtime.RawExtension"
     },
     "type": {
      "type": "string"
     }
    }
   }
  }
 }
