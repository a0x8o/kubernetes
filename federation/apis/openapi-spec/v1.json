{
  "swagger": "2.0",
  "info": {
   "title": "Generic API Server /api/v1",
   "version": "unversioned"
  },
  "paths": {
   "/api/v1/": {
    "get": {
     "description": "get available resources",
     "consumes": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "getAPIResources",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.APIResourceList"
       }
      }
     }
    }
   },
   "/api/v1/events": {
    "get": {
     "description": "list or watch objects of kind Event",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listEventForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.EventList"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces": {
    "get": {
     "description": "list or watch objects of kind Namespace",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listNamespace",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.NamespaceList"
       }
      }
     }
    },
    "post": {
     "description": "create a Namespace",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespace",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Namespace"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Namespace"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of Namespace",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionNamespace",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/events": {
    "get": {
     "description": "list or watch objects of kind Event",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listNamespacedEvent",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.EventList"
       }
      }
     }
    },
    "post": {
     "description": "create a Event",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespacedEvent",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Event"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Event"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of Event",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionNamespacedEvent",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/events/{name}": {
    "get": {
     "description": "read the specified Event",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedEvent",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.`",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Event"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified Event",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedEvent",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Event"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Event"
       }
      }
     }
    },
    "delete": {
     "description": "delete a Event",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteNamespacedEvent",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified Event",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedEvent",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Event",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/secrets": {
    "get": {
     "description": "list or watch objects of kind Secret",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listNamespacedSecret",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.SecretList"
       }
      }
     }
    },
    "post": {
     "description": "create a Secret",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespacedSecret",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Secret"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Secret"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of Secret",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionNamespacedSecret",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/secrets/{name}": {
    "get": {
     "description": "read the specified Secret",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedSecret",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.`",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Secret"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified Secret",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedSecret",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Secret"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Secret"
       }
      }
     }
    },
    "delete": {
     "description": "delete a Secret",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteNamespacedSecret",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified Secret",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedSecret",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Secret"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Secret",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/services": {
    "get": {
     "description": "list or watch objects of kind Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listNamespacedService",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ServiceList"
       }
      }
     }
    },
    "post": {
     "description": "create a Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "createNamespacedService",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Service"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Service"
       }
      }
     }
    },
    "delete": {
     "description": "delete collection of Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deletecollectionNamespacedService",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/services/{name}": {
    "get": {
     "description": "read the specified Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedService",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.`",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Service"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedService",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Service"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Service"
       }
      }
     }
    },
    "delete": {
     "description": "delete a Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteNamespacedService",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified Service",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedService",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Service"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Service",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{namespace}/services/{name}/status": {
    "get": {
     "description": "read status of the specified Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespacedServiceStatus",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Service"
       }
      }
     }
    },
    "put": {
     "description": "replace status of the specified Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespacedServiceStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Service"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Service"
       }
      }
     }
    },
    "patch": {
     "description": "partially update status of the specified Service",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespacedServiceStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Service"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Service",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{name}": {
    "get": {
     "description": "read the specified Namespace",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespace",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.`",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Namespace"
       }
      }
     }
    },
    "put": {
     "description": "replace the specified Namespace",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespace",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Namespace"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Namespace"
       }
      }
     }
    },
    "delete": {
     "description": "delete a Namespace",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "deleteNamespace",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/unversioned.Status"
       }
      }
     }
    },
    "patch": {
     "description": "partially update the specified Namespace",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespace",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Namespace"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Namespace",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{name}/finalize": {
    "put": {
     "description": "replace finalize of the specified Namespace",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespaceFinalize",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Namespace"
       }
      }
     }
    },
    "parameters": [
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/v1.Namespace"
      }
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Namespace",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/namespaces/{name}/status": {
    "get": {
     "description": "read status of the specified Namespace",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "readNamespaceStatus",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Namespace"
       }
      }
     }
    },
    "put": {
     "description": "replace status of the specified Namespace",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "replaceNamespaceStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Namespace"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Namespace"
       }
      }
     }
    },
    "patch": {
     "description": "partially update status of the specified Namespace",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "patchNamespaceStatus",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/unversioned.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Namespace"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Namespace",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/secrets": {
    "get": {
     "description": "list or watch objects of kind Secret",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listSecretForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.SecretList"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/services": {
    "get": {
     "description": "list or watch objects of kind Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "listServiceForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.ServiceList"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/events": {
    "get": {
     "description": "watch individual changes to a list of Event",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchEventListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces": {
    "get": {
     "description": "watch individual changes to a list of Namespace",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespaceList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{namespace}/events": {
    "get": {
     "description": "watch individual changes to a list of Event",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedEventList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{namespace}/events/{name}": {
    "get": {
     "description": "watch changes to an object of kind Event",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedEvent",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Event",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{namespace}/secrets": {
    "get": {
     "description": "watch individual changes to a list of Secret",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedSecretList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{namespace}/secrets/{name}": {
    "get": {
     "description": "watch changes to an object of kind Secret",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedSecret",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Secret",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{namespace}/services": {
    "get": {
     "description": "watch individual changes to a list of Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedServiceList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{namespace}/services/{name}": {
    "get": {
     "description": "watch changes to an object of kind Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespacedService",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Service",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/namespaces/{name}": {
    "get": {
     "description": "watch changes to an object of kind Namespace",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchNamespace",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Namespace",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/secrets": {
    "get": {
     "description": "watch individual changes to a list of Secret",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchSecretListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/api/v1/watch/services": {
    "get": {
     "description": "watch individual changes to a list of Service",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "operationId": "watchServiceListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/versioned.Event"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   }
  },
  "definitions": {
   "intstr.IntOrString": {
    "type": "string",
    "format": "int-or-string"
   },
   "runtime.RawExtension": {
    "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.\n\n// Internal package: type MyAPIObject struct {\n\truntime.TypeMeta `json:\",inline\"`\n\tMyPlugin runtime.Object `json:\"myPlugin\"`\n} type PluginA struct {\n\tAOption string `json:\"aOption\"`\n}\n\n// External package: type MyAPIObject struct {\n\truntime.TypeMeta `json:\",inline\"`\n\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n} type PluginA struct {\n\tAOption string `json:\"aOption\"`\n}\n\n// On the wire, the JSON will look something like this: {\n\t\"kind\":\"MyAPIObject\",\n\t\"apiVersion\":\"v1\",\n\t\"myPlugin\": {\n\t\t\"kind\":\"PluginA\",\n\t\t\"aOption\":\"foo\",\n\t},\n}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)",
    "required": [
     "Raw"
    ],
    "properties": {
     "Raw": {
      "description": "Raw is the underlying serialization of this object.",
      "type": "string",
      "format": "byte"
     }
    }
   },
   "unversioned.APIResource": {
    "description": "APIResource specifies the name of a resource and whether it is namespaced.",
    "required": [
     "name",
     "namespaced",
     "kind"
    ],
    "properties": {
     "kind": {
      "description": "kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')",
      "type": "string"
     },
     "name": {
      "description": "name is the name of the resource.",
      "type": "string"
     },
     "namespaced": {
      "description": "namespaced indicates if a resource is namespaced or not.",
      "type": "boolean"
     }
    }
   },
   "unversioned.APIResourceList": {
    "description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
    "required": [
     "groupVersion",
     "resources"
    ],
    "properties": {
     "groupVersion": {
      "description": "groupVersion is the group and version this APIResourceList is for.",
      "type": "string"
     },
     "resources": {
      "description": "resources contains the name of the resources and if they are namespaced.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/unversioned.APIResource"
      }
     }
    }
   },
   "unversioned.ListMeta": {
    "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
    "properties": {
     "resourceVersion": {
      "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency",
      "type": "string"
     },
     "selfLink": {
      "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.",
      "type": "string"
     }
    }
   },
   "unversioned.Patch": {
    "description": "Patch is provided to give a concrete name and type to the Kubernetes PATCH request body."
   },
   "unversioned.Status": {
    "description": "Status is a return value for calls that don't return other objects.",
    "properties": {
     "code": {
      "description": "Suggested HTTP return code for this status, 0 if not set.",
      "type": "integer",
      "format": "int32"
     },
     "details": {
      "description": "Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.",
      "$ref": "#/definitions/unversioned.StatusDetails"
     },
     "message": {
      "description": "A human-readable description of the status of this operation.",
      "type": "string"
     },
     "metadata": {
      "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "$ref": "#/definitions/unversioned.ListMeta"
     },
     "reason": {
      "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.",
      "type": "string"
     },
     "status": {
      "description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "type": "string"
     }
    }
   },
   "unversioned.StatusCause": {
    "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
    "properties": {
     "field": {
      "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"",
      "type": "string"
     },
     "message": {
      "description": "A human-readable description of the cause of the error.  This field may be presented as-is to a reader.",
      "type": "string"
     },
     "reason": {
      "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available.",
      "type": "string"
     }
    }
   },
   "unversioned.StatusDetails": {
    "description": "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.",
    "properties": {
     "causes": {
      "description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/unversioned.StatusCause"
      }
     },
     "group": {
      "description": "The group attribute of the resource associated with the status StatusReason.",
      "type": "string"
     },
     "kind": {
      "description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "name": {
      "description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).",
      "type": "string"
     },
     "retryAfterSeconds": {
      "description": "If specified, the time in seconds before the operation should be retried.",
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "unversioned.Time": {
    "type": "string",
    "format": "date-time"
   },
   "v1.DeleteOptions": {
    "description": "DeleteOptions may be provided when deleting an API object",
    "properties": {
     "gracePeriodSeconds": {
      "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
      "type": "integer",
      "format": "int64"
     },
     "orphanDependents": {
      "description": "Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list.",
      "type": "boolean"
     },
     "preconditions": {
      "description": "Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned.",
      "$ref": "#/definitions/v1.Preconditions"
     }
    }
   },
   "v1.Event": {
    "description": "Event is a report of an event somewhere in the cluster.",
    "required": [
     "metadata",
     "involvedObject"
    ],
    "properties": {
     "count": {
      "description": "The number of times this event has occurred.",
      "type": "integer",
      "format": "int32"
     },
     "firstTimestamp": {
      "description": "The time at which the event was first recorded. (Time of server receipt is in TypeMeta.)",
      "$ref": "#/definitions/unversioned.Time"
     },
     "involvedObject": {
      "description": "The object that this event is about.",
      "$ref": "#/definitions/v1.ObjectReference"
     },
     "lastTimestamp": {
      "description": "The time at which the most recent occurrence of this event was recorded.",
      "$ref": "#/definitions/unversioned.Time"
     },
     "message": {
      "description": "A human-readable description of the status of this operation.",
      "type": "string"
     },
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "reason": {
      "description": "This should be a short, machine understandable string that gives the reason for the transition into the object's current status.",
      "type": "string"
     },
     "source": {
      "description": "The component reporting this event. Should be a short machine understandable string.",
      "$ref": "#/definitions/v1.EventSource"
     },
     "type": {
      "description": "Type of this event (Normal, Warning), new types could be added in the future",
      "type": "string"
     }
    }
   },
   "v1.EventList": {
    "description": "EventList is a list of events.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "List of events",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.Event"
      }
     },
     "metadata": {
      "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1.EventSource": {
    "description": "EventSource contains information for an event.",
    "properties": {
     "component": {
      "description": "Component from which the event is generated.",
      "type": "string"
     },
     "host": {
      "description": "Node name on which the event is generated.",
      "type": "string"
     }
    }
   },
   "v1.LoadBalancerIngress": {
    "description": "LoadBalancerIngress represents the status of a load-balancer ingress point: traffic intended for the service should be sent to an ingress point.",
    "properties": {
     "hostname": {
      "description": "Hostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers)",
      "type": "string"
     },
     "ip": {
      "description": "IP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers)",
      "type": "string"
     }
    }
   },
   "v1.LoadBalancerStatus": {
    "description": "LoadBalancerStatus represents the status of a load-balancer.",
    "properties": {
     "ingress": {
      "description": "Ingress is a list containing ingress points for the load-balancer. Traffic intended for the service should be sent to these ingress points.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.LoadBalancerIngress"
      }
     }
    }
   },
   "v1.Namespace": {
    "description": "Namespace provides a scope for Names. Use of multiple namespaces is optional.",
    "properties": {
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "Spec defines the behavior of the Namespace. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1.NamespaceSpec"
     },
     "status": {
      "description": "Status describes the current status of a Namespace. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1.NamespaceStatus"
     }
    }
   },
   "v1.NamespaceList": {
    "description": "NamespaceList is a list of Namespaces.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "Items is the list of Namespace objects in the list. More info: http://kubernetes.io/docs/user-guide/namespaces",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.Namespace"
      }
     },
     "metadata": {
      "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1.NamespaceSpec": {
    "description": "NamespaceSpec describes the attributes on a Namespace.",
    "properties": {
     "finalizers": {
      "description": "Finalizers is an opaque list of values that must be empty to permanently remove object from storage. More info: http://releases.k8s.io/HEAD/docs/design/namespaces.md#finalizers",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },
   "v1.NamespaceStatus": {
    "description": "NamespaceStatus is information about the current status of a Namespace.",
    "properties": {
     "phase": {
      "description": "Phase is the current lifecycle phase of the namespace. More info: http://releases.k8s.io/HEAD/docs/design/namespaces.md#phases",
      "type": "string"
     }
    }
   },
   "v1.ObjectMeta": {
    "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
    "properties": {
     "annotations": {
      "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "clusterName": {
      "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
      "type": "string"
     },
     "creationTimestamp": {
      "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/unversioned.Time"
     },
     "deletionGracePeriodSeconds": {
      "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
      "type": "integer",
      "format": "int64"
     },
     "deletionTimestamp": {
      "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource will be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field. Once set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. Once the resource is deleted in the API, the Kubelet will send a hard termination signal to the container. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/unversioned.Time"
     },
     "finalizers": {
      "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "generateName": {
      "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#idempotency",
      "type": "string"
     },
     "generation": {
      "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
      "type": "integer",
      "format": "int64"
     },
     "labels": {
      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "name": {
      "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
      "type": "string"
     },
     "namespace": {
      "description": "Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
      "type": "string"
     },
     "ownerReferences": {
      "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.OwnerReference"
      }
     },
     "resourceVersion": {
      "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency",
      "type": "string"
     },
     "selfLink": {
      "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.",
      "type": "string"
     },
     "uid": {
      "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
      "type": "string"
     }
    }
   },
   "v1.ObjectReference": {
    "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
    "properties": {
     "apiVersion": {
      "description": "API version of the referent.",
      "type": "string"
     },
     "fieldPath": {
      "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.",
      "type": "string"
     },
     "kind": {
      "description": "Kind of the referent. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "name": {
      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
      "type": "string"
     },
     "namespace": {
      "description": "Namespace of the referent. More info: http://kubernetes.io/docs/user-guide/namespaces",
      "type": "string"
     },
     "resourceVersion": {
      "description": "Specific resourceVersion to which this reference is made, if any. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency",
      "type": "string"
     },
     "uid": {
      "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
      "type": "string"
     }
    }
   },
   "v1.OwnerReference": {
    "description": "OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field.",
    "required": [
     "apiVersion",
     "kind",
     "name",
     "uid"
    ],
    "properties": {
     "apiVersion": {
      "description": "API version of the referent.",
      "type": "string"
     },
     "controller": {
      "description": "If true, this reference points to the managing controller.",
      "type": "boolean"
     },
     "kind": {
      "description": "Kind of the referent. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "name": {
      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
      "type": "string"
     },
     "uid": {
      "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
      "type": "string"
     }
    }
   },
   "v1.Preconditions": {
    "description": "Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.",
    "properties": {
     "uid": {
      "description": "Specifies the target UID.",
      "type": "string"
     }
    }
   },
   "v1.Secret": {
    "description": "Secret holds secret data of a certain type. The total bytes of the values in the Data field must be less than MaxSecretSize bytes.",
    "properties": {
     "data": {
      "description": "Data contains the secret data. Each key must be a valid DNS_SUBDOMAIN or leading dot followed by valid DNS_SUBDOMAIN. The serialized form of the secret data is a base64 encoded string, representing the arbitrary (possibly non-string) data value here. Described in https://tools.ietf.org/html/rfc4648#section-4",
      "type": "object",
      "additionalProperties": {
       "type": "array",
       "items": {
        "type": "integer",
        "format": "byte"
       }
      }
     },
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "stringData": {
      "description": "stringData allows specifying non-binary secret data in string form. It is provided as a write-only convenience method. All keys and values are merged into the data field on write, overwriting any existing values. It is never output when reading from the API.",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "type": {
      "description": "Used to facilitate programmatic handling of secret data.",
      "type": "string"
     }
    }
   },
   "v1.SecretList": {
    "description": "SecretList is a list of Secret.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "Items is a list of secret objects. More info: http://kubernetes.io/docs/user-guide/secrets",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.Secret"
      }
     },
     "metadata": {
      "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1.Service": {
    "description": "Service is a named abstraction of software service (for example, mysql) consisting of local port (for example 3306) that the proxy listens on, and the selector that determines which pods will answer requests sent through the proxy.",
    "properties": {
     "metadata": {
      "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "Spec defines the behavior of a service. http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1.ServiceSpec"
     },
     "status": {
      "description": "Most recently observed status of the service. Populated by the system. Read-only. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
      "$ref": "#/definitions/v1.ServiceStatus"
     }
    }
   },
   "v1.ServiceList": {
    "description": "ServiceList holds a list of services.",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "description": "List of services",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.Service"
      }
     },
     "metadata": {
      "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "$ref": "#/definitions/unversioned.ListMeta"
     }
    }
   },
   "v1.ServicePort": {
    "description": "ServicePort contains information on service's port.",
    "required": [
     "port"
    ],
    "properties": {
     "name": {
      "description": "The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. This maps to the 'Name' field in EndpointPort objects. Optional if only one ServicePort is defined on this service.",
      "type": "string"
     },
     "nodePort": {
      "description": "The port on each node on which this service is exposed when type=NodePort or LoadBalancer. Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the ServiceType of this Service requires one. More info: http://kubernetes.io/docs/user-guide/services#type--nodeport",
      "type": "integer",
      "format": "int32"
     },
     "port": {
      "description": "The port that will be exposed by this service.",
      "type": "integer",
      "format": "int32"
     },
     "protocol": {
      "description": "The IP protocol for this port. Supports \"TCP\" and \"UDP\". Default is TCP.",
      "type": "string"
     },
     "targetPort": {
      "description": "Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: http://kubernetes.io/docs/user-guide/services#defining-a-service",
      "$ref": "#/definitions/intstr.IntOrString"
     }
    }
   },
   "v1.ServiceSpec": {
    "description": "ServiceSpec describes the attributes that a user creates on a service.",
    "required": [
     "ports"
    ],
    "properties": {
     "clusterIP": {
      "description": "clusterIP is the IP address of the service and is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are \"None\", empty string (\"\"), or a valid IP address. \"None\" can be specified for headless services when proxying is not required. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies",
      "type": "string"
     },
     "deprecatedPublicIPs": {
      "description": "deprecatedPublicIPs is deprecated and replaced by the externalIPs field with almost the exact same semantics.  This field is retained in the v1 API for compatibility until at least 8/20/2016.  It will be removed from any new API revisions.  If both deprecatedPublicIPs *and* externalIPs are set, deprecatedPublicIPs is used.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "externalIPs": {
      "description": "externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.  A previous form of this functionality exists as the deprecatedPublicIPs field.  When using this field, callers should also clear the deprecatedPublicIPs field.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "externalName": {
      "description": "externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid DNS name and requires Type to be ExternalName.",
      "type": "string"
     },
     "loadBalancerIP": {
      "description": "Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.",
      "type": "string"
     },
     "loadBalancerSourceRanges": {
      "description": "If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature.\" More info: http://kubernetes.io/docs/user-guide/services-firewalls",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "ports": {
      "description": "The list of ports that are exposed by this service. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.ServicePort"
      }
     },
     "selector": {
      "description": "Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: http://kubernetes.io/docs/user-guide/services#overview",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "sessionAffinity": {
      "description": "Supports \"ClientIP\" and \"None\". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies",
      "type": "string"
     },
     "type": {
      "description": "type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \"ExternalName\" maps to the specified externalName. \"ClusterIP\" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is \"None\", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. \"NodePort\" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. \"LoadBalancer\" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: http://kubernetes.io/docs/user-guide/services#overview",
      "type": "string"
     }
    }
   },
   "v1.ServiceStatus": {
    "description": "ServiceStatus represents the current status of a service.",
    "properties": {
     "loadBalancer": {
      "description": "LoadBalancer contains the current status of the load-balancer, if one is present.",
      "$ref": "#/definitions/v1.LoadBalancerStatus"
     }
    }
   },
   "versioned.Event": {
    "description": "Event represents a single event to a watched resource.",
    "required": [
     "type",
     "object"
    ],
    "properties": {
     "object": {
      "description": "Object is:\n * If Type is Added or Modified: the new state of the object.\n * If Type is Deleted: the state of the object immediately before deletion.\n * If Type is Error: *api.Status is recommended; other types may make sense\n   depending on context.",
      "$ref": "#/definitions/runtime.RawExtension"
     },
     "type": {
      "type": "string"
     }
    }
   }
  }
 }
